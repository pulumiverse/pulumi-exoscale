// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Fetch Exoscale [IAM](https://community.exoscale.com/documentation/iam/) Role.
 *
 * Corresponding resource: exoscale_iam_role.
 */
export function getIamRole(args?: GetIamRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetIamRoleResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("exoscale:index/getIamRole:getIamRole", {
        "id": args.id,
        "name": args.name,
        "timeouts": args.timeouts,
    }, opts);
}

/**
 * A collection of arguments for invoking getIamRole.
 */
export interface GetIamRoleArgs {
    /**
     * The role ID to match (conflicts with `name`).
     */
    id?: string;
    /**
     * the role name to match (conflicts with `id`).
     */
    name?: string;
    timeouts?: inputs.GetIamRoleTimeouts;
}

/**
 * A collection of values returned by getIamRole.
 */
export interface GetIamRoleResult {
    /**
     * A free-form text describing the IAM Role
     */
    readonly description: string;
    /**
     * Defines if IAM Role Policy is editable or not.
     */
    readonly editable: boolean;
    /**
     * The role ID to match (conflicts with `name`).
     */
    readonly id: string;
    /**
     * IAM Role labels.
     */
    readonly labels: {[key: string]: string};
    /**
     * the role name to match (conflicts with `id`).
     */
    readonly name: string;
    /**
     * IAM Role permissions.
     */
    readonly permissions: string[];
    /**
     * IAM Policy.
     */
    readonly policy: outputs.GetIamRolePolicy;
    readonly timeouts?: outputs.GetIamRoleTimeouts;
}
/**
 * Fetch Exoscale [IAM](https://community.exoscale.com/documentation/iam/) Role.
 *
 * Corresponding resource: exoscale_iam_role.
 */
export function getIamRoleOutput(args?: GetIamRoleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIamRoleResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("exoscale:index/getIamRole:getIamRole", {
        "id": args.id,
        "name": args.name,
        "timeouts": args.timeouts,
    }, opts);
}

/**
 * A collection of arguments for invoking getIamRole.
 */
export interface GetIamRoleOutputArgs {
    /**
     * The role ID to match (conflicts with `name`).
     */
    id?: pulumi.Input<string>;
    /**
     * the role name to match (conflicts with `id`).
     */
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetIamRoleTimeoutsArgs>;
}
