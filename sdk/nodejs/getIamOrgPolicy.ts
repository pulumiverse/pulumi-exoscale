// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Fetch Exoscale [IAM](https://community.exoscale.com/documentation/iam/) Organization Policy.
 *
 * Corresponding resource: exoscale_iam_org_policy.
 */
export function getIamOrgPolicy(args?: GetIamOrgPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetIamOrgPolicyResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("exoscale:index/getIamOrgPolicy:getIamOrgPolicy", {
        "timeouts": args.timeouts,
    }, opts);
}

/**
 * A collection of arguments for invoking getIamOrgPolicy.
 */
export interface GetIamOrgPolicyArgs {
    timeouts?: inputs.GetIamOrgPolicyTimeouts;
}

/**
 * A collection of values returned by getIamOrgPolicy.
 */
export interface GetIamOrgPolicyResult {
    /**
     * Default service strategy (`allow` or `deny`).
     */
    readonly defaultServiceStrategy: string;
    /**
     * The ID of this resource.
     */
    readonly id: string;
    /**
     * IAM policy services.
     */
    readonly services: {[key: string]: outputs.GetIamOrgPolicyServices};
    readonly timeouts?: outputs.GetIamOrgPolicyTimeouts;
}
/**
 * Fetch Exoscale [IAM](https://community.exoscale.com/documentation/iam/) Organization Policy.
 *
 * Corresponding resource: exoscale_iam_org_policy.
 */
export function getIamOrgPolicyOutput(args?: GetIamOrgPolicyOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIamOrgPolicyResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("exoscale:index/getIamOrgPolicy:getIamOrgPolicy", {
        "timeouts": args.timeouts,
    }, opts);
}

/**
 * A collection of arguments for invoking getIamOrgPolicy.
 */
export interface GetIamOrgPolicyOutputArgs {
    timeouts?: pulumi.Input<inputs.GetIamOrgPolicyTimeoutsArgs>;
}
