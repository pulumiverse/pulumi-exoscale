// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Fetch Exoscale [DNS](https://community.exoscale.com/product/networking/dns/) Domain Records data.
 *
 * Corresponding resource: exoscale_domain_record.
 */
export function getDomainRecord(args: GetDomainRecordArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainRecordResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("exoscale:index/getDomainRecord:getDomainRecord", {
        "domain": args.domain,
        "filter": args.filter,
    }, opts);
}

/**
 * A collection of arguments for invoking getDomainRecord.
 */
export interface GetDomainRecordArgs {
    /**
     * The exoscale.Domain name to match.
     */
    domain: string;
    /**
     * Filter to apply when looking up domain records.
     */
    filter: inputs.GetDomainRecordFilter;
}

/**
 * A collection of values returned by getDomainRecord.
 */
export interface GetDomainRecordResult {
    /**
     * The exoscale.Domain name to match.
     */
    readonly domain: string;
    /**
     * Filter to apply when looking up domain records.
     */
    readonly filter: outputs.GetDomainRecordFilter;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of matching records. Structure is documented below.
     */
    readonly records: outputs.GetDomainRecordRecord[];
}
/**
 * Fetch Exoscale [DNS](https://community.exoscale.com/product/networking/dns/) Domain Records data.
 *
 * Corresponding resource: exoscale_domain_record.
 */
export function getDomainRecordOutput(args: GetDomainRecordOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDomainRecordResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("exoscale:index/getDomainRecord:getDomainRecord", {
        "domain": args.domain,
        "filter": args.filter,
    }, opts);
}

/**
 * A collection of arguments for invoking getDomainRecord.
 */
export interface GetDomainRecordOutputArgs {
    /**
     * The exoscale.Domain name to match.
     */
    domain: pulumi.Input<string>;
    /**
     * Filter to apply when looking up domain records.
     */
    filter: pulumi.Input<inputs.GetDomainRecordFilterArgs>;
}
