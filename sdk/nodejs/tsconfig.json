{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "antiAffinityGroup.ts",
        "blockStorageVolume.ts",
        "blockStorageVolumeSnapshot.ts",
        "computeInstance.ts",
        "config/index.ts",
        "config/vars.ts",
        "database.ts",
        "dbaas.ts",
        "dbaasKafkaUser.ts",
        "dbaasMysqlDatabase.ts",
        "dbaasMysqlUser.ts",
        "dbaasOpensearchUser.ts",
        "dbaasPgDatabase.ts",
        "dbaasPgUser.ts",
        "domain.ts",
        "domainRecord.ts",
        "elasticIp.ts",
        "getAntiAffinityGroup.ts",
        "getBlockStorageVolume.ts",
        "getBlockStorageVolumeSnapshot.ts",
        "getComputeInstance.ts",
        "getComputeInstanceList.ts",
        "getDatabaseUri.ts",
        "getDomain.ts",
        "getDomainRecord.ts",
        "getElasticIp.ts",
        "getIamApiKey.ts",
        "getIamOrgPolicy.ts",
        "getIamRole.ts",
        "getInstancePool.ts",
        "getInstancePoolList.ts",
        "getNlb.ts",
        "getNlbServiceList.ts",
        "getPrivateNetwork.ts",
        "getSecurityGroup.ts",
        "getSksCluster.ts",
        "getSksClusterList.ts",
        "getSksNodepool.ts",
        "getSksNodepoolList.ts",
        "getSosBucketPolicy.ts",
        "getTemplate.ts",
        "getZones.ts",
        "iamAccessKey.ts",
        "iamApiKey.ts",
        "iamOrgPolicy.ts",
        "iamRole.ts",
        "index.ts",
        "instancePool.ts",
        "nlb.ts",
        "nlbService.ts",
        "privateNetwork.ts",
        "provider.ts",
        "securityGroup.ts",
        "securityGroupRule.ts",
        "sksCluster.ts",
        "sksKubeconfig.ts",
        "sksNodepool.ts",
        "sosBucketPolicy.ts",
        "sshKey.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts"
    ]
}
