// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Fetch [Exoscale Block Storage](https://community.exoscale.com/product/storage/block-storage/) Snapshot.
 *
 * Block Storage offers persistent externally attached volumes for your workloads.
 *
 * Corresponding resource: exoscale_block_storage_snapshot.
 */
export function getBlockStorageVolumeSnapshot(args: GetBlockStorageVolumeSnapshotArgs, opts?: pulumi.InvokeOptions): Promise<GetBlockStorageVolumeSnapshotResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("exoscale:index/getBlockStorageVolumeSnapshot:getBlockStorageVolumeSnapshot", {
        "id": args.id,
        "timeouts": args.timeouts,
        "zone": args.zone,
    }, opts);
}

/**
 * A collection of arguments for invoking getBlockStorageVolumeSnapshot.
 */
export interface GetBlockStorageVolumeSnapshotArgs {
    /**
     * Snapshot ID to match.
     */
    id: string;
    timeouts?: inputs.GetBlockStorageVolumeSnapshotTimeouts;
    /**
     * The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
     */
    zone: string;
}

/**
 * A collection of values returned by getBlockStorageVolumeSnapshot.
 */
export interface GetBlockStorageVolumeSnapshotResult {
    /**
     * Snapshot creation date.
     */
    readonly createdAt: string;
    /**
     * Snapshot ID to match.
     */
    readonly id: string;
    /**
     * Labels.
     */
    readonly labels: {[key: string]: string};
    /**
     * Snapshot name.
     */
    readonly name: string;
    /**
     * Snapshot size in GB.
     */
    readonly size: number;
    /**
     * Snapshot state.
     */
    readonly state: string;
    readonly timeouts?: outputs.GetBlockStorageVolumeSnapshotTimeouts;
    /**
     * Block Storage Volume.
     */
    readonly volume: outputs.GetBlockStorageVolumeSnapshotVolume;
    /**
     * The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
     */
    readonly zone: string;
}
/**
 * Fetch [Exoscale Block Storage](https://community.exoscale.com/product/storage/block-storage/) Snapshot.
 *
 * Block Storage offers persistent externally attached volumes for your workloads.
 *
 * Corresponding resource: exoscale_block_storage_snapshot.
 */
export function getBlockStorageVolumeSnapshotOutput(args: GetBlockStorageVolumeSnapshotOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetBlockStorageVolumeSnapshotResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("exoscale:index/getBlockStorageVolumeSnapshot:getBlockStorageVolumeSnapshot", {
        "id": args.id,
        "timeouts": args.timeouts,
        "zone": args.zone,
    }, opts);
}

/**
 * A collection of arguments for invoking getBlockStorageVolumeSnapshot.
 */
export interface GetBlockStorageVolumeSnapshotOutputArgs {
    /**
     * Snapshot ID to match.
     */
    id: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetBlockStorageVolumeSnapshotTimeoutsArgs>;
    /**
     * The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
     */
    zone: pulumi.Input<string>;
}
