// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Fetch Exoscale [Compute Instances](https://community.exoscale.com/documentation/compute/) data.
 *
 * Corresponding resource: exoscale_compute_instance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as exoscale from "@pulumiverse/exoscale";
 *
 * const myInstance = exoscale.getComputeInstance({
 *     zone: "ch-gva-2",
 *     name: "my-instance",
 * });
 * export const myInstanceId = myInstance.then(myInstance => myInstance.id);
 * ```
 *
 * Please refer to the examples
 * directory for complete configuration examples.
 */
export function getComputeInstance(args: GetComputeInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeInstanceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("exoscale:index/getComputeInstance:getComputeInstance", {
        "id": args.id,
        "name": args.name,
        "zone": args.zone,
    }, opts);
}

/**
 * A collection of arguments for invoking getComputeInstance.
 */
export interface GetComputeInstanceArgs {
    /**
     * The compute instance ID to match (conflicts with `name`).
     */
    id?: string;
    /**
     * The instance name to match (conflicts with `id`).
     */
    name?: string;
    /**
     * The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
     */
    zone: string;
}

/**
 * A collection of values returned by getComputeInstance.
 */
export interface GetComputeInstanceResult {
    /**
     * The list of attached exoscale*anti*affinity_group (IDs).
     */
    readonly antiAffinityGroupIds: string[];
    /**
     * The compute instance creation date.
     */
    readonly createdAt: string;
    /**
     * A deploy target ID.
     */
    readonly deployTargetId: string;
    /**
     * The instance disk size (GiB).
     */
    readonly diskSize: number;
    /**
     * The list of attached exoscale*elastic*ip (IDs).
     */
    readonly elasticIpIds: string[];
    /**
     * The compute instance ID to match (conflicts with `name`).
     */
    readonly id?: string;
    /**
     * Whether IPv6 is enabled on the instance.
     */
    readonly ipv6: boolean;
    /**
     * The instance (main network interface) IPv6 address (if enabled).
     */
    readonly ipv6Address: string;
    /**
     * A map of key/value labels.
     */
    readonly labels: {[key: string]: string};
    /**
     * The instance manager ID, if any.
     */
    readonly managerId: string;
    /**
     * The instance manager type (instance pool, SKS node pool, etc.), if any.
     */
    readonly managerType: string;
    /**
     * The instance name to match (conflicts with `id`).
     */
    readonly name?: string;
    /**
     * The list of attached exoscale*private*network (IDs).
     */
    readonly privateNetworkIds: string[];
    /**
     * The instance (main network interface) IPv4 address.
     */
    readonly publicIpAddress: string;
    /**
     * Domain name for reverse DNS record.
     */
    readonly reverseDns: string;
    /**
     * The list of attached exoscale*security*group (IDs).
     */
    readonly securityGroupIds: string[];
    /**
     * The exoscale*ssh*key (name) authorized on the instance.
     *
     * @deprecated Use sshKeys instead
     */
    readonly sshKey: string;
    /**
     * The list of exoscale*ssh*key (name) authorized on the instance.
     */
    readonly sshKeys: string[];
    /**
     * The instance state.
     */
    readonly state: string;
    /**
     * The instance exoscale.getTemplate ID.
     */
    readonly templateId: string;
    /**
     * The instance type.
     */
    readonly type: string;
    /**
     * The instance [cloud-init](http://cloudinit.readthedocs.io/en/latest/) configuration.
     */
    readonly userData: string;
    /**
     * The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
     */
    readonly zone: string;
}
/**
 * Fetch Exoscale [Compute Instances](https://community.exoscale.com/documentation/compute/) data.
 *
 * Corresponding resource: exoscale_compute_instance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as exoscale from "@pulumiverse/exoscale";
 *
 * const myInstance = exoscale.getComputeInstance({
 *     zone: "ch-gva-2",
 *     name: "my-instance",
 * });
 * export const myInstanceId = myInstance.then(myInstance => myInstance.id);
 * ```
 *
 * Please refer to the examples
 * directory for complete configuration examples.
 */
export function getComputeInstanceOutput(args: GetComputeInstanceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetComputeInstanceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("exoscale:index/getComputeInstance:getComputeInstance", {
        "id": args.id,
        "name": args.name,
        "zone": args.zone,
    }, opts);
}

/**
 * A collection of arguments for invoking getComputeInstance.
 */
export interface GetComputeInstanceOutputArgs {
    /**
     * The compute instance ID to match (conflicts with `name`).
     */
    id?: pulumi.Input<string>;
    /**
     * The instance name to match (conflicts with `id`).
     */
    name?: pulumi.Input<string>;
    /**
     * The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
     */
    zone: pulumi.Input<string>;
}
