// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Lists all zones.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as exoscale from "@pulumiverse/exoscale";
 *
 * const exampleZones = exoscale.getZones({});
 * export const zonesOutput = exampleZones.then(exampleZones => exampleZones.zones);
 * ```
 *
 * Please refer to the examples
 * directory for complete configuration examples.
 */
export function getZones(opts?: pulumi.InvokeOptions): Promise<GetZonesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("exoscale:index/getZones:getZones", {
    }, opts);
}

/**
 * A collection of values returned by getZones.
 */
export interface GetZonesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * List of zones
     */
    readonly zones: string[];
}
/**
 * Lists all zones.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as exoscale from "@pulumiverse/exoscale";
 *
 * const exampleZones = exoscale.getZones({});
 * export const zonesOutput = exampleZones.then(exampleZones => exampleZones.zones);
 * ```
 *
 * Please refer to the examples
 * directory for complete configuration examples.
 */
export function getZonesOutput(opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetZonesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("exoscale:index/getZones:getZones", {
    }, opts);
}
