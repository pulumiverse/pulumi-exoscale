// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manage Exoscale [SOS Bucket Policies](https://community.exoscale.com/product/storage/object-storage/how-to/bucketpolicy/).
 */
export class SosBucketPolicy extends pulumi.CustomResource {
    /**
     * Get an existing SosBucketPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SosBucketPolicyState, opts?: pulumi.CustomResourceOptions): SosBucketPolicy {
        return new SosBucketPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'exoscale:index/sosBucketPolicy:SosBucketPolicy';

    /**
     * Returns true if the given object is an instance of SosBucketPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SosBucketPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SosBucketPolicy.__pulumiType;
    }

    /**
     * ❗ The name of the bucket to which the policy is to be applied.
     */
    declare public readonly bucket: pulumi.Output<string>;
    /**
     * The content of the policy
     */
    declare public readonly policy: pulumi.Output<string>;
    declare public readonly timeouts: pulumi.Output<outputs.SosBucketPolicyTimeouts | undefined>;
    /**
     * ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
     */
    declare public readonly zone: pulumi.Output<string>;

    /**
     * Create a SosBucketPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SosBucketPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SosBucketPolicyArgs | SosBucketPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SosBucketPolicyState | undefined;
            resourceInputs["bucket"] = state?.bucket;
            resourceInputs["policy"] = state?.policy;
            resourceInputs["timeouts"] = state?.timeouts;
            resourceInputs["zone"] = state?.zone;
        } else {
            const args = argsOrState as SosBucketPolicyArgs | undefined;
            if (args?.bucket === undefined && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            if (args?.policy === undefined && !opts.urn) {
                throw new Error("Missing required property 'policy'");
            }
            if (args?.zone === undefined && !opts.urn) {
                throw new Error("Missing required property 'zone'");
            }
            resourceInputs["bucket"] = args?.bucket;
            resourceInputs["policy"] = args?.policy;
            resourceInputs["timeouts"] = args?.timeouts;
            resourceInputs["zone"] = args?.zone;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SosBucketPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SosBucketPolicy resources.
 */
export interface SosBucketPolicyState {
    /**
     * ❗ The name of the bucket to which the policy is to be applied.
     */
    bucket?: pulumi.Input<string>;
    /**
     * The content of the policy
     */
    policy?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SosBucketPolicyTimeouts>;
    /**
     * ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SosBucketPolicy resource.
 */
export interface SosBucketPolicyArgs {
    /**
     * ❗ The name of the bucket to which the policy is to be applied.
     */
    bucket: pulumi.Input<string>;
    /**
     * The content of the policy
     */
    policy: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SosBucketPolicyTimeouts>;
    /**
     * ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
     */
    zone: pulumi.Input<string>;
}
