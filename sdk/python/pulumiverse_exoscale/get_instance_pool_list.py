# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetInstancePoolListResult',
    'AwaitableGetInstancePoolListResult',
    'get_instance_pool_list',
    'get_instance_pool_list_output',
]

@pulumi.output_type
class GetInstancePoolListResult:
    """
    A collection of values returned by getInstancePoolList.
    """
    def __init__(__self__, id=None, pools=None, zone=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if pools and not isinstance(pools, list):
            raise TypeError("Expected argument 'pools' to be a list")
        pulumi.set(__self__, "pools", pools)
        if zone and not isinstance(zone, str):
            raise TypeError("Expected argument 'zone' to be a str")
        pulumi.set(__self__, "zone", zone)

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def pools(self) -> Sequence['outputs.GetInstancePoolListPoolResult']:
        """
        The list of exoscale*instance*pool.
        """
        return pulumi.get(self, "pools")

    @property
    @pulumi.getter
    def zone(self) -> builtins.str:
        """
        The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
        """
        return pulumi.get(self, "zone")


class AwaitableGetInstancePoolListResult(GetInstancePoolListResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInstancePoolListResult(
            id=self.id,
            pools=self.pools,
            zone=self.zone)


def get_instance_pool_list(zone: Optional[builtins.str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInstancePoolListResult:
    """
    List Exoscale [Instance Pools](https://community.exoscale.com/product/compute/instances/how-to/instance-pools/).

    Corresponding resource: exoscale_instance_pool.


    :param builtins.str zone: The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
    """
    __args__ = dict()
    __args__['zone'] = zone
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('exoscale:index/getInstancePoolList:getInstancePoolList', __args__, opts=opts, typ=GetInstancePoolListResult).value

    return AwaitableGetInstancePoolListResult(
        id=pulumi.get(__ret__, 'id'),
        pools=pulumi.get(__ret__, 'pools'),
        zone=pulumi.get(__ret__, 'zone'))
def get_instance_pool_list_output(zone: Optional[pulumi.Input[builtins.str]] = None,
                                  opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetInstancePoolListResult]:
    """
    List Exoscale [Instance Pools](https://community.exoscale.com/product/compute/instances/how-to/instance-pools/).

    Corresponding resource: exoscale_instance_pool.


    :param builtins.str zone: The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
    """
    __args__ = dict()
    __args__['zone'] = zone
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('exoscale:index/getInstancePoolList:getInstancePoolList', __args__, opts=opts, typ=GetInstancePoolListResult)
    return __ret__.apply(lambda __response__: GetInstancePoolListResult(
        id=pulumi.get(__response__, 'id'),
        pools=pulumi.get(__response__, 'pools'),
        zone=pulumi.get(__response__, 'zone')))
