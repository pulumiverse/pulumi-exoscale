// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package exoscale

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-exoscale/sdk/go/exoscale/internal"
)

// ❗ Manage service database for a PostgreSQL Exoscale [Database Services (DBaaS)](https://community.exoscale.com/documentation/dbaas/).
type DbaasMysqlDatabase struct {
	pulumi.CustomResourceState

	// ❗ The name of the database for this service.
	DatabaseName pulumi.StringOutput `pulumi:"databaseName"`
	// ❗ The name of the database service.
	Service  pulumi.StringOutput                 `pulumi:"service"`
	Timeouts DbaasMysqlDatabaseTimeoutsPtrOutput `pulumi:"timeouts"`
	// ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewDbaasMysqlDatabase registers a new resource with the given unique name, arguments, and options.
func NewDbaasMysqlDatabase(ctx *pulumi.Context,
	name string, args *DbaasMysqlDatabaseArgs, opts ...pulumi.ResourceOption) (*DbaasMysqlDatabase, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatabaseName == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseName'")
	}
	if args.Service == nil {
		return nil, errors.New("invalid value for required argument 'Service'")
	}
	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DbaasMysqlDatabase
	err := ctx.RegisterResource("exoscale:index/dbaasMysqlDatabase:DbaasMysqlDatabase", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDbaasMysqlDatabase gets an existing DbaasMysqlDatabase resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDbaasMysqlDatabase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DbaasMysqlDatabaseState, opts ...pulumi.ResourceOption) (*DbaasMysqlDatabase, error) {
	var resource DbaasMysqlDatabase
	err := ctx.ReadResource("exoscale:index/dbaasMysqlDatabase:DbaasMysqlDatabase", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DbaasMysqlDatabase resources.
type dbaasMysqlDatabaseState struct {
	// ❗ The name of the database for this service.
	DatabaseName *string `pulumi:"databaseName"`
	// ❗ The name of the database service.
	Service  *string                     `pulumi:"service"`
	Timeouts *DbaasMysqlDatabaseTimeouts `pulumi:"timeouts"`
	// ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
	Zone *string `pulumi:"zone"`
}

type DbaasMysqlDatabaseState struct {
	// ❗ The name of the database for this service.
	DatabaseName pulumi.StringPtrInput
	// ❗ The name of the database service.
	Service  pulumi.StringPtrInput
	Timeouts DbaasMysqlDatabaseTimeoutsPtrInput
	// ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
	Zone pulumi.StringPtrInput
}

func (DbaasMysqlDatabaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*dbaasMysqlDatabaseState)(nil)).Elem()
}

type dbaasMysqlDatabaseArgs struct {
	// ❗ The name of the database for this service.
	DatabaseName string `pulumi:"databaseName"`
	// ❗ The name of the database service.
	Service  string                      `pulumi:"service"`
	Timeouts *DbaasMysqlDatabaseTimeouts `pulumi:"timeouts"`
	// ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
	Zone string `pulumi:"zone"`
}

// The set of arguments for constructing a DbaasMysqlDatabase resource.
type DbaasMysqlDatabaseArgs struct {
	// ❗ The name of the database for this service.
	DatabaseName pulumi.StringInput
	// ❗ The name of the database service.
	Service  pulumi.StringInput
	Timeouts DbaasMysqlDatabaseTimeoutsPtrInput
	// ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
	Zone pulumi.StringInput
}

func (DbaasMysqlDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dbaasMysqlDatabaseArgs)(nil)).Elem()
}

type DbaasMysqlDatabaseInput interface {
	pulumi.Input

	ToDbaasMysqlDatabaseOutput() DbaasMysqlDatabaseOutput
	ToDbaasMysqlDatabaseOutputWithContext(ctx context.Context) DbaasMysqlDatabaseOutput
}

func (*DbaasMysqlDatabase) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasMysqlDatabase)(nil)).Elem()
}

func (i *DbaasMysqlDatabase) ToDbaasMysqlDatabaseOutput() DbaasMysqlDatabaseOutput {
	return i.ToDbaasMysqlDatabaseOutputWithContext(context.Background())
}

func (i *DbaasMysqlDatabase) ToDbaasMysqlDatabaseOutputWithContext(ctx context.Context) DbaasMysqlDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasMysqlDatabaseOutput)
}

// DbaasMysqlDatabaseArrayInput is an input type that accepts DbaasMysqlDatabaseArray and DbaasMysqlDatabaseArrayOutput values.
// You can construct a concrete instance of `DbaasMysqlDatabaseArrayInput` via:
//
//	DbaasMysqlDatabaseArray{ DbaasMysqlDatabaseArgs{...} }
type DbaasMysqlDatabaseArrayInput interface {
	pulumi.Input

	ToDbaasMysqlDatabaseArrayOutput() DbaasMysqlDatabaseArrayOutput
	ToDbaasMysqlDatabaseArrayOutputWithContext(context.Context) DbaasMysqlDatabaseArrayOutput
}

type DbaasMysqlDatabaseArray []DbaasMysqlDatabaseInput

func (DbaasMysqlDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DbaasMysqlDatabase)(nil)).Elem()
}

func (i DbaasMysqlDatabaseArray) ToDbaasMysqlDatabaseArrayOutput() DbaasMysqlDatabaseArrayOutput {
	return i.ToDbaasMysqlDatabaseArrayOutputWithContext(context.Background())
}

func (i DbaasMysqlDatabaseArray) ToDbaasMysqlDatabaseArrayOutputWithContext(ctx context.Context) DbaasMysqlDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasMysqlDatabaseArrayOutput)
}

// DbaasMysqlDatabaseMapInput is an input type that accepts DbaasMysqlDatabaseMap and DbaasMysqlDatabaseMapOutput values.
// You can construct a concrete instance of `DbaasMysqlDatabaseMapInput` via:
//
//	DbaasMysqlDatabaseMap{ "key": DbaasMysqlDatabaseArgs{...} }
type DbaasMysqlDatabaseMapInput interface {
	pulumi.Input

	ToDbaasMysqlDatabaseMapOutput() DbaasMysqlDatabaseMapOutput
	ToDbaasMysqlDatabaseMapOutputWithContext(context.Context) DbaasMysqlDatabaseMapOutput
}

type DbaasMysqlDatabaseMap map[string]DbaasMysqlDatabaseInput

func (DbaasMysqlDatabaseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DbaasMysqlDatabase)(nil)).Elem()
}

func (i DbaasMysqlDatabaseMap) ToDbaasMysqlDatabaseMapOutput() DbaasMysqlDatabaseMapOutput {
	return i.ToDbaasMysqlDatabaseMapOutputWithContext(context.Background())
}

func (i DbaasMysqlDatabaseMap) ToDbaasMysqlDatabaseMapOutputWithContext(ctx context.Context) DbaasMysqlDatabaseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasMysqlDatabaseMapOutput)
}

type DbaasMysqlDatabaseOutput struct{ *pulumi.OutputState }

func (DbaasMysqlDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasMysqlDatabase)(nil)).Elem()
}

func (o DbaasMysqlDatabaseOutput) ToDbaasMysqlDatabaseOutput() DbaasMysqlDatabaseOutput {
	return o
}

func (o DbaasMysqlDatabaseOutput) ToDbaasMysqlDatabaseOutputWithContext(ctx context.Context) DbaasMysqlDatabaseOutput {
	return o
}

// ❗ The name of the database for this service.
func (o DbaasMysqlDatabaseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v *DbaasMysqlDatabase) pulumi.StringOutput { return v.DatabaseName }).(pulumi.StringOutput)
}

// ❗ The name of the database service.
func (o DbaasMysqlDatabaseOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v *DbaasMysqlDatabase) pulumi.StringOutput { return v.Service }).(pulumi.StringOutput)
}

func (o DbaasMysqlDatabaseOutput) Timeouts() DbaasMysqlDatabaseTimeoutsPtrOutput {
	return o.ApplyT(func(v *DbaasMysqlDatabase) DbaasMysqlDatabaseTimeoutsPtrOutput { return v.Timeouts }).(DbaasMysqlDatabaseTimeoutsPtrOutput)
}

// ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
func (o DbaasMysqlDatabaseOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *DbaasMysqlDatabase) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type DbaasMysqlDatabaseArrayOutput struct{ *pulumi.OutputState }

func (DbaasMysqlDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DbaasMysqlDatabase)(nil)).Elem()
}

func (o DbaasMysqlDatabaseArrayOutput) ToDbaasMysqlDatabaseArrayOutput() DbaasMysqlDatabaseArrayOutput {
	return o
}

func (o DbaasMysqlDatabaseArrayOutput) ToDbaasMysqlDatabaseArrayOutputWithContext(ctx context.Context) DbaasMysqlDatabaseArrayOutput {
	return o
}

func (o DbaasMysqlDatabaseArrayOutput) Index(i pulumi.IntInput) DbaasMysqlDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DbaasMysqlDatabase {
		return vs[0].([]*DbaasMysqlDatabase)[vs[1].(int)]
	}).(DbaasMysqlDatabaseOutput)
}

type DbaasMysqlDatabaseMapOutput struct{ *pulumi.OutputState }

func (DbaasMysqlDatabaseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DbaasMysqlDatabase)(nil)).Elem()
}

func (o DbaasMysqlDatabaseMapOutput) ToDbaasMysqlDatabaseMapOutput() DbaasMysqlDatabaseMapOutput {
	return o
}

func (o DbaasMysqlDatabaseMapOutput) ToDbaasMysqlDatabaseMapOutputWithContext(ctx context.Context) DbaasMysqlDatabaseMapOutput {
	return o
}

func (o DbaasMysqlDatabaseMapOutput) MapIndex(k pulumi.StringInput) DbaasMysqlDatabaseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DbaasMysqlDatabase {
		return vs[0].(map[string]*DbaasMysqlDatabase)[vs[1].(string)]
	}).(DbaasMysqlDatabaseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasMysqlDatabaseInput)(nil)).Elem(), &DbaasMysqlDatabase{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasMysqlDatabaseArrayInput)(nil)).Elem(), DbaasMysqlDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasMysqlDatabaseMapInput)(nil)).Elem(), DbaasMysqlDatabaseMap{})
	pulumi.RegisterOutputType(DbaasMysqlDatabaseOutput{})
	pulumi.RegisterOutputType(DbaasMysqlDatabaseArrayOutput{})
	pulumi.RegisterOutputType(DbaasMysqlDatabaseMapOutput{})
}
