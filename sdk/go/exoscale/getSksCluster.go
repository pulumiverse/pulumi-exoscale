// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package exoscale

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-exoscale/sdk/go/exoscale/internal"
)

func LookupSksCluster(ctx *pulumi.Context, args *LookupSksClusterArgs, opts ...pulumi.InvokeOption) (*LookupSksClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSksClusterResult
	err := ctx.Invoke("exoscale:index/getSksCluster:getSksCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSksCluster.
type LookupSksClusterArgs struct {
	// Deprecated: This attribute has been replaced by `exoscaleCcm`/`metricsServer` attributes, it will be removed in a future release.
	Addons []string `pulumi:"addons"`
	// The CA certificate (in PEM format) for TLS communications between the control plane and the aggregation layer (e.g. `metrics-server`).
	AggregationCa *string             `pulumi:"aggregationCa"`
	Audit         *GetSksClusterAudit `pulumi:"audit"`
	// Enable automatic upgrading of the control plane version.
	AutoUpgrade *bool `pulumi:"autoUpgrade"`
	// The CNI plugin that is to be used. Available options are "calico" or "cilium". Defaults to "calico". Setting empty string will result in a cluster with no CNI.
	Cni *string `pulumi:"cni"`
	// The CA certificate (in PEM format) for TLS communications between control plane components.
	ControlPlaneCa *string `pulumi:"controlPlaneCa"`
	// The cluster creation date.
	CreatedAt *string `pulumi:"createdAt"`
	// A free-form text describing the cluster.
	Description *string `pulumi:"description"`
	// ❗ Indicates whether to deploy the Kubernetes network proxy. (may only be set at creation time)
	EnableKubeProxy *bool `pulumi:"enableKubeProxy"`
	// The cluster API endpoint.
	Endpoint *string `pulumi:"endpoint"`
	// Deploy the Exoscale [Cloud Controller Manager](https://github.com/exoscale/exoscale-cloud-controller-manager/) in the control plane (boolean; default: `true`; may only be set at creation time).
	ExoscaleCcm *bool `pulumi:"exoscaleCcm"`
	// Deploy the Exoscale [Container Storage Interface](https://github.com/exoscale/exoscale-csi-driver/) on worker nodes (boolean; default: `false`; requires the CCM to be enabled).
	ExoscaleCsi *bool `pulumi:"exoscaleCsi"`
	// Feature gates options for the cluster.
	FeatureGates []string `pulumi:"featureGates"`
	// The ID of this resource.
	Id *string `pulumi:"id"`
	// The CA certificate (in PEM format) for TLS communications between kubelets and the control plane.
	KubeletCa *string `pulumi:"kubeletCa"`
	// A map of key/value labels.
	Labels map[string]string `pulumi:"labels"`
	// Deploy the [Kubernetes Metrics Server](https://github.com/kubernetes-sigs/metrics-server/) in the control plane (boolean; default: `true`; may only be set at creation time).
	MetricsServer *bool   `pulumi:"metricsServer"`
	Name          *string `pulumi:"name"`
	// The list of exoscale*sks*nodepool (IDs) attached to the cluster.
	Nodepools []string `pulumi:"nodepools"`
	// An OpenID Connect configuration to provide to the Kubernetes API server (may only be set at creation time). Structure is documented below.
	Oidc *GetSksClusterOidc `pulumi:"oidc"`
	// The service level of the control plane (`pro` or `starter`; default: `pro`; may only be set at creation time).
	ServiceLevel *string `pulumi:"serviceLevel"`
	// The cluster state.
	State *string `pulumi:"state"`
	// The version of the control plane (default: latest version available from the API; see `exo compute sks versions` for reference; may only be set at creation time).
	Version *string `pulumi:"version"`
	Zone    string  `pulumi:"zone"`
}

// A collection of values returned by getSksCluster.
type LookupSksClusterResult struct {
	// Deprecated: This attribute has been replaced by `exoscaleCcm`/`metricsServer` attributes, it will be removed in a future release.
	Addons []string `pulumi:"addons"`
	// The CA certificate (in PEM format) for TLS communications between the control plane and the aggregation layer (e.g. `metrics-server`).
	AggregationCa string              `pulumi:"aggregationCa"`
	Audit         *GetSksClusterAudit `pulumi:"audit"`
	// Enable automatic upgrading of the control plane version.
	AutoUpgrade *bool `pulumi:"autoUpgrade"`
	// The CNI plugin that is to be used. Available options are "calico" or "cilium". Defaults to "calico". Setting empty string will result in a cluster with no CNI.
	Cni *string `pulumi:"cni"`
	// The CA certificate (in PEM format) for TLS communications between control plane components.
	ControlPlaneCa string `pulumi:"controlPlaneCa"`
	// The cluster creation date.
	CreatedAt string `pulumi:"createdAt"`
	// A free-form text describing the cluster.
	Description *string `pulumi:"description"`
	// ❗ Indicates whether to deploy the Kubernetes network proxy. (may only be set at creation time)
	EnableKubeProxy bool `pulumi:"enableKubeProxy"`
	// The cluster API endpoint.
	Endpoint string `pulumi:"endpoint"`
	// Deploy the Exoscale [Cloud Controller Manager](https://github.com/exoscale/exoscale-cloud-controller-manager/) in the control plane (boolean; default: `true`; may only be set at creation time).
	ExoscaleCcm *bool `pulumi:"exoscaleCcm"`
	// Deploy the Exoscale [Container Storage Interface](https://github.com/exoscale/exoscale-csi-driver/) on worker nodes (boolean; default: `false`; requires the CCM to be enabled).
	ExoscaleCsi *bool `pulumi:"exoscaleCsi"`
	// Feature gates options for the cluster.
	FeatureGates []string `pulumi:"featureGates"`
	// The ID of this resource.
	Id *string `pulumi:"id"`
	// The CA certificate (in PEM format) for TLS communications between kubelets and the control plane.
	KubeletCa string `pulumi:"kubeletCa"`
	// A map of key/value labels.
	Labels map[string]string `pulumi:"labels"`
	// Deploy the [Kubernetes Metrics Server](https://github.com/kubernetes-sigs/metrics-server/) in the control plane (boolean; default: `true`; may only be set at creation time).
	MetricsServer *bool   `pulumi:"metricsServer"`
	Name          *string `pulumi:"name"`
	// The list of exoscale*sks*nodepool (IDs) attached to the cluster.
	Nodepools []string `pulumi:"nodepools"`
	// An OpenID Connect configuration to provide to the Kubernetes API server (may only be set at creation time). Structure is documented below.
	Oidc GetSksClusterOidc `pulumi:"oidc"`
	// The service level of the control plane (`pro` or `starter`; default: `pro`; may only be set at creation time).
	ServiceLevel *string `pulumi:"serviceLevel"`
	// The cluster state.
	State string `pulumi:"state"`
	// The version of the control plane (default: latest version available from the API; see `exo compute sks versions` for reference; may only be set at creation time).
	Version string `pulumi:"version"`
	Zone    string `pulumi:"zone"`
}

func LookupSksClusterOutput(ctx *pulumi.Context, args LookupSksClusterOutputArgs, opts ...pulumi.InvokeOption) LookupSksClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSksClusterResultOutput, error) {
			args := v.(LookupSksClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("exoscale:index/getSksCluster:getSksCluster", args, LookupSksClusterResultOutput{}, options).(LookupSksClusterResultOutput), nil
		}).(LookupSksClusterResultOutput)
}

// A collection of arguments for invoking getSksCluster.
type LookupSksClusterOutputArgs struct {
	// Deprecated: This attribute has been replaced by `exoscaleCcm`/`metricsServer` attributes, it will be removed in a future release.
	Addons pulumi.StringArrayInput `pulumi:"addons"`
	// The CA certificate (in PEM format) for TLS communications between the control plane and the aggregation layer (e.g. `metrics-server`).
	AggregationCa pulumi.StringPtrInput      `pulumi:"aggregationCa"`
	Audit         GetSksClusterAuditPtrInput `pulumi:"audit"`
	// Enable automatic upgrading of the control plane version.
	AutoUpgrade pulumi.BoolPtrInput `pulumi:"autoUpgrade"`
	// The CNI plugin that is to be used. Available options are "calico" or "cilium". Defaults to "calico". Setting empty string will result in a cluster with no CNI.
	Cni pulumi.StringPtrInput `pulumi:"cni"`
	// The CA certificate (in PEM format) for TLS communications between control plane components.
	ControlPlaneCa pulumi.StringPtrInput `pulumi:"controlPlaneCa"`
	// The cluster creation date.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// A free-form text describing the cluster.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// ❗ Indicates whether to deploy the Kubernetes network proxy. (may only be set at creation time)
	EnableKubeProxy pulumi.BoolPtrInput `pulumi:"enableKubeProxy"`
	// The cluster API endpoint.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// Deploy the Exoscale [Cloud Controller Manager](https://github.com/exoscale/exoscale-cloud-controller-manager/) in the control plane (boolean; default: `true`; may only be set at creation time).
	ExoscaleCcm pulumi.BoolPtrInput `pulumi:"exoscaleCcm"`
	// Deploy the Exoscale [Container Storage Interface](https://github.com/exoscale/exoscale-csi-driver/) on worker nodes (boolean; default: `false`; requires the CCM to be enabled).
	ExoscaleCsi pulumi.BoolPtrInput `pulumi:"exoscaleCsi"`
	// Feature gates options for the cluster.
	FeatureGates pulumi.StringArrayInput `pulumi:"featureGates"`
	// The ID of this resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The CA certificate (in PEM format) for TLS communications between kubelets and the control plane.
	KubeletCa pulumi.StringPtrInput `pulumi:"kubeletCa"`
	// A map of key/value labels.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Deploy the [Kubernetes Metrics Server](https://github.com/kubernetes-sigs/metrics-server/) in the control plane (boolean; default: `true`; may only be set at creation time).
	MetricsServer pulumi.BoolPtrInput   `pulumi:"metricsServer"`
	Name          pulumi.StringPtrInput `pulumi:"name"`
	// The list of exoscale*sks*nodepool (IDs) attached to the cluster.
	Nodepools pulumi.StringArrayInput `pulumi:"nodepools"`
	// An OpenID Connect configuration to provide to the Kubernetes API server (may only be set at creation time). Structure is documented below.
	Oidc GetSksClusterOidcPtrInput `pulumi:"oidc"`
	// The service level of the control plane (`pro` or `starter`; default: `pro`; may only be set at creation time).
	ServiceLevel pulumi.StringPtrInput `pulumi:"serviceLevel"`
	// The cluster state.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The version of the control plane (default: latest version available from the API; see `exo compute sks versions` for reference; may only be set at creation time).
	Version pulumi.StringPtrInput `pulumi:"version"`
	Zone    pulumi.StringInput    `pulumi:"zone"`
}

func (LookupSksClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSksClusterArgs)(nil)).Elem()
}

// A collection of values returned by getSksCluster.
type LookupSksClusterResultOutput struct{ *pulumi.OutputState }

func (LookupSksClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSksClusterResult)(nil)).Elem()
}

func (o LookupSksClusterResultOutput) ToLookupSksClusterResultOutput() LookupSksClusterResultOutput {
	return o
}

func (o LookupSksClusterResultOutput) ToLookupSksClusterResultOutputWithContext(ctx context.Context) LookupSksClusterResultOutput {
	return o
}

// Deprecated: This attribute has been replaced by `exoscaleCcm`/`metricsServer` attributes, it will be removed in a future release.
func (o LookupSksClusterResultOutput) Addons() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSksClusterResult) []string { return v.Addons }).(pulumi.StringArrayOutput)
}

// The CA certificate (in PEM format) for TLS communications between the control plane and the aggregation layer (e.g. `metrics-server`).
func (o LookupSksClusterResultOutput) AggregationCa() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSksClusterResult) string { return v.AggregationCa }).(pulumi.StringOutput)
}

func (o LookupSksClusterResultOutput) Audit() GetSksClusterAuditPtrOutput {
	return o.ApplyT(func(v LookupSksClusterResult) *GetSksClusterAudit { return v.Audit }).(GetSksClusterAuditPtrOutput)
}

// Enable automatic upgrading of the control plane version.
func (o LookupSksClusterResultOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupSksClusterResult) *bool { return v.AutoUpgrade }).(pulumi.BoolPtrOutput)
}

// The CNI plugin that is to be used. Available options are "calico" or "cilium". Defaults to "calico". Setting empty string will result in a cluster with no CNI.
func (o LookupSksClusterResultOutput) Cni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSksClusterResult) *string { return v.Cni }).(pulumi.StringPtrOutput)
}

// The CA certificate (in PEM format) for TLS communications between control plane components.
func (o LookupSksClusterResultOutput) ControlPlaneCa() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSksClusterResult) string { return v.ControlPlaneCa }).(pulumi.StringOutput)
}

// The cluster creation date.
func (o LookupSksClusterResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSksClusterResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// A free-form text describing the cluster.
func (o LookupSksClusterResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSksClusterResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// ❗ Indicates whether to deploy the Kubernetes network proxy. (may only be set at creation time)
func (o LookupSksClusterResultOutput) EnableKubeProxy() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSksClusterResult) bool { return v.EnableKubeProxy }).(pulumi.BoolOutput)
}

// The cluster API endpoint.
func (o LookupSksClusterResultOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSksClusterResult) string { return v.Endpoint }).(pulumi.StringOutput)
}

// Deploy the Exoscale [Cloud Controller Manager](https://github.com/exoscale/exoscale-cloud-controller-manager/) in the control plane (boolean; default: `true`; may only be set at creation time).
func (o LookupSksClusterResultOutput) ExoscaleCcm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupSksClusterResult) *bool { return v.ExoscaleCcm }).(pulumi.BoolPtrOutput)
}

// Deploy the Exoscale [Container Storage Interface](https://github.com/exoscale/exoscale-csi-driver/) on worker nodes (boolean; default: `false`; requires the CCM to be enabled).
func (o LookupSksClusterResultOutput) ExoscaleCsi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupSksClusterResult) *bool { return v.ExoscaleCsi }).(pulumi.BoolPtrOutput)
}

// Feature gates options for the cluster.
func (o LookupSksClusterResultOutput) FeatureGates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSksClusterResult) []string { return v.FeatureGates }).(pulumi.StringArrayOutput)
}

// The ID of this resource.
func (o LookupSksClusterResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSksClusterResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The CA certificate (in PEM format) for TLS communications between kubelets and the control plane.
func (o LookupSksClusterResultOutput) KubeletCa() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSksClusterResult) string { return v.KubeletCa }).(pulumi.StringOutput)
}

// A map of key/value labels.
func (o LookupSksClusterResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSksClusterResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Deploy the [Kubernetes Metrics Server](https://github.com/kubernetes-sigs/metrics-server/) in the control plane (boolean; default: `true`; may only be set at creation time).
func (o LookupSksClusterResultOutput) MetricsServer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupSksClusterResult) *bool { return v.MetricsServer }).(pulumi.BoolPtrOutput)
}

func (o LookupSksClusterResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSksClusterResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The list of exoscale*sks*nodepool (IDs) attached to the cluster.
func (o LookupSksClusterResultOutput) Nodepools() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSksClusterResult) []string { return v.Nodepools }).(pulumi.StringArrayOutput)
}

// An OpenID Connect configuration to provide to the Kubernetes API server (may only be set at creation time). Structure is documented below.
func (o LookupSksClusterResultOutput) Oidc() GetSksClusterOidcOutput {
	return o.ApplyT(func(v LookupSksClusterResult) GetSksClusterOidc { return v.Oidc }).(GetSksClusterOidcOutput)
}

// The service level of the control plane (`pro` or `starter`; default: `pro`; may only be set at creation time).
func (o LookupSksClusterResultOutput) ServiceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSksClusterResult) *string { return v.ServiceLevel }).(pulumi.StringPtrOutput)
}

// The cluster state.
func (o LookupSksClusterResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSksClusterResult) string { return v.State }).(pulumi.StringOutput)
}

// The version of the control plane (default: latest version available from the API; see `exo compute sks versions` for reference; may only be set at creation time).
func (o LookupSksClusterResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSksClusterResult) string { return v.Version }).(pulumi.StringOutput)
}

func (o LookupSksClusterResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSksClusterResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSksClusterResultOutput{})
}
