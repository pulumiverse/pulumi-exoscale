// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package exoscale

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-exoscale/sdk/go/exoscale/internal"
)

var _ = internal.GetEnvOrDefault

type BlockStorageVolumeSnapshotTarget struct {
	// Snapshot ID.
	Id *string `pulumi:"id"`
}

// BlockStorageVolumeSnapshotTargetInput is an input type that accepts BlockStorageVolumeSnapshotTargetArgs and BlockStorageVolumeSnapshotTargetOutput values.
// You can construct a concrete instance of `BlockStorageVolumeSnapshotTargetInput` via:
//
//	BlockStorageVolumeSnapshotTargetArgs{...}
type BlockStorageVolumeSnapshotTargetInput interface {
	pulumi.Input

	ToBlockStorageVolumeSnapshotTargetOutput() BlockStorageVolumeSnapshotTargetOutput
	ToBlockStorageVolumeSnapshotTargetOutputWithContext(context.Context) BlockStorageVolumeSnapshotTargetOutput
}

type BlockStorageVolumeSnapshotTargetArgs struct {
	// Snapshot ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (BlockStorageVolumeSnapshotTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockStorageVolumeSnapshotTarget)(nil)).Elem()
}

func (i BlockStorageVolumeSnapshotTargetArgs) ToBlockStorageVolumeSnapshotTargetOutput() BlockStorageVolumeSnapshotTargetOutput {
	return i.ToBlockStorageVolumeSnapshotTargetOutputWithContext(context.Background())
}

func (i BlockStorageVolumeSnapshotTargetArgs) ToBlockStorageVolumeSnapshotTargetOutputWithContext(ctx context.Context) BlockStorageVolumeSnapshotTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockStorageVolumeSnapshotTargetOutput)
}

func (i BlockStorageVolumeSnapshotTargetArgs) ToBlockStorageVolumeSnapshotTargetPtrOutput() BlockStorageVolumeSnapshotTargetPtrOutput {
	return i.ToBlockStorageVolumeSnapshotTargetPtrOutputWithContext(context.Background())
}

func (i BlockStorageVolumeSnapshotTargetArgs) ToBlockStorageVolumeSnapshotTargetPtrOutputWithContext(ctx context.Context) BlockStorageVolumeSnapshotTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockStorageVolumeSnapshotTargetOutput).ToBlockStorageVolumeSnapshotTargetPtrOutputWithContext(ctx)
}

// BlockStorageVolumeSnapshotTargetPtrInput is an input type that accepts BlockStorageVolumeSnapshotTargetArgs, BlockStorageVolumeSnapshotTargetPtr and BlockStorageVolumeSnapshotTargetPtrOutput values.
// You can construct a concrete instance of `BlockStorageVolumeSnapshotTargetPtrInput` via:
//
//	        BlockStorageVolumeSnapshotTargetArgs{...}
//
//	or:
//
//	        nil
type BlockStorageVolumeSnapshotTargetPtrInput interface {
	pulumi.Input

	ToBlockStorageVolumeSnapshotTargetPtrOutput() BlockStorageVolumeSnapshotTargetPtrOutput
	ToBlockStorageVolumeSnapshotTargetPtrOutputWithContext(context.Context) BlockStorageVolumeSnapshotTargetPtrOutput
}

type blockStorageVolumeSnapshotTargetPtrType BlockStorageVolumeSnapshotTargetArgs

func BlockStorageVolumeSnapshotTargetPtr(v *BlockStorageVolumeSnapshotTargetArgs) BlockStorageVolumeSnapshotTargetPtrInput {
	return (*blockStorageVolumeSnapshotTargetPtrType)(v)
}

func (*blockStorageVolumeSnapshotTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockStorageVolumeSnapshotTarget)(nil)).Elem()
}

func (i *blockStorageVolumeSnapshotTargetPtrType) ToBlockStorageVolumeSnapshotTargetPtrOutput() BlockStorageVolumeSnapshotTargetPtrOutput {
	return i.ToBlockStorageVolumeSnapshotTargetPtrOutputWithContext(context.Background())
}

func (i *blockStorageVolumeSnapshotTargetPtrType) ToBlockStorageVolumeSnapshotTargetPtrOutputWithContext(ctx context.Context) BlockStorageVolumeSnapshotTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockStorageVolumeSnapshotTargetPtrOutput)
}

type BlockStorageVolumeSnapshotTargetOutput struct{ *pulumi.OutputState }

func (BlockStorageVolumeSnapshotTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockStorageVolumeSnapshotTarget)(nil)).Elem()
}

func (o BlockStorageVolumeSnapshotTargetOutput) ToBlockStorageVolumeSnapshotTargetOutput() BlockStorageVolumeSnapshotTargetOutput {
	return o
}

func (o BlockStorageVolumeSnapshotTargetOutput) ToBlockStorageVolumeSnapshotTargetOutputWithContext(ctx context.Context) BlockStorageVolumeSnapshotTargetOutput {
	return o
}

func (o BlockStorageVolumeSnapshotTargetOutput) ToBlockStorageVolumeSnapshotTargetPtrOutput() BlockStorageVolumeSnapshotTargetPtrOutput {
	return o.ToBlockStorageVolumeSnapshotTargetPtrOutputWithContext(context.Background())
}

func (o BlockStorageVolumeSnapshotTargetOutput) ToBlockStorageVolumeSnapshotTargetPtrOutputWithContext(ctx context.Context) BlockStorageVolumeSnapshotTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlockStorageVolumeSnapshotTarget) *BlockStorageVolumeSnapshotTarget {
		return &v
	}).(BlockStorageVolumeSnapshotTargetPtrOutput)
}

// Snapshot ID.
func (o BlockStorageVolumeSnapshotTargetOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockStorageVolumeSnapshotTarget) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type BlockStorageVolumeSnapshotTargetPtrOutput struct{ *pulumi.OutputState }

func (BlockStorageVolumeSnapshotTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockStorageVolumeSnapshotTarget)(nil)).Elem()
}

func (o BlockStorageVolumeSnapshotTargetPtrOutput) ToBlockStorageVolumeSnapshotTargetPtrOutput() BlockStorageVolumeSnapshotTargetPtrOutput {
	return o
}

func (o BlockStorageVolumeSnapshotTargetPtrOutput) ToBlockStorageVolumeSnapshotTargetPtrOutputWithContext(ctx context.Context) BlockStorageVolumeSnapshotTargetPtrOutput {
	return o
}

func (o BlockStorageVolumeSnapshotTargetPtrOutput) Elem() BlockStorageVolumeSnapshotTargetOutput {
	return o.ApplyT(func(v *BlockStorageVolumeSnapshotTarget) BlockStorageVolumeSnapshotTarget {
		if v != nil {
			return *v
		}
		var ret BlockStorageVolumeSnapshotTarget
		return ret
	}).(BlockStorageVolumeSnapshotTargetOutput)
}

// Snapshot ID.
func (o BlockStorageVolumeSnapshotTargetPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlockStorageVolumeSnapshotTarget) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type BlockStorageVolumeSnapshotTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
}

// BlockStorageVolumeSnapshotTimeoutsInput is an input type that accepts BlockStorageVolumeSnapshotTimeoutsArgs and BlockStorageVolumeSnapshotTimeoutsOutput values.
// You can construct a concrete instance of `BlockStorageVolumeSnapshotTimeoutsInput` via:
//
//	BlockStorageVolumeSnapshotTimeoutsArgs{...}
type BlockStorageVolumeSnapshotTimeoutsInput interface {
	pulumi.Input

	ToBlockStorageVolumeSnapshotTimeoutsOutput() BlockStorageVolumeSnapshotTimeoutsOutput
	ToBlockStorageVolumeSnapshotTimeoutsOutputWithContext(context.Context) BlockStorageVolumeSnapshotTimeoutsOutput
}

type BlockStorageVolumeSnapshotTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
}

func (BlockStorageVolumeSnapshotTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockStorageVolumeSnapshotTimeouts)(nil)).Elem()
}

func (i BlockStorageVolumeSnapshotTimeoutsArgs) ToBlockStorageVolumeSnapshotTimeoutsOutput() BlockStorageVolumeSnapshotTimeoutsOutput {
	return i.ToBlockStorageVolumeSnapshotTimeoutsOutputWithContext(context.Background())
}

func (i BlockStorageVolumeSnapshotTimeoutsArgs) ToBlockStorageVolumeSnapshotTimeoutsOutputWithContext(ctx context.Context) BlockStorageVolumeSnapshotTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockStorageVolumeSnapshotTimeoutsOutput)
}

func (i BlockStorageVolumeSnapshotTimeoutsArgs) ToBlockStorageVolumeSnapshotTimeoutsPtrOutput() BlockStorageVolumeSnapshotTimeoutsPtrOutput {
	return i.ToBlockStorageVolumeSnapshotTimeoutsPtrOutputWithContext(context.Background())
}

func (i BlockStorageVolumeSnapshotTimeoutsArgs) ToBlockStorageVolumeSnapshotTimeoutsPtrOutputWithContext(ctx context.Context) BlockStorageVolumeSnapshotTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockStorageVolumeSnapshotTimeoutsOutput).ToBlockStorageVolumeSnapshotTimeoutsPtrOutputWithContext(ctx)
}

// BlockStorageVolumeSnapshotTimeoutsPtrInput is an input type that accepts BlockStorageVolumeSnapshotTimeoutsArgs, BlockStorageVolumeSnapshotTimeoutsPtr and BlockStorageVolumeSnapshotTimeoutsPtrOutput values.
// You can construct a concrete instance of `BlockStorageVolumeSnapshotTimeoutsPtrInput` via:
//
//	        BlockStorageVolumeSnapshotTimeoutsArgs{...}
//
//	or:
//
//	        nil
type BlockStorageVolumeSnapshotTimeoutsPtrInput interface {
	pulumi.Input

	ToBlockStorageVolumeSnapshotTimeoutsPtrOutput() BlockStorageVolumeSnapshotTimeoutsPtrOutput
	ToBlockStorageVolumeSnapshotTimeoutsPtrOutputWithContext(context.Context) BlockStorageVolumeSnapshotTimeoutsPtrOutput
}

type blockStorageVolumeSnapshotTimeoutsPtrType BlockStorageVolumeSnapshotTimeoutsArgs

func BlockStorageVolumeSnapshotTimeoutsPtr(v *BlockStorageVolumeSnapshotTimeoutsArgs) BlockStorageVolumeSnapshotTimeoutsPtrInput {
	return (*blockStorageVolumeSnapshotTimeoutsPtrType)(v)
}

func (*blockStorageVolumeSnapshotTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockStorageVolumeSnapshotTimeouts)(nil)).Elem()
}

func (i *blockStorageVolumeSnapshotTimeoutsPtrType) ToBlockStorageVolumeSnapshotTimeoutsPtrOutput() BlockStorageVolumeSnapshotTimeoutsPtrOutput {
	return i.ToBlockStorageVolumeSnapshotTimeoutsPtrOutputWithContext(context.Background())
}

func (i *blockStorageVolumeSnapshotTimeoutsPtrType) ToBlockStorageVolumeSnapshotTimeoutsPtrOutputWithContext(ctx context.Context) BlockStorageVolumeSnapshotTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockStorageVolumeSnapshotTimeoutsPtrOutput)
}

type BlockStorageVolumeSnapshotTimeoutsOutput struct{ *pulumi.OutputState }

func (BlockStorageVolumeSnapshotTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockStorageVolumeSnapshotTimeouts)(nil)).Elem()
}

func (o BlockStorageVolumeSnapshotTimeoutsOutput) ToBlockStorageVolumeSnapshotTimeoutsOutput() BlockStorageVolumeSnapshotTimeoutsOutput {
	return o
}

func (o BlockStorageVolumeSnapshotTimeoutsOutput) ToBlockStorageVolumeSnapshotTimeoutsOutputWithContext(ctx context.Context) BlockStorageVolumeSnapshotTimeoutsOutput {
	return o
}

func (o BlockStorageVolumeSnapshotTimeoutsOutput) ToBlockStorageVolumeSnapshotTimeoutsPtrOutput() BlockStorageVolumeSnapshotTimeoutsPtrOutput {
	return o.ToBlockStorageVolumeSnapshotTimeoutsPtrOutputWithContext(context.Background())
}

func (o BlockStorageVolumeSnapshotTimeoutsOutput) ToBlockStorageVolumeSnapshotTimeoutsPtrOutputWithContext(ctx context.Context) BlockStorageVolumeSnapshotTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlockStorageVolumeSnapshotTimeouts) *BlockStorageVolumeSnapshotTimeouts {
		return &v
	}).(BlockStorageVolumeSnapshotTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o BlockStorageVolumeSnapshotTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockStorageVolumeSnapshotTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

type BlockStorageVolumeSnapshotTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (BlockStorageVolumeSnapshotTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockStorageVolumeSnapshotTimeouts)(nil)).Elem()
}

func (o BlockStorageVolumeSnapshotTimeoutsPtrOutput) ToBlockStorageVolumeSnapshotTimeoutsPtrOutput() BlockStorageVolumeSnapshotTimeoutsPtrOutput {
	return o
}

func (o BlockStorageVolumeSnapshotTimeoutsPtrOutput) ToBlockStorageVolumeSnapshotTimeoutsPtrOutputWithContext(ctx context.Context) BlockStorageVolumeSnapshotTimeoutsPtrOutput {
	return o
}

func (o BlockStorageVolumeSnapshotTimeoutsPtrOutput) Elem() BlockStorageVolumeSnapshotTimeoutsOutput {
	return o.ApplyT(func(v *BlockStorageVolumeSnapshotTimeouts) BlockStorageVolumeSnapshotTimeouts {
		if v != nil {
			return *v
		}
		var ret BlockStorageVolumeSnapshotTimeouts
		return ret
	}).(BlockStorageVolumeSnapshotTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o BlockStorageVolumeSnapshotTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlockStorageVolumeSnapshotTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

type BlockStorageVolumeSnapshotVolume struct {
	// Snapshot ID.
	Id string `pulumi:"id"`
}

// BlockStorageVolumeSnapshotVolumeInput is an input type that accepts BlockStorageVolumeSnapshotVolumeArgs and BlockStorageVolumeSnapshotVolumeOutput values.
// You can construct a concrete instance of `BlockStorageVolumeSnapshotVolumeInput` via:
//
//	BlockStorageVolumeSnapshotVolumeArgs{...}
type BlockStorageVolumeSnapshotVolumeInput interface {
	pulumi.Input

	ToBlockStorageVolumeSnapshotVolumeOutput() BlockStorageVolumeSnapshotVolumeOutput
	ToBlockStorageVolumeSnapshotVolumeOutputWithContext(context.Context) BlockStorageVolumeSnapshotVolumeOutput
}

type BlockStorageVolumeSnapshotVolumeArgs struct {
	// Snapshot ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (BlockStorageVolumeSnapshotVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockStorageVolumeSnapshotVolume)(nil)).Elem()
}

func (i BlockStorageVolumeSnapshotVolumeArgs) ToBlockStorageVolumeSnapshotVolumeOutput() BlockStorageVolumeSnapshotVolumeOutput {
	return i.ToBlockStorageVolumeSnapshotVolumeOutputWithContext(context.Background())
}

func (i BlockStorageVolumeSnapshotVolumeArgs) ToBlockStorageVolumeSnapshotVolumeOutputWithContext(ctx context.Context) BlockStorageVolumeSnapshotVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockStorageVolumeSnapshotVolumeOutput)
}

func (i BlockStorageVolumeSnapshotVolumeArgs) ToBlockStorageVolumeSnapshotVolumePtrOutput() BlockStorageVolumeSnapshotVolumePtrOutput {
	return i.ToBlockStorageVolumeSnapshotVolumePtrOutputWithContext(context.Background())
}

func (i BlockStorageVolumeSnapshotVolumeArgs) ToBlockStorageVolumeSnapshotVolumePtrOutputWithContext(ctx context.Context) BlockStorageVolumeSnapshotVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockStorageVolumeSnapshotVolumeOutput).ToBlockStorageVolumeSnapshotVolumePtrOutputWithContext(ctx)
}

// BlockStorageVolumeSnapshotVolumePtrInput is an input type that accepts BlockStorageVolumeSnapshotVolumeArgs, BlockStorageVolumeSnapshotVolumePtr and BlockStorageVolumeSnapshotVolumePtrOutput values.
// You can construct a concrete instance of `BlockStorageVolumeSnapshotVolumePtrInput` via:
//
//	        BlockStorageVolumeSnapshotVolumeArgs{...}
//
//	or:
//
//	        nil
type BlockStorageVolumeSnapshotVolumePtrInput interface {
	pulumi.Input

	ToBlockStorageVolumeSnapshotVolumePtrOutput() BlockStorageVolumeSnapshotVolumePtrOutput
	ToBlockStorageVolumeSnapshotVolumePtrOutputWithContext(context.Context) BlockStorageVolumeSnapshotVolumePtrOutput
}

type blockStorageVolumeSnapshotVolumePtrType BlockStorageVolumeSnapshotVolumeArgs

func BlockStorageVolumeSnapshotVolumePtr(v *BlockStorageVolumeSnapshotVolumeArgs) BlockStorageVolumeSnapshotVolumePtrInput {
	return (*blockStorageVolumeSnapshotVolumePtrType)(v)
}

func (*blockStorageVolumeSnapshotVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockStorageVolumeSnapshotVolume)(nil)).Elem()
}

func (i *blockStorageVolumeSnapshotVolumePtrType) ToBlockStorageVolumeSnapshotVolumePtrOutput() BlockStorageVolumeSnapshotVolumePtrOutput {
	return i.ToBlockStorageVolumeSnapshotVolumePtrOutputWithContext(context.Background())
}

func (i *blockStorageVolumeSnapshotVolumePtrType) ToBlockStorageVolumeSnapshotVolumePtrOutputWithContext(ctx context.Context) BlockStorageVolumeSnapshotVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockStorageVolumeSnapshotVolumePtrOutput)
}

type BlockStorageVolumeSnapshotVolumeOutput struct{ *pulumi.OutputState }

func (BlockStorageVolumeSnapshotVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockStorageVolumeSnapshotVolume)(nil)).Elem()
}

func (o BlockStorageVolumeSnapshotVolumeOutput) ToBlockStorageVolumeSnapshotVolumeOutput() BlockStorageVolumeSnapshotVolumeOutput {
	return o
}

func (o BlockStorageVolumeSnapshotVolumeOutput) ToBlockStorageVolumeSnapshotVolumeOutputWithContext(ctx context.Context) BlockStorageVolumeSnapshotVolumeOutput {
	return o
}

func (o BlockStorageVolumeSnapshotVolumeOutput) ToBlockStorageVolumeSnapshotVolumePtrOutput() BlockStorageVolumeSnapshotVolumePtrOutput {
	return o.ToBlockStorageVolumeSnapshotVolumePtrOutputWithContext(context.Background())
}

func (o BlockStorageVolumeSnapshotVolumeOutput) ToBlockStorageVolumeSnapshotVolumePtrOutputWithContext(ctx context.Context) BlockStorageVolumeSnapshotVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlockStorageVolumeSnapshotVolume) *BlockStorageVolumeSnapshotVolume {
		return &v
	}).(BlockStorageVolumeSnapshotVolumePtrOutput)
}

// Snapshot ID.
func (o BlockStorageVolumeSnapshotVolumeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BlockStorageVolumeSnapshotVolume) string { return v.Id }).(pulumi.StringOutput)
}

type BlockStorageVolumeSnapshotVolumePtrOutput struct{ *pulumi.OutputState }

func (BlockStorageVolumeSnapshotVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockStorageVolumeSnapshotVolume)(nil)).Elem()
}

func (o BlockStorageVolumeSnapshotVolumePtrOutput) ToBlockStorageVolumeSnapshotVolumePtrOutput() BlockStorageVolumeSnapshotVolumePtrOutput {
	return o
}

func (o BlockStorageVolumeSnapshotVolumePtrOutput) ToBlockStorageVolumeSnapshotVolumePtrOutputWithContext(ctx context.Context) BlockStorageVolumeSnapshotVolumePtrOutput {
	return o
}

func (o BlockStorageVolumeSnapshotVolumePtrOutput) Elem() BlockStorageVolumeSnapshotVolumeOutput {
	return o.ApplyT(func(v *BlockStorageVolumeSnapshotVolume) BlockStorageVolumeSnapshotVolume {
		if v != nil {
			return *v
		}
		var ret BlockStorageVolumeSnapshotVolume
		return ret
	}).(BlockStorageVolumeSnapshotVolumeOutput)
}

// Snapshot ID.
func (o BlockStorageVolumeSnapshotVolumePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlockStorageVolumeSnapshotVolume) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type BlockStorageVolumeTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
}

// BlockStorageVolumeTimeoutsInput is an input type that accepts BlockStorageVolumeTimeoutsArgs and BlockStorageVolumeTimeoutsOutput values.
// You can construct a concrete instance of `BlockStorageVolumeTimeoutsInput` via:
//
//	BlockStorageVolumeTimeoutsArgs{...}
type BlockStorageVolumeTimeoutsInput interface {
	pulumi.Input

	ToBlockStorageVolumeTimeoutsOutput() BlockStorageVolumeTimeoutsOutput
	ToBlockStorageVolumeTimeoutsOutputWithContext(context.Context) BlockStorageVolumeTimeoutsOutput
}

type BlockStorageVolumeTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
}

func (BlockStorageVolumeTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockStorageVolumeTimeouts)(nil)).Elem()
}

func (i BlockStorageVolumeTimeoutsArgs) ToBlockStorageVolumeTimeoutsOutput() BlockStorageVolumeTimeoutsOutput {
	return i.ToBlockStorageVolumeTimeoutsOutputWithContext(context.Background())
}

func (i BlockStorageVolumeTimeoutsArgs) ToBlockStorageVolumeTimeoutsOutputWithContext(ctx context.Context) BlockStorageVolumeTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockStorageVolumeTimeoutsOutput)
}

func (i BlockStorageVolumeTimeoutsArgs) ToBlockStorageVolumeTimeoutsPtrOutput() BlockStorageVolumeTimeoutsPtrOutput {
	return i.ToBlockStorageVolumeTimeoutsPtrOutputWithContext(context.Background())
}

func (i BlockStorageVolumeTimeoutsArgs) ToBlockStorageVolumeTimeoutsPtrOutputWithContext(ctx context.Context) BlockStorageVolumeTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockStorageVolumeTimeoutsOutput).ToBlockStorageVolumeTimeoutsPtrOutputWithContext(ctx)
}

// BlockStorageVolumeTimeoutsPtrInput is an input type that accepts BlockStorageVolumeTimeoutsArgs, BlockStorageVolumeTimeoutsPtr and BlockStorageVolumeTimeoutsPtrOutput values.
// You can construct a concrete instance of `BlockStorageVolumeTimeoutsPtrInput` via:
//
//	        BlockStorageVolumeTimeoutsArgs{...}
//
//	or:
//
//	        nil
type BlockStorageVolumeTimeoutsPtrInput interface {
	pulumi.Input

	ToBlockStorageVolumeTimeoutsPtrOutput() BlockStorageVolumeTimeoutsPtrOutput
	ToBlockStorageVolumeTimeoutsPtrOutputWithContext(context.Context) BlockStorageVolumeTimeoutsPtrOutput
}

type blockStorageVolumeTimeoutsPtrType BlockStorageVolumeTimeoutsArgs

func BlockStorageVolumeTimeoutsPtr(v *BlockStorageVolumeTimeoutsArgs) BlockStorageVolumeTimeoutsPtrInput {
	return (*blockStorageVolumeTimeoutsPtrType)(v)
}

func (*blockStorageVolumeTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockStorageVolumeTimeouts)(nil)).Elem()
}

func (i *blockStorageVolumeTimeoutsPtrType) ToBlockStorageVolumeTimeoutsPtrOutput() BlockStorageVolumeTimeoutsPtrOutput {
	return i.ToBlockStorageVolumeTimeoutsPtrOutputWithContext(context.Background())
}

func (i *blockStorageVolumeTimeoutsPtrType) ToBlockStorageVolumeTimeoutsPtrOutputWithContext(ctx context.Context) BlockStorageVolumeTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockStorageVolumeTimeoutsPtrOutput)
}

type BlockStorageVolumeTimeoutsOutput struct{ *pulumi.OutputState }

func (BlockStorageVolumeTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockStorageVolumeTimeouts)(nil)).Elem()
}

func (o BlockStorageVolumeTimeoutsOutput) ToBlockStorageVolumeTimeoutsOutput() BlockStorageVolumeTimeoutsOutput {
	return o
}

func (o BlockStorageVolumeTimeoutsOutput) ToBlockStorageVolumeTimeoutsOutputWithContext(ctx context.Context) BlockStorageVolumeTimeoutsOutput {
	return o
}

func (o BlockStorageVolumeTimeoutsOutput) ToBlockStorageVolumeTimeoutsPtrOutput() BlockStorageVolumeTimeoutsPtrOutput {
	return o.ToBlockStorageVolumeTimeoutsPtrOutputWithContext(context.Background())
}

func (o BlockStorageVolumeTimeoutsOutput) ToBlockStorageVolumeTimeoutsPtrOutputWithContext(ctx context.Context) BlockStorageVolumeTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlockStorageVolumeTimeouts) *BlockStorageVolumeTimeouts {
		return &v
	}).(BlockStorageVolumeTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o BlockStorageVolumeTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockStorageVolumeTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

type BlockStorageVolumeTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (BlockStorageVolumeTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockStorageVolumeTimeouts)(nil)).Elem()
}

func (o BlockStorageVolumeTimeoutsPtrOutput) ToBlockStorageVolumeTimeoutsPtrOutput() BlockStorageVolumeTimeoutsPtrOutput {
	return o
}

func (o BlockStorageVolumeTimeoutsPtrOutput) ToBlockStorageVolumeTimeoutsPtrOutputWithContext(ctx context.Context) BlockStorageVolumeTimeoutsPtrOutput {
	return o
}

func (o BlockStorageVolumeTimeoutsPtrOutput) Elem() BlockStorageVolumeTimeoutsOutput {
	return o.ApplyT(func(v *BlockStorageVolumeTimeouts) BlockStorageVolumeTimeouts {
		if v != nil {
			return *v
		}
		var ret BlockStorageVolumeTimeouts
		return ret
	}).(BlockStorageVolumeTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o BlockStorageVolumeTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlockStorageVolumeTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

type ComputeInstanceNetworkInterface struct {
	// The IPv4 address to request as static DHCP lease if the network interface is attached to a *managed* private network.
	IpAddress *string `pulumi:"ipAddress"`
	// MAC address
	MacAddress *string `pulumi:"macAddress"`
	// The exoscale*private*network (ID) to attach to the instance.
	NetworkId string `pulumi:"networkId"`
}

// ComputeInstanceNetworkInterfaceInput is an input type that accepts ComputeInstanceNetworkInterfaceArgs and ComputeInstanceNetworkInterfaceOutput values.
// You can construct a concrete instance of `ComputeInstanceNetworkInterfaceInput` via:
//
//	ComputeInstanceNetworkInterfaceArgs{...}
type ComputeInstanceNetworkInterfaceInput interface {
	pulumi.Input

	ToComputeInstanceNetworkInterfaceOutput() ComputeInstanceNetworkInterfaceOutput
	ToComputeInstanceNetworkInterfaceOutputWithContext(context.Context) ComputeInstanceNetworkInterfaceOutput
}

type ComputeInstanceNetworkInterfaceArgs struct {
	// The IPv4 address to request as static DHCP lease if the network interface is attached to a *managed* private network.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// MAC address
	MacAddress pulumi.StringPtrInput `pulumi:"macAddress"`
	// The exoscale*private*network (ID) to attach to the instance.
	NetworkId pulumi.StringInput `pulumi:"networkId"`
}

func (ComputeInstanceNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceNetworkInterface)(nil)).Elem()
}

func (i ComputeInstanceNetworkInterfaceArgs) ToComputeInstanceNetworkInterfaceOutput() ComputeInstanceNetworkInterfaceOutput {
	return i.ToComputeInstanceNetworkInterfaceOutputWithContext(context.Background())
}

func (i ComputeInstanceNetworkInterfaceArgs) ToComputeInstanceNetworkInterfaceOutputWithContext(ctx context.Context) ComputeInstanceNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceNetworkInterfaceOutput)
}

// ComputeInstanceNetworkInterfaceArrayInput is an input type that accepts ComputeInstanceNetworkInterfaceArray and ComputeInstanceNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceNetworkInterfaceArrayInput` via:
//
//	ComputeInstanceNetworkInterfaceArray{ ComputeInstanceNetworkInterfaceArgs{...} }
type ComputeInstanceNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToComputeInstanceNetworkInterfaceArrayOutput() ComputeInstanceNetworkInterfaceArrayOutput
	ToComputeInstanceNetworkInterfaceArrayOutputWithContext(context.Context) ComputeInstanceNetworkInterfaceArrayOutput
}

type ComputeInstanceNetworkInterfaceArray []ComputeInstanceNetworkInterfaceInput

func (ComputeInstanceNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceNetworkInterface)(nil)).Elem()
}

func (i ComputeInstanceNetworkInterfaceArray) ToComputeInstanceNetworkInterfaceArrayOutput() ComputeInstanceNetworkInterfaceArrayOutput {
	return i.ToComputeInstanceNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceNetworkInterfaceArray) ToComputeInstanceNetworkInterfaceArrayOutputWithContext(ctx context.Context) ComputeInstanceNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceNetworkInterfaceArrayOutput)
}

type ComputeInstanceNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (ComputeInstanceNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceNetworkInterface)(nil)).Elem()
}

func (o ComputeInstanceNetworkInterfaceOutput) ToComputeInstanceNetworkInterfaceOutput() ComputeInstanceNetworkInterfaceOutput {
	return o
}

func (o ComputeInstanceNetworkInterfaceOutput) ToComputeInstanceNetworkInterfaceOutputWithContext(ctx context.Context) ComputeInstanceNetworkInterfaceOutput {
	return o
}

// The IPv4 address to request as static DHCP lease if the network interface is attached to a *managed* private network.
func (o ComputeInstanceNetworkInterfaceOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceNetworkInterface) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// MAC address
func (o ComputeInstanceNetworkInterfaceOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceNetworkInterface) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

// The exoscale*private*network (ID) to attach to the instance.
func (o ComputeInstanceNetworkInterfaceOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceNetworkInterface) string { return v.NetworkId }).(pulumi.StringOutput)
}

type ComputeInstanceNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceNetworkInterface)(nil)).Elem()
}

func (o ComputeInstanceNetworkInterfaceArrayOutput) ToComputeInstanceNetworkInterfaceArrayOutput() ComputeInstanceNetworkInterfaceArrayOutput {
	return o
}

func (o ComputeInstanceNetworkInterfaceArrayOutput) ToComputeInstanceNetworkInterfaceArrayOutputWithContext(ctx context.Context) ComputeInstanceNetworkInterfaceArrayOutput {
	return o
}

func (o ComputeInstanceNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) ComputeInstanceNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeInstanceNetworkInterface {
		return vs[0].([]ComputeInstanceNetworkInterface)[vs[1].(int)]
	}).(ComputeInstanceNetworkInterfaceOutput)
}

type DatabaseGrafana struct {
	// Grafana configuration settings in JSON format (`exo dbaas type show grafana --settings=grafana` for reference).
	GrafanaSettings *string `pulumi:"grafanaSettings"`
	// A list of CIDR blocks to allow incoming connections from.
	IpFilters []string `pulumi:"ipFilters"`
}

// DatabaseGrafanaInput is an input type that accepts DatabaseGrafanaArgs and DatabaseGrafanaOutput values.
// You can construct a concrete instance of `DatabaseGrafanaInput` via:
//
//	DatabaseGrafanaArgs{...}
type DatabaseGrafanaInput interface {
	pulumi.Input

	ToDatabaseGrafanaOutput() DatabaseGrafanaOutput
	ToDatabaseGrafanaOutputWithContext(context.Context) DatabaseGrafanaOutput
}

type DatabaseGrafanaArgs struct {
	// Grafana configuration settings in JSON format (`exo dbaas type show grafana --settings=grafana` for reference).
	GrafanaSettings pulumi.StringPtrInput `pulumi:"grafanaSettings"`
	// A list of CIDR blocks to allow incoming connections from.
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
}

func (DatabaseGrafanaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseGrafana)(nil)).Elem()
}

func (i DatabaseGrafanaArgs) ToDatabaseGrafanaOutput() DatabaseGrafanaOutput {
	return i.ToDatabaseGrafanaOutputWithContext(context.Background())
}

func (i DatabaseGrafanaArgs) ToDatabaseGrafanaOutputWithContext(ctx context.Context) DatabaseGrafanaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseGrafanaOutput)
}

func (i DatabaseGrafanaArgs) ToDatabaseGrafanaPtrOutput() DatabaseGrafanaPtrOutput {
	return i.ToDatabaseGrafanaPtrOutputWithContext(context.Background())
}

func (i DatabaseGrafanaArgs) ToDatabaseGrafanaPtrOutputWithContext(ctx context.Context) DatabaseGrafanaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseGrafanaOutput).ToDatabaseGrafanaPtrOutputWithContext(ctx)
}

// DatabaseGrafanaPtrInput is an input type that accepts DatabaseGrafanaArgs, DatabaseGrafanaPtr and DatabaseGrafanaPtrOutput values.
// You can construct a concrete instance of `DatabaseGrafanaPtrInput` via:
//
//	        DatabaseGrafanaArgs{...}
//
//	or:
//
//	        nil
type DatabaseGrafanaPtrInput interface {
	pulumi.Input

	ToDatabaseGrafanaPtrOutput() DatabaseGrafanaPtrOutput
	ToDatabaseGrafanaPtrOutputWithContext(context.Context) DatabaseGrafanaPtrOutput
}

type databaseGrafanaPtrType DatabaseGrafanaArgs

func DatabaseGrafanaPtr(v *DatabaseGrafanaArgs) DatabaseGrafanaPtrInput {
	return (*databaseGrafanaPtrType)(v)
}

func (*databaseGrafanaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseGrafana)(nil)).Elem()
}

func (i *databaseGrafanaPtrType) ToDatabaseGrafanaPtrOutput() DatabaseGrafanaPtrOutput {
	return i.ToDatabaseGrafanaPtrOutputWithContext(context.Background())
}

func (i *databaseGrafanaPtrType) ToDatabaseGrafanaPtrOutputWithContext(ctx context.Context) DatabaseGrafanaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseGrafanaPtrOutput)
}

type DatabaseGrafanaOutput struct{ *pulumi.OutputState }

func (DatabaseGrafanaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseGrafana)(nil)).Elem()
}

func (o DatabaseGrafanaOutput) ToDatabaseGrafanaOutput() DatabaseGrafanaOutput {
	return o
}

func (o DatabaseGrafanaOutput) ToDatabaseGrafanaOutputWithContext(ctx context.Context) DatabaseGrafanaOutput {
	return o
}

func (o DatabaseGrafanaOutput) ToDatabaseGrafanaPtrOutput() DatabaseGrafanaPtrOutput {
	return o.ToDatabaseGrafanaPtrOutputWithContext(context.Background())
}

func (o DatabaseGrafanaOutput) ToDatabaseGrafanaPtrOutputWithContext(ctx context.Context) DatabaseGrafanaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseGrafana) *DatabaseGrafana {
		return &v
	}).(DatabaseGrafanaPtrOutput)
}

// Grafana configuration settings in JSON format (`exo dbaas type show grafana --settings=grafana` for reference).
func (o DatabaseGrafanaOutput) GrafanaSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseGrafana) *string { return v.GrafanaSettings }).(pulumi.StringPtrOutput)
}

// A list of CIDR blocks to allow incoming connections from.
func (o DatabaseGrafanaOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseGrafana) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

type DatabaseGrafanaPtrOutput struct{ *pulumi.OutputState }

func (DatabaseGrafanaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseGrafana)(nil)).Elem()
}

func (o DatabaseGrafanaPtrOutput) ToDatabaseGrafanaPtrOutput() DatabaseGrafanaPtrOutput {
	return o
}

func (o DatabaseGrafanaPtrOutput) ToDatabaseGrafanaPtrOutputWithContext(ctx context.Context) DatabaseGrafanaPtrOutput {
	return o
}

func (o DatabaseGrafanaPtrOutput) Elem() DatabaseGrafanaOutput {
	return o.ApplyT(func(v *DatabaseGrafana) DatabaseGrafana {
		if v != nil {
			return *v
		}
		var ret DatabaseGrafana
		return ret
	}).(DatabaseGrafanaOutput)
}

// Grafana configuration settings in JSON format (`exo dbaas type show grafana --settings=grafana` for reference).
func (o DatabaseGrafanaPtrOutput) GrafanaSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseGrafana) *string {
		if v == nil {
			return nil
		}
		return v.GrafanaSettings
	}).(pulumi.StringPtrOutput)
}

// A list of CIDR blocks to allow incoming connections from.
func (o DatabaseGrafanaPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatabaseGrafana) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

type DatabaseKafka struct {
	// Enable certificate-based authentication method.
	EnableCertAuth *bool `pulumi:"enableCertAuth"`
	// Enable Kafka Connect.
	EnableKafkaConnect *bool `pulumi:"enableKafkaConnect"`
	// Enable Kafka REST.
	EnableKafkaRest *bool `pulumi:"enableKafkaRest"`
	// Enable SASL-based authentication method.
	EnableSaslAuth *bool `pulumi:"enableSaslAuth"`
	// Enable Schema Registry.
	EnableSchemaRegistry *bool `pulumi:"enableSchemaRegistry"`
	// A list of CIDR blocks to allow incoming connections from.
	IpFilters []string `pulumi:"ipFilters"`
	// Kafka Connect configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka-connect` for reference).
	KafkaConnectSettings *string `pulumi:"kafkaConnectSettings"`
	// Kafka REST configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka-rest` for reference).
	KafkaRestSettings *string `pulumi:"kafkaRestSettings"`
	// Kafka configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka` for reference).
	KafkaSettings *string `pulumi:"kafkaSettings"`
	// Schema Registry configuration settings in JSON format (`exo dbaas type show kafka --settings=schema-registry` for reference)
	SchemaRegistrySettings *string `pulumi:"schemaRegistrySettings"`
	// Kafka major version (`exo dbaas type show kafka` for reference; may only be set at creation time).
	Version *string `pulumi:"version"`
}

// DatabaseKafkaInput is an input type that accepts DatabaseKafkaArgs and DatabaseKafkaOutput values.
// You can construct a concrete instance of `DatabaseKafkaInput` via:
//
//	DatabaseKafkaArgs{...}
type DatabaseKafkaInput interface {
	pulumi.Input

	ToDatabaseKafkaOutput() DatabaseKafkaOutput
	ToDatabaseKafkaOutputWithContext(context.Context) DatabaseKafkaOutput
}

type DatabaseKafkaArgs struct {
	// Enable certificate-based authentication method.
	EnableCertAuth pulumi.BoolPtrInput `pulumi:"enableCertAuth"`
	// Enable Kafka Connect.
	EnableKafkaConnect pulumi.BoolPtrInput `pulumi:"enableKafkaConnect"`
	// Enable Kafka REST.
	EnableKafkaRest pulumi.BoolPtrInput `pulumi:"enableKafkaRest"`
	// Enable SASL-based authentication method.
	EnableSaslAuth pulumi.BoolPtrInput `pulumi:"enableSaslAuth"`
	// Enable Schema Registry.
	EnableSchemaRegistry pulumi.BoolPtrInput `pulumi:"enableSchemaRegistry"`
	// A list of CIDR blocks to allow incoming connections from.
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Kafka Connect configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka-connect` for reference).
	KafkaConnectSettings pulumi.StringPtrInput `pulumi:"kafkaConnectSettings"`
	// Kafka REST configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka-rest` for reference).
	KafkaRestSettings pulumi.StringPtrInput `pulumi:"kafkaRestSettings"`
	// Kafka configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka` for reference).
	KafkaSettings pulumi.StringPtrInput `pulumi:"kafkaSettings"`
	// Schema Registry configuration settings in JSON format (`exo dbaas type show kafka --settings=schema-registry` for reference)
	SchemaRegistrySettings pulumi.StringPtrInput `pulumi:"schemaRegistrySettings"`
	// Kafka major version (`exo dbaas type show kafka` for reference; may only be set at creation time).
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (DatabaseKafkaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseKafka)(nil)).Elem()
}

func (i DatabaseKafkaArgs) ToDatabaseKafkaOutput() DatabaseKafkaOutput {
	return i.ToDatabaseKafkaOutputWithContext(context.Background())
}

func (i DatabaseKafkaArgs) ToDatabaseKafkaOutputWithContext(ctx context.Context) DatabaseKafkaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseKafkaOutput)
}

func (i DatabaseKafkaArgs) ToDatabaseKafkaPtrOutput() DatabaseKafkaPtrOutput {
	return i.ToDatabaseKafkaPtrOutputWithContext(context.Background())
}

func (i DatabaseKafkaArgs) ToDatabaseKafkaPtrOutputWithContext(ctx context.Context) DatabaseKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseKafkaOutput).ToDatabaseKafkaPtrOutputWithContext(ctx)
}

// DatabaseKafkaPtrInput is an input type that accepts DatabaseKafkaArgs, DatabaseKafkaPtr and DatabaseKafkaPtrOutput values.
// You can construct a concrete instance of `DatabaseKafkaPtrInput` via:
//
//	        DatabaseKafkaArgs{...}
//
//	or:
//
//	        nil
type DatabaseKafkaPtrInput interface {
	pulumi.Input

	ToDatabaseKafkaPtrOutput() DatabaseKafkaPtrOutput
	ToDatabaseKafkaPtrOutputWithContext(context.Context) DatabaseKafkaPtrOutput
}

type databaseKafkaPtrType DatabaseKafkaArgs

func DatabaseKafkaPtr(v *DatabaseKafkaArgs) DatabaseKafkaPtrInput {
	return (*databaseKafkaPtrType)(v)
}

func (*databaseKafkaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseKafka)(nil)).Elem()
}

func (i *databaseKafkaPtrType) ToDatabaseKafkaPtrOutput() DatabaseKafkaPtrOutput {
	return i.ToDatabaseKafkaPtrOutputWithContext(context.Background())
}

func (i *databaseKafkaPtrType) ToDatabaseKafkaPtrOutputWithContext(ctx context.Context) DatabaseKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseKafkaPtrOutput)
}

type DatabaseKafkaOutput struct{ *pulumi.OutputState }

func (DatabaseKafkaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseKafka)(nil)).Elem()
}

func (o DatabaseKafkaOutput) ToDatabaseKafkaOutput() DatabaseKafkaOutput {
	return o
}

func (o DatabaseKafkaOutput) ToDatabaseKafkaOutputWithContext(ctx context.Context) DatabaseKafkaOutput {
	return o
}

func (o DatabaseKafkaOutput) ToDatabaseKafkaPtrOutput() DatabaseKafkaPtrOutput {
	return o.ToDatabaseKafkaPtrOutputWithContext(context.Background())
}

func (o DatabaseKafkaOutput) ToDatabaseKafkaPtrOutputWithContext(ctx context.Context) DatabaseKafkaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseKafka) *DatabaseKafka {
		return &v
	}).(DatabaseKafkaPtrOutput)
}

// Enable certificate-based authentication method.
func (o DatabaseKafkaOutput) EnableCertAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseKafka) *bool { return v.EnableCertAuth }).(pulumi.BoolPtrOutput)
}

// Enable Kafka Connect.
func (o DatabaseKafkaOutput) EnableKafkaConnect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseKafka) *bool { return v.EnableKafkaConnect }).(pulumi.BoolPtrOutput)
}

// Enable Kafka REST.
func (o DatabaseKafkaOutput) EnableKafkaRest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseKafka) *bool { return v.EnableKafkaRest }).(pulumi.BoolPtrOutput)
}

// Enable SASL-based authentication method.
func (o DatabaseKafkaOutput) EnableSaslAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseKafka) *bool { return v.EnableSaslAuth }).(pulumi.BoolPtrOutput)
}

// Enable Schema Registry.
func (o DatabaseKafkaOutput) EnableSchemaRegistry() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseKafka) *bool { return v.EnableSchemaRegistry }).(pulumi.BoolPtrOutput)
}

// A list of CIDR blocks to allow incoming connections from.
func (o DatabaseKafkaOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseKafka) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Kafka Connect configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka-connect` for reference).
func (o DatabaseKafkaOutput) KafkaConnectSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseKafka) *string { return v.KafkaConnectSettings }).(pulumi.StringPtrOutput)
}

// Kafka REST configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka-rest` for reference).
func (o DatabaseKafkaOutput) KafkaRestSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseKafka) *string { return v.KafkaRestSettings }).(pulumi.StringPtrOutput)
}

// Kafka configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka` for reference).
func (o DatabaseKafkaOutput) KafkaSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseKafka) *string { return v.KafkaSettings }).(pulumi.StringPtrOutput)
}

// Schema Registry configuration settings in JSON format (`exo dbaas type show kafka --settings=schema-registry` for reference)
func (o DatabaseKafkaOutput) SchemaRegistrySettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseKafka) *string { return v.SchemaRegistrySettings }).(pulumi.StringPtrOutput)
}

// Kafka major version (`exo dbaas type show kafka` for reference; may only be set at creation time).
func (o DatabaseKafkaOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseKafka) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type DatabaseKafkaPtrOutput struct{ *pulumi.OutputState }

func (DatabaseKafkaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseKafka)(nil)).Elem()
}

func (o DatabaseKafkaPtrOutput) ToDatabaseKafkaPtrOutput() DatabaseKafkaPtrOutput {
	return o
}

func (o DatabaseKafkaPtrOutput) ToDatabaseKafkaPtrOutputWithContext(ctx context.Context) DatabaseKafkaPtrOutput {
	return o
}

func (o DatabaseKafkaPtrOutput) Elem() DatabaseKafkaOutput {
	return o.ApplyT(func(v *DatabaseKafka) DatabaseKafka {
		if v != nil {
			return *v
		}
		var ret DatabaseKafka
		return ret
	}).(DatabaseKafkaOutput)
}

// Enable certificate-based authentication method.
func (o DatabaseKafkaPtrOutput) EnableCertAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseKafka) *bool {
		if v == nil {
			return nil
		}
		return v.EnableCertAuth
	}).(pulumi.BoolPtrOutput)
}

// Enable Kafka Connect.
func (o DatabaseKafkaPtrOutput) EnableKafkaConnect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseKafka) *bool {
		if v == nil {
			return nil
		}
		return v.EnableKafkaConnect
	}).(pulumi.BoolPtrOutput)
}

// Enable Kafka REST.
func (o DatabaseKafkaPtrOutput) EnableKafkaRest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseKafka) *bool {
		if v == nil {
			return nil
		}
		return v.EnableKafkaRest
	}).(pulumi.BoolPtrOutput)
}

// Enable SASL-based authentication method.
func (o DatabaseKafkaPtrOutput) EnableSaslAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseKafka) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSaslAuth
	}).(pulumi.BoolPtrOutput)
}

// Enable Schema Registry.
func (o DatabaseKafkaPtrOutput) EnableSchemaRegistry() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseKafka) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSchemaRegistry
	}).(pulumi.BoolPtrOutput)
}

// A list of CIDR blocks to allow incoming connections from.
func (o DatabaseKafkaPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatabaseKafka) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// Kafka Connect configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka-connect` for reference).
func (o DatabaseKafkaPtrOutput) KafkaConnectSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseKafka) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnectSettings
	}).(pulumi.StringPtrOutput)
}

// Kafka REST configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka-rest` for reference).
func (o DatabaseKafkaPtrOutput) KafkaRestSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseKafka) *string {
		if v == nil {
			return nil
		}
		return v.KafkaRestSettings
	}).(pulumi.StringPtrOutput)
}

// Kafka configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka` for reference).
func (o DatabaseKafkaPtrOutput) KafkaSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseKafka) *string {
		if v == nil {
			return nil
		}
		return v.KafkaSettings
	}).(pulumi.StringPtrOutput)
}

// Schema Registry configuration settings in JSON format (`exo dbaas type show kafka --settings=schema-registry` for reference)
func (o DatabaseKafkaPtrOutput) SchemaRegistrySettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseKafka) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRegistrySettings
	}).(pulumi.StringPtrOutput)
}

// Kafka major version (`exo dbaas type show kafka` for reference; may only be set at creation time).
func (o DatabaseKafkaPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseKafka) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type DatabaseMysql struct {
	// A custom administrator account password (may only be set at creation time).
	AdminPassword *string `pulumi:"adminPassword"`
	// A custom administrator account username (may only be set at creation time).
	AdminUsername *string `pulumi:"adminUsername"`
	// The automated backup schedule (`HH:MM`).
	BackupSchedule *string `pulumi:"backupSchedule"`
	// A list of CIDR blocks to allow incoming connections from.
	IpFilters []string `pulumi:"ipFilters"`
	// MySQL configuration settings in JSON format (`exo dbaas type show mysql --settings=mysql` for reference).
	MysqlSettings *string `pulumi:"mysqlSettings"`
	// MySQL major version (`exo dbaas type show mysql` for reference; may only be set at creation time).
	Version *string `pulumi:"version"`
}

// DatabaseMysqlInput is an input type that accepts DatabaseMysqlArgs and DatabaseMysqlOutput values.
// You can construct a concrete instance of `DatabaseMysqlInput` via:
//
//	DatabaseMysqlArgs{...}
type DatabaseMysqlInput interface {
	pulumi.Input

	ToDatabaseMysqlOutput() DatabaseMysqlOutput
	ToDatabaseMysqlOutputWithContext(context.Context) DatabaseMysqlOutput
}

type DatabaseMysqlArgs struct {
	// A custom administrator account password (may only be set at creation time).
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// A custom administrator account username (may only be set at creation time).
	AdminUsername pulumi.StringPtrInput `pulumi:"adminUsername"`
	// The automated backup schedule (`HH:MM`).
	BackupSchedule pulumi.StringPtrInput `pulumi:"backupSchedule"`
	// A list of CIDR blocks to allow incoming connections from.
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// MySQL configuration settings in JSON format (`exo dbaas type show mysql --settings=mysql` for reference).
	MysqlSettings pulumi.StringPtrInput `pulumi:"mysqlSettings"`
	// MySQL major version (`exo dbaas type show mysql` for reference; may only be set at creation time).
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (DatabaseMysqlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseMysql)(nil)).Elem()
}

func (i DatabaseMysqlArgs) ToDatabaseMysqlOutput() DatabaseMysqlOutput {
	return i.ToDatabaseMysqlOutputWithContext(context.Background())
}

func (i DatabaseMysqlArgs) ToDatabaseMysqlOutputWithContext(ctx context.Context) DatabaseMysqlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseMysqlOutput)
}

func (i DatabaseMysqlArgs) ToDatabaseMysqlPtrOutput() DatabaseMysqlPtrOutput {
	return i.ToDatabaseMysqlPtrOutputWithContext(context.Background())
}

func (i DatabaseMysqlArgs) ToDatabaseMysqlPtrOutputWithContext(ctx context.Context) DatabaseMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseMysqlOutput).ToDatabaseMysqlPtrOutputWithContext(ctx)
}

// DatabaseMysqlPtrInput is an input type that accepts DatabaseMysqlArgs, DatabaseMysqlPtr and DatabaseMysqlPtrOutput values.
// You can construct a concrete instance of `DatabaseMysqlPtrInput` via:
//
//	        DatabaseMysqlArgs{...}
//
//	or:
//
//	        nil
type DatabaseMysqlPtrInput interface {
	pulumi.Input

	ToDatabaseMysqlPtrOutput() DatabaseMysqlPtrOutput
	ToDatabaseMysqlPtrOutputWithContext(context.Context) DatabaseMysqlPtrOutput
}

type databaseMysqlPtrType DatabaseMysqlArgs

func DatabaseMysqlPtr(v *DatabaseMysqlArgs) DatabaseMysqlPtrInput {
	return (*databaseMysqlPtrType)(v)
}

func (*databaseMysqlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseMysql)(nil)).Elem()
}

func (i *databaseMysqlPtrType) ToDatabaseMysqlPtrOutput() DatabaseMysqlPtrOutput {
	return i.ToDatabaseMysqlPtrOutputWithContext(context.Background())
}

func (i *databaseMysqlPtrType) ToDatabaseMysqlPtrOutputWithContext(ctx context.Context) DatabaseMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseMysqlPtrOutput)
}

type DatabaseMysqlOutput struct{ *pulumi.OutputState }

func (DatabaseMysqlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseMysql)(nil)).Elem()
}

func (o DatabaseMysqlOutput) ToDatabaseMysqlOutput() DatabaseMysqlOutput {
	return o
}

func (o DatabaseMysqlOutput) ToDatabaseMysqlOutputWithContext(ctx context.Context) DatabaseMysqlOutput {
	return o
}

func (o DatabaseMysqlOutput) ToDatabaseMysqlPtrOutput() DatabaseMysqlPtrOutput {
	return o.ToDatabaseMysqlPtrOutputWithContext(context.Background())
}

func (o DatabaseMysqlOutput) ToDatabaseMysqlPtrOutputWithContext(ctx context.Context) DatabaseMysqlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseMysql) *DatabaseMysql {
		return &v
	}).(DatabaseMysqlPtrOutput)
}

// A custom administrator account password (may only be set at creation time).
func (o DatabaseMysqlOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseMysql) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// A custom administrator account username (may only be set at creation time).
func (o DatabaseMysqlOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseMysql) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

// The automated backup schedule (`HH:MM`).
func (o DatabaseMysqlOutput) BackupSchedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseMysql) *string { return v.BackupSchedule }).(pulumi.StringPtrOutput)
}

// A list of CIDR blocks to allow incoming connections from.
func (o DatabaseMysqlOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseMysql) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// MySQL configuration settings in JSON format (`exo dbaas type show mysql --settings=mysql` for reference).
func (o DatabaseMysqlOutput) MysqlSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseMysql) *string { return v.MysqlSettings }).(pulumi.StringPtrOutput)
}

// MySQL major version (`exo dbaas type show mysql` for reference; may only be set at creation time).
func (o DatabaseMysqlOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseMysql) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type DatabaseMysqlPtrOutput struct{ *pulumi.OutputState }

func (DatabaseMysqlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseMysql)(nil)).Elem()
}

func (o DatabaseMysqlPtrOutput) ToDatabaseMysqlPtrOutput() DatabaseMysqlPtrOutput {
	return o
}

func (o DatabaseMysqlPtrOutput) ToDatabaseMysqlPtrOutputWithContext(ctx context.Context) DatabaseMysqlPtrOutput {
	return o
}

func (o DatabaseMysqlPtrOutput) Elem() DatabaseMysqlOutput {
	return o.ApplyT(func(v *DatabaseMysql) DatabaseMysql {
		if v != nil {
			return *v
		}
		var ret DatabaseMysql
		return ret
	}).(DatabaseMysqlOutput)
}

// A custom administrator account password (may only be set at creation time).
func (o DatabaseMysqlPtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseMysql) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// A custom administrator account username (may only be set at creation time).
func (o DatabaseMysqlPtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseMysql) *string {
		if v == nil {
			return nil
		}
		return v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// The automated backup schedule (`HH:MM`).
func (o DatabaseMysqlPtrOutput) BackupSchedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseMysql) *string {
		if v == nil {
			return nil
		}
		return v.BackupSchedule
	}).(pulumi.StringPtrOutput)
}

// A list of CIDR blocks to allow incoming connections from.
func (o DatabaseMysqlPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatabaseMysql) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// MySQL configuration settings in JSON format (`exo dbaas type show mysql --settings=mysql` for reference).
func (o DatabaseMysqlPtrOutput) MysqlSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseMysql) *string {
		if v == nil {
			return nil
		}
		return v.MysqlSettings
	}).(pulumi.StringPtrOutput)
}

// MySQL major version (`exo dbaas type show mysql` for reference; may only be set at creation time).
func (o DatabaseMysqlPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseMysql) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type DatabaseOpensearch struct {
	// OpenSearch Dashboards settings
	Dashboards *DatabaseOpensearchDashboards `pulumi:"dashboards"`
	// ❗ Service name
	ForkFromService *string `pulumi:"forkFromService"`
	// (can be used multiple times) Allows you to create glob style patterns and set a max number of indexes matching this pattern you want to keep. Creating indexes exceeding this value will cause the oldest one to get deleted. You could for example create a pattern looking like 'logs.?' and then create index logs.1, logs.2 etc, it will delete logs.1 once you create logs.6. Do note 'logs.?' does not apply to logs.10. Note: Setting max*index*count to 0 will do nothing and the pattern gets ignored.
	IndexPatterns []DatabaseOpensearchIndexPattern `pulumi:"indexPatterns"`
	// Template settings for all new indexes
	IndexTemplate *DatabaseOpensearchIndexTemplate `pulumi:"indexTemplate"`
	// Allow incoming connections from this list of CIDR address block, e.g. `["10.20.0.0/16"]
	IpFilters []string `pulumi:"ipFilters"`
	// Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.
	KeepIndexRefreshInterval *bool `pulumi:"keepIndexRefreshInterval"`
	// Maximum number of indexes to keep (Minimum value is `0`)
	//
	// Deprecated: This attribute is deprecated and is ignored
	MaxIndexCount *int `pulumi:"maxIndexCount"`
	// ❗ Name of a backup to recover from
	RecoveryBackupName *string `pulumi:"recoveryBackupName"`
	// OpenSearch-specific settings, in json. e.g.`jsonencode({thread_pool_search_size: 64})`. Use `exo x get-dbaas-settings-opensearch` to get a list of available settings.
	Settings *string `pulumi:"settings"`
	// ❗ OpenSearch major version (`exo dbaas type show opensearch` for reference)
	Version *string `pulumi:"version"`
}

// DatabaseOpensearchInput is an input type that accepts DatabaseOpensearchArgs and DatabaseOpensearchOutput values.
// You can construct a concrete instance of `DatabaseOpensearchInput` via:
//
//	DatabaseOpensearchArgs{...}
type DatabaseOpensearchInput interface {
	pulumi.Input

	ToDatabaseOpensearchOutput() DatabaseOpensearchOutput
	ToDatabaseOpensearchOutputWithContext(context.Context) DatabaseOpensearchOutput
}

type DatabaseOpensearchArgs struct {
	// OpenSearch Dashboards settings
	Dashboards DatabaseOpensearchDashboardsPtrInput `pulumi:"dashboards"`
	// ❗ Service name
	ForkFromService pulumi.StringPtrInput `pulumi:"forkFromService"`
	// (can be used multiple times) Allows you to create glob style patterns and set a max number of indexes matching this pattern you want to keep. Creating indexes exceeding this value will cause the oldest one to get deleted. You could for example create a pattern looking like 'logs.?' and then create index logs.1, logs.2 etc, it will delete logs.1 once you create logs.6. Do note 'logs.?' does not apply to logs.10. Note: Setting max*index*count to 0 will do nothing and the pattern gets ignored.
	IndexPatterns DatabaseOpensearchIndexPatternArrayInput `pulumi:"indexPatterns"`
	// Template settings for all new indexes
	IndexTemplate DatabaseOpensearchIndexTemplatePtrInput `pulumi:"indexTemplate"`
	// Allow incoming connections from this list of CIDR address block, e.g. `["10.20.0.0/16"]
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.
	KeepIndexRefreshInterval pulumi.BoolPtrInput `pulumi:"keepIndexRefreshInterval"`
	// Maximum number of indexes to keep (Minimum value is `0`)
	//
	// Deprecated: This attribute is deprecated and is ignored
	MaxIndexCount pulumi.IntPtrInput `pulumi:"maxIndexCount"`
	// ❗ Name of a backup to recover from
	RecoveryBackupName pulumi.StringPtrInput `pulumi:"recoveryBackupName"`
	// OpenSearch-specific settings, in json. e.g.`jsonencode({thread_pool_search_size: 64})`. Use `exo x get-dbaas-settings-opensearch` to get a list of available settings.
	Settings pulumi.StringPtrInput `pulumi:"settings"`
	// ❗ OpenSearch major version (`exo dbaas type show opensearch` for reference)
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (DatabaseOpensearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseOpensearch)(nil)).Elem()
}

func (i DatabaseOpensearchArgs) ToDatabaseOpensearchOutput() DatabaseOpensearchOutput {
	return i.ToDatabaseOpensearchOutputWithContext(context.Background())
}

func (i DatabaseOpensearchArgs) ToDatabaseOpensearchOutputWithContext(ctx context.Context) DatabaseOpensearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseOpensearchOutput)
}

func (i DatabaseOpensearchArgs) ToDatabaseOpensearchPtrOutput() DatabaseOpensearchPtrOutput {
	return i.ToDatabaseOpensearchPtrOutputWithContext(context.Background())
}

func (i DatabaseOpensearchArgs) ToDatabaseOpensearchPtrOutputWithContext(ctx context.Context) DatabaseOpensearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseOpensearchOutput).ToDatabaseOpensearchPtrOutputWithContext(ctx)
}

// DatabaseOpensearchPtrInput is an input type that accepts DatabaseOpensearchArgs, DatabaseOpensearchPtr and DatabaseOpensearchPtrOutput values.
// You can construct a concrete instance of `DatabaseOpensearchPtrInput` via:
//
//	        DatabaseOpensearchArgs{...}
//
//	or:
//
//	        nil
type DatabaseOpensearchPtrInput interface {
	pulumi.Input

	ToDatabaseOpensearchPtrOutput() DatabaseOpensearchPtrOutput
	ToDatabaseOpensearchPtrOutputWithContext(context.Context) DatabaseOpensearchPtrOutput
}

type databaseOpensearchPtrType DatabaseOpensearchArgs

func DatabaseOpensearchPtr(v *DatabaseOpensearchArgs) DatabaseOpensearchPtrInput {
	return (*databaseOpensearchPtrType)(v)
}

func (*databaseOpensearchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseOpensearch)(nil)).Elem()
}

func (i *databaseOpensearchPtrType) ToDatabaseOpensearchPtrOutput() DatabaseOpensearchPtrOutput {
	return i.ToDatabaseOpensearchPtrOutputWithContext(context.Background())
}

func (i *databaseOpensearchPtrType) ToDatabaseOpensearchPtrOutputWithContext(ctx context.Context) DatabaseOpensearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseOpensearchPtrOutput)
}

type DatabaseOpensearchOutput struct{ *pulumi.OutputState }

func (DatabaseOpensearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseOpensearch)(nil)).Elem()
}

func (o DatabaseOpensearchOutput) ToDatabaseOpensearchOutput() DatabaseOpensearchOutput {
	return o
}

func (o DatabaseOpensearchOutput) ToDatabaseOpensearchOutputWithContext(ctx context.Context) DatabaseOpensearchOutput {
	return o
}

func (o DatabaseOpensearchOutput) ToDatabaseOpensearchPtrOutput() DatabaseOpensearchPtrOutput {
	return o.ToDatabaseOpensearchPtrOutputWithContext(context.Background())
}

func (o DatabaseOpensearchOutput) ToDatabaseOpensearchPtrOutputWithContext(ctx context.Context) DatabaseOpensearchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseOpensearch) *DatabaseOpensearch {
		return &v
	}).(DatabaseOpensearchPtrOutput)
}

// OpenSearch Dashboards settings
func (o DatabaseOpensearchOutput) Dashboards() DatabaseOpensearchDashboardsPtrOutput {
	return o.ApplyT(func(v DatabaseOpensearch) *DatabaseOpensearchDashboards { return v.Dashboards }).(DatabaseOpensearchDashboardsPtrOutput)
}

// ❗ Service name
func (o DatabaseOpensearchOutput) ForkFromService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseOpensearch) *string { return v.ForkFromService }).(pulumi.StringPtrOutput)
}

// (can be used multiple times) Allows you to create glob style patterns and set a max number of indexes matching this pattern you want to keep. Creating indexes exceeding this value will cause the oldest one to get deleted. You could for example create a pattern looking like 'logs.?' and then create index logs.1, logs.2 etc, it will delete logs.1 once you create logs.6. Do note 'logs.?' does not apply to logs.10. Note: Setting max*index*count to 0 will do nothing and the pattern gets ignored.
func (o DatabaseOpensearchOutput) IndexPatterns() DatabaseOpensearchIndexPatternArrayOutput {
	return o.ApplyT(func(v DatabaseOpensearch) []DatabaseOpensearchIndexPattern { return v.IndexPatterns }).(DatabaseOpensearchIndexPatternArrayOutput)
}

// Template settings for all new indexes
func (o DatabaseOpensearchOutput) IndexTemplate() DatabaseOpensearchIndexTemplatePtrOutput {
	return o.ApplyT(func(v DatabaseOpensearch) *DatabaseOpensearchIndexTemplate { return v.IndexTemplate }).(DatabaseOpensearchIndexTemplatePtrOutput)
}

// Allow incoming connections from this list of CIDR address block, e.g. `["10.20.0.0/16"]
func (o DatabaseOpensearchOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseOpensearch) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.
func (o DatabaseOpensearchOutput) KeepIndexRefreshInterval() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseOpensearch) *bool { return v.KeepIndexRefreshInterval }).(pulumi.BoolPtrOutput)
}

// Maximum number of indexes to keep (Minimum value is `0`)
//
// Deprecated: This attribute is deprecated and is ignored
func (o DatabaseOpensearchOutput) MaxIndexCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseOpensearch) *int { return v.MaxIndexCount }).(pulumi.IntPtrOutput)
}

// ❗ Name of a backup to recover from
func (o DatabaseOpensearchOutput) RecoveryBackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseOpensearch) *string { return v.RecoveryBackupName }).(pulumi.StringPtrOutput)
}

// OpenSearch-specific settings, in json. e.g.`jsonencode({thread_pool_search_size: 64})`. Use `exo x get-dbaas-settings-opensearch` to get a list of available settings.
func (o DatabaseOpensearchOutput) Settings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseOpensearch) *string { return v.Settings }).(pulumi.StringPtrOutput)
}

// ❗ OpenSearch major version (`exo dbaas type show opensearch` for reference)
func (o DatabaseOpensearchOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseOpensearch) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type DatabaseOpensearchPtrOutput struct{ *pulumi.OutputState }

func (DatabaseOpensearchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseOpensearch)(nil)).Elem()
}

func (o DatabaseOpensearchPtrOutput) ToDatabaseOpensearchPtrOutput() DatabaseOpensearchPtrOutput {
	return o
}

func (o DatabaseOpensearchPtrOutput) ToDatabaseOpensearchPtrOutputWithContext(ctx context.Context) DatabaseOpensearchPtrOutput {
	return o
}

func (o DatabaseOpensearchPtrOutput) Elem() DatabaseOpensearchOutput {
	return o.ApplyT(func(v *DatabaseOpensearch) DatabaseOpensearch {
		if v != nil {
			return *v
		}
		var ret DatabaseOpensearch
		return ret
	}).(DatabaseOpensearchOutput)
}

// OpenSearch Dashboards settings
func (o DatabaseOpensearchPtrOutput) Dashboards() DatabaseOpensearchDashboardsPtrOutput {
	return o.ApplyT(func(v *DatabaseOpensearch) *DatabaseOpensearchDashboards {
		if v == nil {
			return nil
		}
		return v.Dashboards
	}).(DatabaseOpensearchDashboardsPtrOutput)
}

// ❗ Service name
func (o DatabaseOpensearchPtrOutput) ForkFromService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseOpensearch) *string {
		if v == nil {
			return nil
		}
		return v.ForkFromService
	}).(pulumi.StringPtrOutput)
}

// (can be used multiple times) Allows you to create glob style patterns and set a max number of indexes matching this pattern you want to keep. Creating indexes exceeding this value will cause the oldest one to get deleted. You could for example create a pattern looking like 'logs.?' and then create index logs.1, logs.2 etc, it will delete logs.1 once you create logs.6. Do note 'logs.?' does not apply to logs.10. Note: Setting max*index*count to 0 will do nothing and the pattern gets ignored.
func (o DatabaseOpensearchPtrOutput) IndexPatterns() DatabaseOpensearchIndexPatternArrayOutput {
	return o.ApplyT(func(v *DatabaseOpensearch) []DatabaseOpensearchIndexPattern {
		if v == nil {
			return nil
		}
		return v.IndexPatterns
	}).(DatabaseOpensearchIndexPatternArrayOutput)
}

// Template settings for all new indexes
func (o DatabaseOpensearchPtrOutput) IndexTemplate() DatabaseOpensearchIndexTemplatePtrOutput {
	return o.ApplyT(func(v *DatabaseOpensearch) *DatabaseOpensearchIndexTemplate {
		if v == nil {
			return nil
		}
		return v.IndexTemplate
	}).(DatabaseOpensearchIndexTemplatePtrOutput)
}

// Allow incoming connections from this list of CIDR address block, e.g. `["10.20.0.0/16"]
func (o DatabaseOpensearchPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatabaseOpensearch) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.
func (o DatabaseOpensearchPtrOutput) KeepIndexRefreshInterval() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseOpensearch) *bool {
		if v == nil {
			return nil
		}
		return v.KeepIndexRefreshInterval
	}).(pulumi.BoolPtrOutput)
}

// Maximum number of indexes to keep (Minimum value is `0`)
//
// Deprecated: This attribute is deprecated and is ignored
func (o DatabaseOpensearchPtrOutput) MaxIndexCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseOpensearch) *int {
		if v == nil {
			return nil
		}
		return v.MaxIndexCount
	}).(pulumi.IntPtrOutput)
}

// ❗ Name of a backup to recover from
func (o DatabaseOpensearchPtrOutput) RecoveryBackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseOpensearch) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryBackupName
	}).(pulumi.StringPtrOutput)
}

// OpenSearch-specific settings, in json. e.g.`jsonencode({thread_pool_search_size: 64})`. Use `exo x get-dbaas-settings-opensearch` to get a list of available settings.
func (o DatabaseOpensearchPtrOutput) Settings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseOpensearch) *string {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(pulumi.StringPtrOutput)
}

// ❗ OpenSearch major version (`exo dbaas type show opensearch` for reference)
func (o DatabaseOpensearchPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseOpensearch) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type DatabaseOpensearchDashboards struct {
	// Enable or disable OpenSearch Dashboards (default: true).
	Enabled *bool `pulumi:"enabled"`
	// Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max*old*space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch. (default: 128).
	MaxOldSpaceSize *int `pulumi:"maxOldSpaceSize"`
	// Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch (default: 30000)
	RequestTimeout *int `pulumi:"requestTimeout"`
}

// DatabaseOpensearchDashboardsInput is an input type that accepts DatabaseOpensearchDashboardsArgs and DatabaseOpensearchDashboardsOutput values.
// You can construct a concrete instance of `DatabaseOpensearchDashboardsInput` via:
//
//	DatabaseOpensearchDashboardsArgs{...}
type DatabaseOpensearchDashboardsInput interface {
	pulumi.Input

	ToDatabaseOpensearchDashboardsOutput() DatabaseOpensearchDashboardsOutput
	ToDatabaseOpensearchDashboardsOutputWithContext(context.Context) DatabaseOpensearchDashboardsOutput
}

type DatabaseOpensearchDashboardsArgs struct {
	// Enable or disable OpenSearch Dashboards (default: true).
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max*old*space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch. (default: 128).
	MaxOldSpaceSize pulumi.IntPtrInput `pulumi:"maxOldSpaceSize"`
	// Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch (default: 30000)
	RequestTimeout pulumi.IntPtrInput `pulumi:"requestTimeout"`
}

func (DatabaseOpensearchDashboardsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseOpensearchDashboards)(nil)).Elem()
}

func (i DatabaseOpensearchDashboardsArgs) ToDatabaseOpensearchDashboardsOutput() DatabaseOpensearchDashboardsOutput {
	return i.ToDatabaseOpensearchDashboardsOutputWithContext(context.Background())
}

func (i DatabaseOpensearchDashboardsArgs) ToDatabaseOpensearchDashboardsOutputWithContext(ctx context.Context) DatabaseOpensearchDashboardsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseOpensearchDashboardsOutput)
}

func (i DatabaseOpensearchDashboardsArgs) ToDatabaseOpensearchDashboardsPtrOutput() DatabaseOpensearchDashboardsPtrOutput {
	return i.ToDatabaseOpensearchDashboardsPtrOutputWithContext(context.Background())
}

func (i DatabaseOpensearchDashboardsArgs) ToDatabaseOpensearchDashboardsPtrOutputWithContext(ctx context.Context) DatabaseOpensearchDashboardsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseOpensearchDashboardsOutput).ToDatabaseOpensearchDashboardsPtrOutputWithContext(ctx)
}

// DatabaseOpensearchDashboardsPtrInput is an input type that accepts DatabaseOpensearchDashboardsArgs, DatabaseOpensearchDashboardsPtr and DatabaseOpensearchDashboardsPtrOutput values.
// You can construct a concrete instance of `DatabaseOpensearchDashboardsPtrInput` via:
//
//	        DatabaseOpensearchDashboardsArgs{...}
//
//	or:
//
//	        nil
type DatabaseOpensearchDashboardsPtrInput interface {
	pulumi.Input

	ToDatabaseOpensearchDashboardsPtrOutput() DatabaseOpensearchDashboardsPtrOutput
	ToDatabaseOpensearchDashboardsPtrOutputWithContext(context.Context) DatabaseOpensearchDashboardsPtrOutput
}

type databaseOpensearchDashboardsPtrType DatabaseOpensearchDashboardsArgs

func DatabaseOpensearchDashboardsPtr(v *DatabaseOpensearchDashboardsArgs) DatabaseOpensearchDashboardsPtrInput {
	return (*databaseOpensearchDashboardsPtrType)(v)
}

func (*databaseOpensearchDashboardsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseOpensearchDashboards)(nil)).Elem()
}

func (i *databaseOpensearchDashboardsPtrType) ToDatabaseOpensearchDashboardsPtrOutput() DatabaseOpensearchDashboardsPtrOutput {
	return i.ToDatabaseOpensearchDashboardsPtrOutputWithContext(context.Background())
}

func (i *databaseOpensearchDashboardsPtrType) ToDatabaseOpensearchDashboardsPtrOutputWithContext(ctx context.Context) DatabaseOpensearchDashboardsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseOpensearchDashboardsPtrOutput)
}

type DatabaseOpensearchDashboardsOutput struct{ *pulumi.OutputState }

func (DatabaseOpensearchDashboardsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseOpensearchDashboards)(nil)).Elem()
}

func (o DatabaseOpensearchDashboardsOutput) ToDatabaseOpensearchDashboardsOutput() DatabaseOpensearchDashboardsOutput {
	return o
}

func (o DatabaseOpensearchDashboardsOutput) ToDatabaseOpensearchDashboardsOutputWithContext(ctx context.Context) DatabaseOpensearchDashboardsOutput {
	return o
}

func (o DatabaseOpensearchDashboardsOutput) ToDatabaseOpensearchDashboardsPtrOutput() DatabaseOpensearchDashboardsPtrOutput {
	return o.ToDatabaseOpensearchDashboardsPtrOutputWithContext(context.Background())
}

func (o DatabaseOpensearchDashboardsOutput) ToDatabaseOpensearchDashboardsPtrOutputWithContext(ctx context.Context) DatabaseOpensearchDashboardsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseOpensearchDashboards) *DatabaseOpensearchDashboards {
		return &v
	}).(DatabaseOpensearchDashboardsPtrOutput)
}

// Enable or disable OpenSearch Dashboards (default: true).
func (o DatabaseOpensearchDashboardsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseOpensearchDashboards) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max*old*space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch. (default: 128).
func (o DatabaseOpensearchDashboardsOutput) MaxOldSpaceSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseOpensearchDashboards) *int { return v.MaxOldSpaceSize }).(pulumi.IntPtrOutput)
}

// Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch (default: 30000)
func (o DatabaseOpensearchDashboardsOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseOpensearchDashboards) *int { return v.RequestTimeout }).(pulumi.IntPtrOutput)
}

type DatabaseOpensearchDashboardsPtrOutput struct{ *pulumi.OutputState }

func (DatabaseOpensearchDashboardsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseOpensearchDashboards)(nil)).Elem()
}

func (o DatabaseOpensearchDashboardsPtrOutput) ToDatabaseOpensearchDashboardsPtrOutput() DatabaseOpensearchDashboardsPtrOutput {
	return o
}

func (o DatabaseOpensearchDashboardsPtrOutput) ToDatabaseOpensearchDashboardsPtrOutputWithContext(ctx context.Context) DatabaseOpensearchDashboardsPtrOutput {
	return o
}

func (o DatabaseOpensearchDashboardsPtrOutput) Elem() DatabaseOpensearchDashboardsOutput {
	return o.ApplyT(func(v *DatabaseOpensearchDashboards) DatabaseOpensearchDashboards {
		if v != nil {
			return *v
		}
		var ret DatabaseOpensearchDashboards
		return ret
	}).(DatabaseOpensearchDashboardsOutput)
}

// Enable or disable OpenSearch Dashboards (default: true).
func (o DatabaseOpensearchDashboardsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseOpensearchDashboards) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max*old*space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch. (default: 128).
func (o DatabaseOpensearchDashboardsPtrOutput) MaxOldSpaceSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseOpensearchDashboards) *int {
		if v == nil {
			return nil
		}
		return v.MaxOldSpaceSize
	}).(pulumi.IntPtrOutput)
}

// Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch (default: 30000)
func (o DatabaseOpensearchDashboardsPtrOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseOpensearchDashboards) *int {
		if v == nil {
			return nil
		}
		return v.RequestTimeout
	}).(pulumi.IntPtrOutput)
}

type DatabaseOpensearchIndexPattern struct {
	// Maximum number of indexes to keep before deleting the oldest one (Minimum value is `0`)
	MaxIndexCount *int `pulumi:"maxIndexCount"`
	// fnmatch pattern
	Pattern *string `pulumi:"pattern"`
	// `alphabetical` or `creationDate`.
	SortingAlgorithm *string `pulumi:"sortingAlgorithm"`
}

// DatabaseOpensearchIndexPatternInput is an input type that accepts DatabaseOpensearchIndexPatternArgs and DatabaseOpensearchIndexPatternOutput values.
// You can construct a concrete instance of `DatabaseOpensearchIndexPatternInput` via:
//
//	DatabaseOpensearchIndexPatternArgs{...}
type DatabaseOpensearchIndexPatternInput interface {
	pulumi.Input

	ToDatabaseOpensearchIndexPatternOutput() DatabaseOpensearchIndexPatternOutput
	ToDatabaseOpensearchIndexPatternOutputWithContext(context.Context) DatabaseOpensearchIndexPatternOutput
}

type DatabaseOpensearchIndexPatternArgs struct {
	// Maximum number of indexes to keep before deleting the oldest one (Minimum value is `0`)
	MaxIndexCount pulumi.IntPtrInput `pulumi:"maxIndexCount"`
	// fnmatch pattern
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// `alphabetical` or `creationDate`.
	SortingAlgorithm pulumi.StringPtrInput `pulumi:"sortingAlgorithm"`
}

func (DatabaseOpensearchIndexPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseOpensearchIndexPattern)(nil)).Elem()
}

func (i DatabaseOpensearchIndexPatternArgs) ToDatabaseOpensearchIndexPatternOutput() DatabaseOpensearchIndexPatternOutput {
	return i.ToDatabaseOpensearchIndexPatternOutputWithContext(context.Background())
}

func (i DatabaseOpensearchIndexPatternArgs) ToDatabaseOpensearchIndexPatternOutputWithContext(ctx context.Context) DatabaseOpensearchIndexPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseOpensearchIndexPatternOutput)
}

// DatabaseOpensearchIndexPatternArrayInput is an input type that accepts DatabaseOpensearchIndexPatternArray and DatabaseOpensearchIndexPatternArrayOutput values.
// You can construct a concrete instance of `DatabaseOpensearchIndexPatternArrayInput` via:
//
//	DatabaseOpensearchIndexPatternArray{ DatabaseOpensearchIndexPatternArgs{...} }
type DatabaseOpensearchIndexPatternArrayInput interface {
	pulumi.Input

	ToDatabaseOpensearchIndexPatternArrayOutput() DatabaseOpensearchIndexPatternArrayOutput
	ToDatabaseOpensearchIndexPatternArrayOutputWithContext(context.Context) DatabaseOpensearchIndexPatternArrayOutput
}

type DatabaseOpensearchIndexPatternArray []DatabaseOpensearchIndexPatternInput

func (DatabaseOpensearchIndexPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseOpensearchIndexPattern)(nil)).Elem()
}

func (i DatabaseOpensearchIndexPatternArray) ToDatabaseOpensearchIndexPatternArrayOutput() DatabaseOpensearchIndexPatternArrayOutput {
	return i.ToDatabaseOpensearchIndexPatternArrayOutputWithContext(context.Background())
}

func (i DatabaseOpensearchIndexPatternArray) ToDatabaseOpensearchIndexPatternArrayOutputWithContext(ctx context.Context) DatabaseOpensearchIndexPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseOpensearchIndexPatternArrayOutput)
}

type DatabaseOpensearchIndexPatternOutput struct{ *pulumi.OutputState }

func (DatabaseOpensearchIndexPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseOpensearchIndexPattern)(nil)).Elem()
}

func (o DatabaseOpensearchIndexPatternOutput) ToDatabaseOpensearchIndexPatternOutput() DatabaseOpensearchIndexPatternOutput {
	return o
}

func (o DatabaseOpensearchIndexPatternOutput) ToDatabaseOpensearchIndexPatternOutputWithContext(ctx context.Context) DatabaseOpensearchIndexPatternOutput {
	return o
}

// Maximum number of indexes to keep before deleting the oldest one (Minimum value is `0`)
func (o DatabaseOpensearchIndexPatternOutput) MaxIndexCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseOpensearchIndexPattern) *int { return v.MaxIndexCount }).(pulumi.IntPtrOutput)
}

// fnmatch pattern
func (o DatabaseOpensearchIndexPatternOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseOpensearchIndexPattern) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// `alphabetical` or `creationDate`.
func (o DatabaseOpensearchIndexPatternOutput) SortingAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseOpensearchIndexPattern) *string { return v.SortingAlgorithm }).(pulumi.StringPtrOutput)
}

type DatabaseOpensearchIndexPatternArrayOutput struct{ *pulumi.OutputState }

func (DatabaseOpensearchIndexPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseOpensearchIndexPattern)(nil)).Elem()
}

func (o DatabaseOpensearchIndexPatternArrayOutput) ToDatabaseOpensearchIndexPatternArrayOutput() DatabaseOpensearchIndexPatternArrayOutput {
	return o
}

func (o DatabaseOpensearchIndexPatternArrayOutput) ToDatabaseOpensearchIndexPatternArrayOutputWithContext(ctx context.Context) DatabaseOpensearchIndexPatternArrayOutput {
	return o
}

func (o DatabaseOpensearchIndexPatternArrayOutput) Index(i pulumi.IntInput) DatabaseOpensearchIndexPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseOpensearchIndexPattern {
		return vs[0].([]DatabaseOpensearchIndexPattern)[vs[1].(int)]
	}).(DatabaseOpensearchIndexPatternOutput)
}

type DatabaseOpensearchIndexTemplate struct {
	// The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. (Default is 10000. Minimum value is `0`, maximum value is `100000`.)
	MappingNestedObjectsLimit *int `pulumi:"mappingNestedObjectsLimit"`
	// The number of replicas each primary shard has. (Minimum value is `0`, maximum value is `29`)
	NumberOfReplicas *int `pulumi:"numberOfReplicas"`
	// The number of primary shards that an index should have. (Minimum value is `1`, maximum value is `1024`.)
	NumberOfShards *int `pulumi:"numberOfShards"`
}

// DatabaseOpensearchIndexTemplateInput is an input type that accepts DatabaseOpensearchIndexTemplateArgs and DatabaseOpensearchIndexTemplateOutput values.
// You can construct a concrete instance of `DatabaseOpensearchIndexTemplateInput` via:
//
//	DatabaseOpensearchIndexTemplateArgs{...}
type DatabaseOpensearchIndexTemplateInput interface {
	pulumi.Input

	ToDatabaseOpensearchIndexTemplateOutput() DatabaseOpensearchIndexTemplateOutput
	ToDatabaseOpensearchIndexTemplateOutputWithContext(context.Context) DatabaseOpensearchIndexTemplateOutput
}

type DatabaseOpensearchIndexTemplateArgs struct {
	// The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. (Default is 10000. Minimum value is `0`, maximum value is `100000`.)
	MappingNestedObjectsLimit pulumi.IntPtrInput `pulumi:"mappingNestedObjectsLimit"`
	// The number of replicas each primary shard has. (Minimum value is `0`, maximum value is `29`)
	NumberOfReplicas pulumi.IntPtrInput `pulumi:"numberOfReplicas"`
	// The number of primary shards that an index should have. (Minimum value is `1`, maximum value is `1024`.)
	NumberOfShards pulumi.IntPtrInput `pulumi:"numberOfShards"`
}

func (DatabaseOpensearchIndexTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseOpensearchIndexTemplate)(nil)).Elem()
}

func (i DatabaseOpensearchIndexTemplateArgs) ToDatabaseOpensearchIndexTemplateOutput() DatabaseOpensearchIndexTemplateOutput {
	return i.ToDatabaseOpensearchIndexTemplateOutputWithContext(context.Background())
}

func (i DatabaseOpensearchIndexTemplateArgs) ToDatabaseOpensearchIndexTemplateOutputWithContext(ctx context.Context) DatabaseOpensearchIndexTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseOpensearchIndexTemplateOutput)
}

func (i DatabaseOpensearchIndexTemplateArgs) ToDatabaseOpensearchIndexTemplatePtrOutput() DatabaseOpensearchIndexTemplatePtrOutput {
	return i.ToDatabaseOpensearchIndexTemplatePtrOutputWithContext(context.Background())
}

func (i DatabaseOpensearchIndexTemplateArgs) ToDatabaseOpensearchIndexTemplatePtrOutputWithContext(ctx context.Context) DatabaseOpensearchIndexTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseOpensearchIndexTemplateOutput).ToDatabaseOpensearchIndexTemplatePtrOutputWithContext(ctx)
}

// DatabaseOpensearchIndexTemplatePtrInput is an input type that accepts DatabaseOpensearchIndexTemplateArgs, DatabaseOpensearchIndexTemplatePtr and DatabaseOpensearchIndexTemplatePtrOutput values.
// You can construct a concrete instance of `DatabaseOpensearchIndexTemplatePtrInput` via:
//
//	        DatabaseOpensearchIndexTemplateArgs{...}
//
//	or:
//
//	        nil
type DatabaseOpensearchIndexTemplatePtrInput interface {
	pulumi.Input

	ToDatabaseOpensearchIndexTemplatePtrOutput() DatabaseOpensearchIndexTemplatePtrOutput
	ToDatabaseOpensearchIndexTemplatePtrOutputWithContext(context.Context) DatabaseOpensearchIndexTemplatePtrOutput
}

type databaseOpensearchIndexTemplatePtrType DatabaseOpensearchIndexTemplateArgs

func DatabaseOpensearchIndexTemplatePtr(v *DatabaseOpensearchIndexTemplateArgs) DatabaseOpensearchIndexTemplatePtrInput {
	return (*databaseOpensearchIndexTemplatePtrType)(v)
}

func (*databaseOpensearchIndexTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseOpensearchIndexTemplate)(nil)).Elem()
}

func (i *databaseOpensearchIndexTemplatePtrType) ToDatabaseOpensearchIndexTemplatePtrOutput() DatabaseOpensearchIndexTemplatePtrOutput {
	return i.ToDatabaseOpensearchIndexTemplatePtrOutputWithContext(context.Background())
}

func (i *databaseOpensearchIndexTemplatePtrType) ToDatabaseOpensearchIndexTemplatePtrOutputWithContext(ctx context.Context) DatabaseOpensearchIndexTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseOpensearchIndexTemplatePtrOutput)
}

type DatabaseOpensearchIndexTemplateOutput struct{ *pulumi.OutputState }

func (DatabaseOpensearchIndexTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseOpensearchIndexTemplate)(nil)).Elem()
}

func (o DatabaseOpensearchIndexTemplateOutput) ToDatabaseOpensearchIndexTemplateOutput() DatabaseOpensearchIndexTemplateOutput {
	return o
}

func (o DatabaseOpensearchIndexTemplateOutput) ToDatabaseOpensearchIndexTemplateOutputWithContext(ctx context.Context) DatabaseOpensearchIndexTemplateOutput {
	return o
}

func (o DatabaseOpensearchIndexTemplateOutput) ToDatabaseOpensearchIndexTemplatePtrOutput() DatabaseOpensearchIndexTemplatePtrOutput {
	return o.ToDatabaseOpensearchIndexTemplatePtrOutputWithContext(context.Background())
}

func (o DatabaseOpensearchIndexTemplateOutput) ToDatabaseOpensearchIndexTemplatePtrOutputWithContext(ctx context.Context) DatabaseOpensearchIndexTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseOpensearchIndexTemplate) *DatabaseOpensearchIndexTemplate {
		return &v
	}).(DatabaseOpensearchIndexTemplatePtrOutput)
}

// The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. (Default is 10000. Minimum value is `0`, maximum value is `100000`.)
func (o DatabaseOpensearchIndexTemplateOutput) MappingNestedObjectsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseOpensearchIndexTemplate) *int { return v.MappingNestedObjectsLimit }).(pulumi.IntPtrOutput)
}

// The number of replicas each primary shard has. (Minimum value is `0`, maximum value is `29`)
func (o DatabaseOpensearchIndexTemplateOutput) NumberOfReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseOpensearchIndexTemplate) *int { return v.NumberOfReplicas }).(pulumi.IntPtrOutput)
}

// The number of primary shards that an index should have. (Minimum value is `1`, maximum value is `1024`.)
func (o DatabaseOpensearchIndexTemplateOutput) NumberOfShards() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseOpensearchIndexTemplate) *int { return v.NumberOfShards }).(pulumi.IntPtrOutput)
}

type DatabaseOpensearchIndexTemplatePtrOutput struct{ *pulumi.OutputState }

func (DatabaseOpensearchIndexTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseOpensearchIndexTemplate)(nil)).Elem()
}

func (o DatabaseOpensearchIndexTemplatePtrOutput) ToDatabaseOpensearchIndexTemplatePtrOutput() DatabaseOpensearchIndexTemplatePtrOutput {
	return o
}

func (o DatabaseOpensearchIndexTemplatePtrOutput) ToDatabaseOpensearchIndexTemplatePtrOutputWithContext(ctx context.Context) DatabaseOpensearchIndexTemplatePtrOutput {
	return o
}

func (o DatabaseOpensearchIndexTemplatePtrOutput) Elem() DatabaseOpensearchIndexTemplateOutput {
	return o.ApplyT(func(v *DatabaseOpensearchIndexTemplate) DatabaseOpensearchIndexTemplate {
		if v != nil {
			return *v
		}
		var ret DatabaseOpensearchIndexTemplate
		return ret
	}).(DatabaseOpensearchIndexTemplateOutput)
}

// The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. (Default is 10000. Minimum value is `0`, maximum value is `100000`.)
func (o DatabaseOpensearchIndexTemplatePtrOutput) MappingNestedObjectsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseOpensearchIndexTemplate) *int {
		if v == nil {
			return nil
		}
		return v.MappingNestedObjectsLimit
	}).(pulumi.IntPtrOutput)
}

// The number of replicas each primary shard has. (Minimum value is `0`, maximum value is `29`)
func (o DatabaseOpensearchIndexTemplatePtrOutput) NumberOfReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseOpensearchIndexTemplate) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfReplicas
	}).(pulumi.IntPtrOutput)
}

// The number of primary shards that an index should have. (Minimum value is `1`, maximum value is `1024`.)
func (o DatabaseOpensearchIndexTemplatePtrOutput) NumberOfShards() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseOpensearchIndexTemplate) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfShards
	}).(pulumi.IntPtrOutput)
}

type DatabasePg struct {
	// A custom administrator account password (may only be set at creation time).
	AdminPassword *string `pulumi:"adminPassword"`
	// A custom administrator account username (may only be set at creation time).
	AdminUsername *string `pulumi:"adminUsername"`
	// The automated backup schedule (`HH:MM`).
	BackupSchedule *string `pulumi:"backupSchedule"`
	// A list of CIDR blocks to allow incoming connections from.
	IpFilters []string `pulumi:"ipFilters"`
	// PostgreSQL configuration settings in JSON format (`exo dbaas type show pg --settings=pg` for reference).
	PgSettings *string `pulumi:"pgSettings"`
	// PgBouncer configuration settings in JSON format (`exo dbaas type show pg --settings=pgbouncer` for reference).
	PgbouncerSettings *string `pulumi:"pgbouncerSettings"`
	// pglookout configuration settings in JSON format (`exo dbaas type show pg --settings=pglookout` for reference).
	PglookoutSettings *string `pulumi:"pglookoutSettings"`
	// PostgreSQL major version (`exo dbaas type show pg` for reference; may only be set at creation time).
	Version *string `pulumi:"version"`
}

// DatabasePgInput is an input type that accepts DatabasePgArgs and DatabasePgOutput values.
// You can construct a concrete instance of `DatabasePgInput` via:
//
//	DatabasePgArgs{...}
type DatabasePgInput interface {
	pulumi.Input

	ToDatabasePgOutput() DatabasePgOutput
	ToDatabasePgOutputWithContext(context.Context) DatabasePgOutput
}

type DatabasePgArgs struct {
	// A custom administrator account password (may only be set at creation time).
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// A custom administrator account username (may only be set at creation time).
	AdminUsername pulumi.StringPtrInput `pulumi:"adminUsername"`
	// The automated backup schedule (`HH:MM`).
	BackupSchedule pulumi.StringPtrInput `pulumi:"backupSchedule"`
	// A list of CIDR blocks to allow incoming connections from.
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// PostgreSQL configuration settings in JSON format (`exo dbaas type show pg --settings=pg` for reference).
	PgSettings pulumi.StringPtrInput `pulumi:"pgSettings"`
	// PgBouncer configuration settings in JSON format (`exo dbaas type show pg --settings=pgbouncer` for reference).
	PgbouncerSettings pulumi.StringPtrInput `pulumi:"pgbouncerSettings"`
	// pglookout configuration settings in JSON format (`exo dbaas type show pg --settings=pglookout` for reference).
	PglookoutSettings pulumi.StringPtrInput `pulumi:"pglookoutSettings"`
	// PostgreSQL major version (`exo dbaas type show pg` for reference; may only be set at creation time).
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (DatabasePgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasePg)(nil)).Elem()
}

func (i DatabasePgArgs) ToDatabasePgOutput() DatabasePgOutput {
	return i.ToDatabasePgOutputWithContext(context.Background())
}

func (i DatabasePgArgs) ToDatabasePgOutputWithContext(ctx context.Context) DatabasePgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasePgOutput)
}

func (i DatabasePgArgs) ToDatabasePgPtrOutput() DatabasePgPtrOutput {
	return i.ToDatabasePgPtrOutputWithContext(context.Background())
}

func (i DatabasePgArgs) ToDatabasePgPtrOutputWithContext(ctx context.Context) DatabasePgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasePgOutput).ToDatabasePgPtrOutputWithContext(ctx)
}

// DatabasePgPtrInput is an input type that accepts DatabasePgArgs, DatabasePgPtr and DatabasePgPtrOutput values.
// You can construct a concrete instance of `DatabasePgPtrInput` via:
//
//	        DatabasePgArgs{...}
//
//	or:
//
//	        nil
type DatabasePgPtrInput interface {
	pulumi.Input

	ToDatabasePgPtrOutput() DatabasePgPtrOutput
	ToDatabasePgPtrOutputWithContext(context.Context) DatabasePgPtrOutput
}

type databasePgPtrType DatabasePgArgs

func DatabasePgPtr(v *DatabasePgArgs) DatabasePgPtrInput {
	return (*databasePgPtrType)(v)
}

func (*databasePgPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabasePg)(nil)).Elem()
}

func (i *databasePgPtrType) ToDatabasePgPtrOutput() DatabasePgPtrOutput {
	return i.ToDatabasePgPtrOutputWithContext(context.Background())
}

func (i *databasePgPtrType) ToDatabasePgPtrOutputWithContext(ctx context.Context) DatabasePgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasePgPtrOutput)
}

type DatabasePgOutput struct{ *pulumi.OutputState }

func (DatabasePgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasePg)(nil)).Elem()
}

func (o DatabasePgOutput) ToDatabasePgOutput() DatabasePgOutput {
	return o
}

func (o DatabasePgOutput) ToDatabasePgOutputWithContext(ctx context.Context) DatabasePgOutput {
	return o
}

func (o DatabasePgOutput) ToDatabasePgPtrOutput() DatabasePgPtrOutput {
	return o.ToDatabasePgPtrOutputWithContext(context.Background())
}

func (o DatabasePgOutput) ToDatabasePgPtrOutputWithContext(ctx context.Context) DatabasePgPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabasePg) *DatabasePg {
		return &v
	}).(DatabasePgPtrOutput)
}

// A custom administrator account password (may only be set at creation time).
func (o DatabasePgOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabasePg) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// A custom administrator account username (may only be set at creation time).
func (o DatabasePgOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabasePg) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

// The automated backup schedule (`HH:MM`).
func (o DatabasePgOutput) BackupSchedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabasePg) *string { return v.BackupSchedule }).(pulumi.StringPtrOutput)
}

// A list of CIDR blocks to allow incoming connections from.
func (o DatabasePgOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabasePg) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// PostgreSQL configuration settings in JSON format (`exo dbaas type show pg --settings=pg` for reference).
func (o DatabasePgOutput) PgSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabasePg) *string { return v.PgSettings }).(pulumi.StringPtrOutput)
}

// PgBouncer configuration settings in JSON format (`exo dbaas type show pg --settings=pgbouncer` for reference).
func (o DatabasePgOutput) PgbouncerSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabasePg) *string { return v.PgbouncerSettings }).(pulumi.StringPtrOutput)
}

// pglookout configuration settings in JSON format (`exo dbaas type show pg --settings=pglookout` for reference).
func (o DatabasePgOutput) PglookoutSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabasePg) *string { return v.PglookoutSettings }).(pulumi.StringPtrOutput)
}

// PostgreSQL major version (`exo dbaas type show pg` for reference; may only be set at creation time).
func (o DatabasePgOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabasePg) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type DatabasePgPtrOutput struct{ *pulumi.OutputState }

func (DatabasePgPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabasePg)(nil)).Elem()
}

func (o DatabasePgPtrOutput) ToDatabasePgPtrOutput() DatabasePgPtrOutput {
	return o
}

func (o DatabasePgPtrOutput) ToDatabasePgPtrOutputWithContext(ctx context.Context) DatabasePgPtrOutput {
	return o
}

func (o DatabasePgPtrOutput) Elem() DatabasePgOutput {
	return o.ApplyT(func(v *DatabasePg) DatabasePg {
		if v != nil {
			return *v
		}
		var ret DatabasePg
		return ret
	}).(DatabasePgOutput)
}

// A custom administrator account password (may only be set at creation time).
func (o DatabasePgPtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabasePg) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// A custom administrator account username (may only be set at creation time).
func (o DatabasePgPtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabasePg) *string {
		if v == nil {
			return nil
		}
		return v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// The automated backup schedule (`HH:MM`).
func (o DatabasePgPtrOutput) BackupSchedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabasePg) *string {
		if v == nil {
			return nil
		}
		return v.BackupSchedule
	}).(pulumi.StringPtrOutput)
}

// A list of CIDR blocks to allow incoming connections from.
func (o DatabasePgPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatabasePg) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// PostgreSQL configuration settings in JSON format (`exo dbaas type show pg --settings=pg` for reference).
func (o DatabasePgPtrOutput) PgSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabasePg) *string {
		if v == nil {
			return nil
		}
		return v.PgSettings
	}).(pulumi.StringPtrOutput)
}

// PgBouncer configuration settings in JSON format (`exo dbaas type show pg --settings=pgbouncer` for reference).
func (o DatabasePgPtrOutput) PgbouncerSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabasePg) *string {
		if v == nil {
			return nil
		}
		return v.PgbouncerSettings
	}).(pulumi.StringPtrOutput)
}

// pglookout configuration settings in JSON format (`exo dbaas type show pg --settings=pglookout` for reference).
func (o DatabasePgPtrOutput) PglookoutSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabasePg) *string {
		if v == nil {
			return nil
		}
		return v.PglookoutSettings
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL major version (`exo dbaas type show pg` for reference; may only be set at creation time).
func (o DatabasePgPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabasePg) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type DatabaseTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// DatabaseTimeoutsInput is an input type that accepts DatabaseTimeoutsArgs and DatabaseTimeoutsOutput values.
// You can construct a concrete instance of `DatabaseTimeoutsInput` via:
//
//	DatabaseTimeoutsArgs{...}
type DatabaseTimeoutsInput interface {
	pulumi.Input

	ToDatabaseTimeoutsOutput() DatabaseTimeoutsOutput
	ToDatabaseTimeoutsOutputWithContext(context.Context) DatabaseTimeoutsOutput
}

type DatabaseTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (DatabaseTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseTimeouts)(nil)).Elem()
}

func (i DatabaseTimeoutsArgs) ToDatabaseTimeoutsOutput() DatabaseTimeoutsOutput {
	return i.ToDatabaseTimeoutsOutputWithContext(context.Background())
}

func (i DatabaseTimeoutsArgs) ToDatabaseTimeoutsOutputWithContext(ctx context.Context) DatabaseTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseTimeoutsOutput)
}

func (i DatabaseTimeoutsArgs) ToDatabaseTimeoutsPtrOutput() DatabaseTimeoutsPtrOutput {
	return i.ToDatabaseTimeoutsPtrOutputWithContext(context.Background())
}

func (i DatabaseTimeoutsArgs) ToDatabaseTimeoutsPtrOutputWithContext(ctx context.Context) DatabaseTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseTimeoutsOutput).ToDatabaseTimeoutsPtrOutputWithContext(ctx)
}

// DatabaseTimeoutsPtrInput is an input type that accepts DatabaseTimeoutsArgs, DatabaseTimeoutsPtr and DatabaseTimeoutsPtrOutput values.
// You can construct a concrete instance of `DatabaseTimeoutsPtrInput` via:
//
//	        DatabaseTimeoutsArgs{...}
//
//	or:
//
//	        nil
type DatabaseTimeoutsPtrInput interface {
	pulumi.Input

	ToDatabaseTimeoutsPtrOutput() DatabaseTimeoutsPtrOutput
	ToDatabaseTimeoutsPtrOutputWithContext(context.Context) DatabaseTimeoutsPtrOutput
}

type databaseTimeoutsPtrType DatabaseTimeoutsArgs

func DatabaseTimeoutsPtr(v *DatabaseTimeoutsArgs) DatabaseTimeoutsPtrInput {
	return (*databaseTimeoutsPtrType)(v)
}

func (*databaseTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseTimeouts)(nil)).Elem()
}

func (i *databaseTimeoutsPtrType) ToDatabaseTimeoutsPtrOutput() DatabaseTimeoutsPtrOutput {
	return i.ToDatabaseTimeoutsPtrOutputWithContext(context.Background())
}

func (i *databaseTimeoutsPtrType) ToDatabaseTimeoutsPtrOutputWithContext(ctx context.Context) DatabaseTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseTimeoutsPtrOutput)
}

type DatabaseTimeoutsOutput struct{ *pulumi.OutputState }

func (DatabaseTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseTimeouts)(nil)).Elem()
}

func (o DatabaseTimeoutsOutput) ToDatabaseTimeoutsOutput() DatabaseTimeoutsOutput {
	return o
}

func (o DatabaseTimeoutsOutput) ToDatabaseTimeoutsOutputWithContext(ctx context.Context) DatabaseTimeoutsOutput {
	return o
}

func (o DatabaseTimeoutsOutput) ToDatabaseTimeoutsPtrOutput() DatabaseTimeoutsPtrOutput {
	return o.ToDatabaseTimeoutsPtrOutputWithContext(context.Background())
}

func (o DatabaseTimeoutsOutput) ToDatabaseTimeoutsPtrOutputWithContext(ctx context.Context) DatabaseTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseTimeouts) *DatabaseTimeouts {
		return &v
	}).(DatabaseTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DatabaseTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o DatabaseTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o DatabaseTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DatabaseTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type DatabaseTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (DatabaseTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseTimeouts)(nil)).Elem()
}

func (o DatabaseTimeoutsPtrOutput) ToDatabaseTimeoutsPtrOutput() DatabaseTimeoutsPtrOutput {
	return o
}

func (o DatabaseTimeoutsPtrOutput) ToDatabaseTimeoutsPtrOutputWithContext(ctx context.Context) DatabaseTimeoutsPtrOutput {
	return o
}

func (o DatabaseTimeoutsPtrOutput) Elem() DatabaseTimeoutsOutput {
	return o.ApplyT(func(v *DatabaseTimeouts) DatabaseTimeouts {
		if v != nil {
			return *v
		}
		var ret DatabaseTimeouts
		return ret
	}).(DatabaseTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DatabaseTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o DatabaseTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o DatabaseTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DatabaseTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type DatabaseValkey struct {
	// A list of CIDR blocks to allow incoming connections from.
	IpFilters []string `pulumi:"ipFilters"`
	// Valkey configuration settings in JSON format (`exo dbaas type show valkey --settings=valkey` for reference).
	ValkeySettings *string `pulumi:"valkeySettings"`
}

// DatabaseValkeyInput is an input type that accepts DatabaseValkeyArgs and DatabaseValkeyOutput values.
// You can construct a concrete instance of `DatabaseValkeyInput` via:
//
//	DatabaseValkeyArgs{...}
type DatabaseValkeyInput interface {
	pulumi.Input

	ToDatabaseValkeyOutput() DatabaseValkeyOutput
	ToDatabaseValkeyOutputWithContext(context.Context) DatabaseValkeyOutput
}

type DatabaseValkeyArgs struct {
	// A list of CIDR blocks to allow incoming connections from.
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Valkey configuration settings in JSON format (`exo dbaas type show valkey --settings=valkey` for reference).
	ValkeySettings pulumi.StringPtrInput `pulumi:"valkeySettings"`
}

func (DatabaseValkeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseValkey)(nil)).Elem()
}

func (i DatabaseValkeyArgs) ToDatabaseValkeyOutput() DatabaseValkeyOutput {
	return i.ToDatabaseValkeyOutputWithContext(context.Background())
}

func (i DatabaseValkeyArgs) ToDatabaseValkeyOutputWithContext(ctx context.Context) DatabaseValkeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseValkeyOutput)
}

func (i DatabaseValkeyArgs) ToDatabaseValkeyPtrOutput() DatabaseValkeyPtrOutput {
	return i.ToDatabaseValkeyPtrOutputWithContext(context.Background())
}

func (i DatabaseValkeyArgs) ToDatabaseValkeyPtrOutputWithContext(ctx context.Context) DatabaseValkeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseValkeyOutput).ToDatabaseValkeyPtrOutputWithContext(ctx)
}

// DatabaseValkeyPtrInput is an input type that accepts DatabaseValkeyArgs, DatabaseValkeyPtr and DatabaseValkeyPtrOutput values.
// You can construct a concrete instance of `DatabaseValkeyPtrInput` via:
//
//	        DatabaseValkeyArgs{...}
//
//	or:
//
//	        nil
type DatabaseValkeyPtrInput interface {
	pulumi.Input

	ToDatabaseValkeyPtrOutput() DatabaseValkeyPtrOutput
	ToDatabaseValkeyPtrOutputWithContext(context.Context) DatabaseValkeyPtrOutput
}

type databaseValkeyPtrType DatabaseValkeyArgs

func DatabaseValkeyPtr(v *DatabaseValkeyArgs) DatabaseValkeyPtrInput {
	return (*databaseValkeyPtrType)(v)
}

func (*databaseValkeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseValkey)(nil)).Elem()
}

func (i *databaseValkeyPtrType) ToDatabaseValkeyPtrOutput() DatabaseValkeyPtrOutput {
	return i.ToDatabaseValkeyPtrOutputWithContext(context.Background())
}

func (i *databaseValkeyPtrType) ToDatabaseValkeyPtrOutputWithContext(ctx context.Context) DatabaseValkeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseValkeyPtrOutput)
}

type DatabaseValkeyOutput struct{ *pulumi.OutputState }

func (DatabaseValkeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseValkey)(nil)).Elem()
}

func (o DatabaseValkeyOutput) ToDatabaseValkeyOutput() DatabaseValkeyOutput {
	return o
}

func (o DatabaseValkeyOutput) ToDatabaseValkeyOutputWithContext(ctx context.Context) DatabaseValkeyOutput {
	return o
}

func (o DatabaseValkeyOutput) ToDatabaseValkeyPtrOutput() DatabaseValkeyPtrOutput {
	return o.ToDatabaseValkeyPtrOutputWithContext(context.Background())
}

func (o DatabaseValkeyOutput) ToDatabaseValkeyPtrOutputWithContext(ctx context.Context) DatabaseValkeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseValkey) *DatabaseValkey {
		return &v
	}).(DatabaseValkeyPtrOutput)
}

// A list of CIDR blocks to allow incoming connections from.
func (o DatabaseValkeyOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseValkey) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Valkey configuration settings in JSON format (`exo dbaas type show valkey --settings=valkey` for reference).
func (o DatabaseValkeyOutput) ValkeySettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseValkey) *string { return v.ValkeySettings }).(pulumi.StringPtrOutput)
}

type DatabaseValkeyPtrOutput struct{ *pulumi.OutputState }

func (DatabaseValkeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseValkey)(nil)).Elem()
}

func (o DatabaseValkeyPtrOutput) ToDatabaseValkeyPtrOutput() DatabaseValkeyPtrOutput {
	return o
}

func (o DatabaseValkeyPtrOutput) ToDatabaseValkeyPtrOutputWithContext(ctx context.Context) DatabaseValkeyPtrOutput {
	return o
}

func (o DatabaseValkeyPtrOutput) Elem() DatabaseValkeyOutput {
	return o.ApplyT(func(v *DatabaseValkey) DatabaseValkey {
		if v != nil {
			return *v
		}
		var ret DatabaseValkey
		return ret
	}).(DatabaseValkeyOutput)
}

// A list of CIDR blocks to allow incoming connections from.
func (o DatabaseValkeyPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatabaseValkey) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// Valkey configuration settings in JSON format (`exo dbaas type show valkey --settings=valkey` for reference).
func (o DatabaseValkeyPtrOutput) ValkeySettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseValkey) *string {
		if v == nil {
			return nil
		}
		return v.ValkeySettings
	}).(pulumi.StringPtrOutput)
}

type DbaasGrafana struct {
	// Grafana configuration settings in JSON format (`exo dbaas type show grafana --settings=grafana` for reference).
	GrafanaSettings *string `pulumi:"grafanaSettings"`
	// A list of CIDR blocks to allow incoming connections from.
	IpFilters []string `pulumi:"ipFilters"`
}

// DbaasGrafanaInput is an input type that accepts DbaasGrafanaArgs and DbaasGrafanaOutput values.
// You can construct a concrete instance of `DbaasGrafanaInput` via:
//
//	DbaasGrafanaArgs{...}
type DbaasGrafanaInput interface {
	pulumi.Input

	ToDbaasGrafanaOutput() DbaasGrafanaOutput
	ToDbaasGrafanaOutputWithContext(context.Context) DbaasGrafanaOutput
}

type DbaasGrafanaArgs struct {
	// Grafana configuration settings in JSON format (`exo dbaas type show grafana --settings=grafana` for reference).
	GrafanaSettings pulumi.StringPtrInput `pulumi:"grafanaSettings"`
	// A list of CIDR blocks to allow incoming connections from.
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
}

func (DbaasGrafanaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasGrafana)(nil)).Elem()
}

func (i DbaasGrafanaArgs) ToDbaasGrafanaOutput() DbaasGrafanaOutput {
	return i.ToDbaasGrafanaOutputWithContext(context.Background())
}

func (i DbaasGrafanaArgs) ToDbaasGrafanaOutputWithContext(ctx context.Context) DbaasGrafanaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasGrafanaOutput)
}

func (i DbaasGrafanaArgs) ToDbaasGrafanaPtrOutput() DbaasGrafanaPtrOutput {
	return i.ToDbaasGrafanaPtrOutputWithContext(context.Background())
}

func (i DbaasGrafanaArgs) ToDbaasGrafanaPtrOutputWithContext(ctx context.Context) DbaasGrafanaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasGrafanaOutput).ToDbaasGrafanaPtrOutputWithContext(ctx)
}

// DbaasGrafanaPtrInput is an input type that accepts DbaasGrafanaArgs, DbaasGrafanaPtr and DbaasGrafanaPtrOutput values.
// You can construct a concrete instance of `DbaasGrafanaPtrInput` via:
//
//	        DbaasGrafanaArgs{...}
//
//	or:
//
//	        nil
type DbaasGrafanaPtrInput interface {
	pulumi.Input

	ToDbaasGrafanaPtrOutput() DbaasGrafanaPtrOutput
	ToDbaasGrafanaPtrOutputWithContext(context.Context) DbaasGrafanaPtrOutput
}

type dbaasGrafanaPtrType DbaasGrafanaArgs

func DbaasGrafanaPtr(v *DbaasGrafanaArgs) DbaasGrafanaPtrInput {
	return (*dbaasGrafanaPtrType)(v)
}

func (*dbaasGrafanaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasGrafana)(nil)).Elem()
}

func (i *dbaasGrafanaPtrType) ToDbaasGrafanaPtrOutput() DbaasGrafanaPtrOutput {
	return i.ToDbaasGrafanaPtrOutputWithContext(context.Background())
}

func (i *dbaasGrafanaPtrType) ToDbaasGrafanaPtrOutputWithContext(ctx context.Context) DbaasGrafanaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasGrafanaPtrOutput)
}

type DbaasGrafanaOutput struct{ *pulumi.OutputState }

func (DbaasGrafanaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasGrafana)(nil)).Elem()
}

func (o DbaasGrafanaOutput) ToDbaasGrafanaOutput() DbaasGrafanaOutput {
	return o
}

func (o DbaasGrafanaOutput) ToDbaasGrafanaOutputWithContext(ctx context.Context) DbaasGrafanaOutput {
	return o
}

func (o DbaasGrafanaOutput) ToDbaasGrafanaPtrOutput() DbaasGrafanaPtrOutput {
	return o.ToDbaasGrafanaPtrOutputWithContext(context.Background())
}

func (o DbaasGrafanaOutput) ToDbaasGrafanaPtrOutputWithContext(ctx context.Context) DbaasGrafanaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbaasGrafana) *DbaasGrafana {
		return &v
	}).(DbaasGrafanaPtrOutput)
}

// Grafana configuration settings in JSON format (`exo dbaas type show grafana --settings=grafana` for reference).
func (o DbaasGrafanaOutput) GrafanaSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasGrafana) *string { return v.GrafanaSettings }).(pulumi.StringPtrOutput)
}

// A list of CIDR blocks to allow incoming connections from.
func (o DbaasGrafanaOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DbaasGrafana) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

type DbaasGrafanaPtrOutput struct{ *pulumi.OutputState }

func (DbaasGrafanaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasGrafana)(nil)).Elem()
}

func (o DbaasGrafanaPtrOutput) ToDbaasGrafanaPtrOutput() DbaasGrafanaPtrOutput {
	return o
}

func (o DbaasGrafanaPtrOutput) ToDbaasGrafanaPtrOutputWithContext(ctx context.Context) DbaasGrafanaPtrOutput {
	return o
}

func (o DbaasGrafanaPtrOutput) Elem() DbaasGrafanaOutput {
	return o.ApplyT(func(v *DbaasGrafana) DbaasGrafana {
		if v != nil {
			return *v
		}
		var ret DbaasGrafana
		return ret
	}).(DbaasGrafanaOutput)
}

// Grafana configuration settings in JSON format (`exo dbaas type show grafana --settings=grafana` for reference).
func (o DbaasGrafanaPtrOutput) GrafanaSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasGrafana) *string {
		if v == nil {
			return nil
		}
		return v.GrafanaSettings
	}).(pulumi.StringPtrOutput)
}

// A list of CIDR blocks to allow incoming connections from.
func (o DbaasGrafanaPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DbaasGrafana) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

type DbaasKafka struct {
	// Enable certificate-based authentication method.
	EnableCertAuth *bool `pulumi:"enableCertAuth"`
	// Enable Kafka Connect.
	EnableKafkaConnect *bool `pulumi:"enableKafkaConnect"`
	// Enable Kafka REST.
	EnableKafkaRest *bool `pulumi:"enableKafkaRest"`
	// Enable SASL-based authentication method.
	EnableSaslAuth *bool `pulumi:"enableSaslAuth"`
	// Enable Schema Registry.
	EnableSchemaRegistry *bool `pulumi:"enableSchemaRegistry"`
	// A list of CIDR blocks to allow incoming connections from.
	IpFilters []string `pulumi:"ipFilters"`
	// Kafka Connect configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka-connect` for reference).
	KafkaConnectSettings *string `pulumi:"kafkaConnectSettings"`
	// Kafka REST configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka-rest` for reference).
	KafkaRestSettings *string `pulumi:"kafkaRestSettings"`
	// Kafka configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka` for reference).
	KafkaSettings *string `pulumi:"kafkaSettings"`
	// Schema Registry configuration settings in JSON format (`exo dbaas type show kafka --settings=schema-registry` for reference)
	SchemaRegistrySettings *string `pulumi:"schemaRegistrySettings"`
	// Kafka major version (`exo dbaas type show kafka` for reference; may only be set at creation time).
	Version *string `pulumi:"version"`
}

// DbaasKafkaInput is an input type that accepts DbaasKafkaArgs and DbaasKafkaOutput values.
// You can construct a concrete instance of `DbaasKafkaInput` via:
//
//	DbaasKafkaArgs{...}
type DbaasKafkaInput interface {
	pulumi.Input

	ToDbaasKafkaOutput() DbaasKafkaOutput
	ToDbaasKafkaOutputWithContext(context.Context) DbaasKafkaOutput
}

type DbaasKafkaArgs struct {
	// Enable certificate-based authentication method.
	EnableCertAuth pulumi.BoolPtrInput `pulumi:"enableCertAuth"`
	// Enable Kafka Connect.
	EnableKafkaConnect pulumi.BoolPtrInput `pulumi:"enableKafkaConnect"`
	// Enable Kafka REST.
	EnableKafkaRest pulumi.BoolPtrInput `pulumi:"enableKafkaRest"`
	// Enable SASL-based authentication method.
	EnableSaslAuth pulumi.BoolPtrInput `pulumi:"enableSaslAuth"`
	// Enable Schema Registry.
	EnableSchemaRegistry pulumi.BoolPtrInput `pulumi:"enableSchemaRegistry"`
	// A list of CIDR blocks to allow incoming connections from.
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Kafka Connect configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka-connect` for reference).
	KafkaConnectSettings pulumi.StringPtrInput `pulumi:"kafkaConnectSettings"`
	// Kafka REST configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka-rest` for reference).
	KafkaRestSettings pulumi.StringPtrInput `pulumi:"kafkaRestSettings"`
	// Kafka configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka` for reference).
	KafkaSettings pulumi.StringPtrInput `pulumi:"kafkaSettings"`
	// Schema Registry configuration settings in JSON format (`exo dbaas type show kafka --settings=schema-registry` for reference)
	SchemaRegistrySettings pulumi.StringPtrInput `pulumi:"schemaRegistrySettings"`
	// Kafka major version (`exo dbaas type show kafka` for reference; may only be set at creation time).
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (DbaasKafkaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasKafka)(nil)).Elem()
}

func (i DbaasKafkaArgs) ToDbaasKafkaOutput() DbaasKafkaOutput {
	return i.ToDbaasKafkaOutputWithContext(context.Background())
}

func (i DbaasKafkaArgs) ToDbaasKafkaOutputWithContext(ctx context.Context) DbaasKafkaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasKafkaOutput)
}

func (i DbaasKafkaArgs) ToDbaasKafkaPtrOutput() DbaasKafkaPtrOutput {
	return i.ToDbaasKafkaPtrOutputWithContext(context.Background())
}

func (i DbaasKafkaArgs) ToDbaasKafkaPtrOutputWithContext(ctx context.Context) DbaasKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasKafkaOutput).ToDbaasKafkaPtrOutputWithContext(ctx)
}

// DbaasKafkaPtrInput is an input type that accepts DbaasKafkaArgs, DbaasKafkaPtr and DbaasKafkaPtrOutput values.
// You can construct a concrete instance of `DbaasKafkaPtrInput` via:
//
//	        DbaasKafkaArgs{...}
//
//	or:
//
//	        nil
type DbaasKafkaPtrInput interface {
	pulumi.Input

	ToDbaasKafkaPtrOutput() DbaasKafkaPtrOutput
	ToDbaasKafkaPtrOutputWithContext(context.Context) DbaasKafkaPtrOutput
}

type dbaasKafkaPtrType DbaasKafkaArgs

func DbaasKafkaPtr(v *DbaasKafkaArgs) DbaasKafkaPtrInput {
	return (*dbaasKafkaPtrType)(v)
}

func (*dbaasKafkaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasKafka)(nil)).Elem()
}

func (i *dbaasKafkaPtrType) ToDbaasKafkaPtrOutput() DbaasKafkaPtrOutput {
	return i.ToDbaasKafkaPtrOutputWithContext(context.Background())
}

func (i *dbaasKafkaPtrType) ToDbaasKafkaPtrOutputWithContext(ctx context.Context) DbaasKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasKafkaPtrOutput)
}

type DbaasKafkaOutput struct{ *pulumi.OutputState }

func (DbaasKafkaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasKafka)(nil)).Elem()
}

func (o DbaasKafkaOutput) ToDbaasKafkaOutput() DbaasKafkaOutput {
	return o
}

func (o DbaasKafkaOutput) ToDbaasKafkaOutputWithContext(ctx context.Context) DbaasKafkaOutput {
	return o
}

func (o DbaasKafkaOutput) ToDbaasKafkaPtrOutput() DbaasKafkaPtrOutput {
	return o.ToDbaasKafkaPtrOutputWithContext(context.Background())
}

func (o DbaasKafkaOutput) ToDbaasKafkaPtrOutputWithContext(ctx context.Context) DbaasKafkaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbaasKafka) *DbaasKafka {
		return &v
	}).(DbaasKafkaPtrOutput)
}

// Enable certificate-based authentication method.
func (o DbaasKafkaOutput) EnableCertAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DbaasKafka) *bool { return v.EnableCertAuth }).(pulumi.BoolPtrOutput)
}

// Enable Kafka Connect.
func (o DbaasKafkaOutput) EnableKafkaConnect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DbaasKafka) *bool { return v.EnableKafkaConnect }).(pulumi.BoolPtrOutput)
}

// Enable Kafka REST.
func (o DbaasKafkaOutput) EnableKafkaRest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DbaasKafka) *bool { return v.EnableKafkaRest }).(pulumi.BoolPtrOutput)
}

// Enable SASL-based authentication method.
func (o DbaasKafkaOutput) EnableSaslAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DbaasKafka) *bool { return v.EnableSaslAuth }).(pulumi.BoolPtrOutput)
}

// Enable Schema Registry.
func (o DbaasKafkaOutput) EnableSchemaRegistry() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DbaasKafka) *bool { return v.EnableSchemaRegistry }).(pulumi.BoolPtrOutput)
}

// A list of CIDR blocks to allow incoming connections from.
func (o DbaasKafkaOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DbaasKafka) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Kafka Connect configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka-connect` for reference).
func (o DbaasKafkaOutput) KafkaConnectSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasKafka) *string { return v.KafkaConnectSettings }).(pulumi.StringPtrOutput)
}

// Kafka REST configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka-rest` for reference).
func (o DbaasKafkaOutput) KafkaRestSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasKafka) *string { return v.KafkaRestSettings }).(pulumi.StringPtrOutput)
}

// Kafka configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka` for reference).
func (o DbaasKafkaOutput) KafkaSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasKafka) *string { return v.KafkaSettings }).(pulumi.StringPtrOutput)
}

// Schema Registry configuration settings in JSON format (`exo dbaas type show kafka --settings=schema-registry` for reference)
func (o DbaasKafkaOutput) SchemaRegistrySettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasKafka) *string { return v.SchemaRegistrySettings }).(pulumi.StringPtrOutput)
}

// Kafka major version (`exo dbaas type show kafka` for reference; may only be set at creation time).
func (o DbaasKafkaOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasKafka) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type DbaasKafkaPtrOutput struct{ *pulumi.OutputState }

func (DbaasKafkaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasKafka)(nil)).Elem()
}

func (o DbaasKafkaPtrOutput) ToDbaasKafkaPtrOutput() DbaasKafkaPtrOutput {
	return o
}

func (o DbaasKafkaPtrOutput) ToDbaasKafkaPtrOutputWithContext(ctx context.Context) DbaasKafkaPtrOutput {
	return o
}

func (o DbaasKafkaPtrOutput) Elem() DbaasKafkaOutput {
	return o.ApplyT(func(v *DbaasKafka) DbaasKafka {
		if v != nil {
			return *v
		}
		var ret DbaasKafka
		return ret
	}).(DbaasKafkaOutput)
}

// Enable certificate-based authentication method.
func (o DbaasKafkaPtrOutput) EnableCertAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DbaasKafka) *bool {
		if v == nil {
			return nil
		}
		return v.EnableCertAuth
	}).(pulumi.BoolPtrOutput)
}

// Enable Kafka Connect.
func (o DbaasKafkaPtrOutput) EnableKafkaConnect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DbaasKafka) *bool {
		if v == nil {
			return nil
		}
		return v.EnableKafkaConnect
	}).(pulumi.BoolPtrOutput)
}

// Enable Kafka REST.
func (o DbaasKafkaPtrOutput) EnableKafkaRest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DbaasKafka) *bool {
		if v == nil {
			return nil
		}
		return v.EnableKafkaRest
	}).(pulumi.BoolPtrOutput)
}

// Enable SASL-based authentication method.
func (o DbaasKafkaPtrOutput) EnableSaslAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DbaasKafka) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSaslAuth
	}).(pulumi.BoolPtrOutput)
}

// Enable Schema Registry.
func (o DbaasKafkaPtrOutput) EnableSchemaRegistry() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DbaasKafka) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSchemaRegistry
	}).(pulumi.BoolPtrOutput)
}

// A list of CIDR blocks to allow incoming connections from.
func (o DbaasKafkaPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DbaasKafka) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// Kafka Connect configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka-connect` for reference).
func (o DbaasKafkaPtrOutput) KafkaConnectSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasKafka) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnectSettings
	}).(pulumi.StringPtrOutput)
}

// Kafka REST configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka-rest` for reference).
func (o DbaasKafkaPtrOutput) KafkaRestSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasKafka) *string {
		if v == nil {
			return nil
		}
		return v.KafkaRestSettings
	}).(pulumi.StringPtrOutput)
}

// Kafka configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka` for reference).
func (o DbaasKafkaPtrOutput) KafkaSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasKafka) *string {
		if v == nil {
			return nil
		}
		return v.KafkaSettings
	}).(pulumi.StringPtrOutput)
}

// Schema Registry configuration settings in JSON format (`exo dbaas type show kafka --settings=schema-registry` for reference)
func (o DbaasKafkaPtrOutput) SchemaRegistrySettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasKafka) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRegistrySettings
	}).(pulumi.StringPtrOutput)
}

// Kafka major version (`exo dbaas type show kafka` for reference; may only be set at creation time).
func (o DbaasKafkaPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasKafka) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type DbaasKafkaUserTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// DbaasKafkaUserTimeoutsInput is an input type that accepts DbaasKafkaUserTimeoutsArgs and DbaasKafkaUserTimeoutsOutput values.
// You can construct a concrete instance of `DbaasKafkaUserTimeoutsInput` via:
//
//	DbaasKafkaUserTimeoutsArgs{...}
type DbaasKafkaUserTimeoutsInput interface {
	pulumi.Input

	ToDbaasKafkaUserTimeoutsOutput() DbaasKafkaUserTimeoutsOutput
	ToDbaasKafkaUserTimeoutsOutputWithContext(context.Context) DbaasKafkaUserTimeoutsOutput
}

type DbaasKafkaUserTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (DbaasKafkaUserTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasKafkaUserTimeouts)(nil)).Elem()
}

func (i DbaasKafkaUserTimeoutsArgs) ToDbaasKafkaUserTimeoutsOutput() DbaasKafkaUserTimeoutsOutput {
	return i.ToDbaasKafkaUserTimeoutsOutputWithContext(context.Background())
}

func (i DbaasKafkaUserTimeoutsArgs) ToDbaasKafkaUserTimeoutsOutputWithContext(ctx context.Context) DbaasKafkaUserTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasKafkaUserTimeoutsOutput)
}

func (i DbaasKafkaUserTimeoutsArgs) ToDbaasKafkaUserTimeoutsPtrOutput() DbaasKafkaUserTimeoutsPtrOutput {
	return i.ToDbaasKafkaUserTimeoutsPtrOutputWithContext(context.Background())
}

func (i DbaasKafkaUserTimeoutsArgs) ToDbaasKafkaUserTimeoutsPtrOutputWithContext(ctx context.Context) DbaasKafkaUserTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasKafkaUserTimeoutsOutput).ToDbaasKafkaUserTimeoutsPtrOutputWithContext(ctx)
}

// DbaasKafkaUserTimeoutsPtrInput is an input type that accepts DbaasKafkaUserTimeoutsArgs, DbaasKafkaUserTimeoutsPtr and DbaasKafkaUserTimeoutsPtrOutput values.
// You can construct a concrete instance of `DbaasKafkaUserTimeoutsPtrInput` via:
//
//	        DbaasKafkaUserTimeoutsArgs{...}
//
//	or:
//
//	        nil
type DbaasKafkaUserTimeoutsPtrInput interface {
	pulumi.Input

	ToDbaasKafkaUserTimeoutsPtrOutput() DbaasKafkaUserTimeoutsPtrOutput
	ToDbaasKafkaUserTimeoutsPtrOutputWithContext(context.Context) DbaasKafkaUserTimeoutsPtrOutput
}

type dbaasKafkaUserTimeoutsPtrType DbaasKafkaUserTimeoutsArgs

func DbaasKafkaUserTimeoutsPtr(v *DbaasKafkaUserTimeoutsArgs) DbaasKafkaUserTimeoutsPtrInput {
	return (*dbaasKafkaUserTimeoutsPtrType)(v)
}

func (*dbaasKafkaUserTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasKafkaUserTimeouts)(nil)).Elem()
}

func (i *dbaasKafkaUserTimeoutsPtrType) ToDbaasKafkaUserTimeoutsPtrOutput() DbaasKafkaUserTimeoutsPtrOutput {
	return i.ToDbaasKafkaUserTimeoutsPtrOutputWithContext(context.Background())
}

func (i *dbaasKafkaUserTimeoutsPtrType) ToDbaasKafkaUserTimeoutsPtrOutputWithContext(ctx context.Context) DbaasKafkaUserTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasKafkaUserTimeoutsPtrOutput)
}

type DbaasKafkaUserTimeoutsOutput struct{ *pulumi.OutputState }

func (DbaasKafkaUserTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasKafkaUserTimeouts)(nil)).Elem()
}

func (o DbaasKafkaUserTimeoutsOutput) ToDbaasKafkaUserTimeoutsOutput() DbaasKafkaUserTimeoutsOutput {
	return o
}

func (o DbaasKafkaUserTimeoutsOutput) ToDbaasKafkaUserTimeoutsOutputWithContext(ctx context.Context) DbaasKafkaUserTimeoutsOutput {
	return o
}

func (o DbaasKafkaUserTimeoutsOutput) ToDbaasKafkaUserTimeoutsPtrOutput() DbaasKafkaUserTimeoutsPtrOutput {
	return o.ToDbaasKafkaUserTimeoutsPtrOutputWithContext(context.Background())
}

func (o DbaasKafkaUserTimeoutsOutput) ToDbaasKafkaUserTimeoutsPtrOutputWithContext(ctx context.Context) DbaasKafkaUserTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbaasKafkaUserTimeouts) *DbaasKafkaUserTimeouts {
		return &v
	}).(DbaasKafkaUserTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasKafkaUserTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasKafkaUserTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o DbaasKafkaUserTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasKafkaUserTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o DbaasKafkaUserTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasKafkaUserTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasKafkaUserTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasKafkaUserTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type DbaasKafkaUserTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (DbaasKafkaUserTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasKafkaUserTimeouts)(nil)).Elem()
}

func (o DbaasKafkaUserTimeoutsPtrOutput) ToDbaasKafkaUserTimeoutsPtrOutput() DbaasKafkaUserTimeoutsPtrOutput {
	return o
}

func (o DbaasKafkaUserTimeoutsPtrOutput) ToDbaasKafkaUserTimeoutsPtrOutputWithContext(ctx context.Context) DbaasKafkaUserTimeoutsPtrOutput {
	return o
}

func (o DbaasKafkaUserTimeoutsPtrOutput) Elem() DbaasKafkaUserTimeoutsOutput {
	return o.ApplyT(func(v *DbaasKafkaUserTimeouts) DbaasKafkaUserTimeouts {
		if v != nil {
			return *v
		}
		var ret DbaasKafkaUserTimeouts
		return ret
	}).(DbaasKafkaUserTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasKafkaUserTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasKafkaUserTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o DbaasKafkaUserTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasKafkaUserTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o DbaasKafkaUserTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasKafkaUserTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasKafkaUserTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasKafkaUserTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type DbaasMysql struct {
	// A custom administrator account password (may only be set at creation time).
	AdminPassword *string `pulumi:"adminPassword"`
	// A custom administrator account username (may only be set at creation time).
	AdminUsername *string `pulumi:"adminUsername"`
	// The automated backup schedule (`HH:MM`).
	BackupSchedule *string `pulumi:"backupSchedule"`
	// A list of CIDR blocks to allow incoming connections from.
	IpFilters []string `pulumi:"ipFilters"`
	// MySQL configuration settings in JSON format (`exo dbaas type show mysql --settings=mysql` for reference).
	MysqlSettings *string `pulumi:"mysqlSettings"`
	// MySQL major version (`exo dbaas type show mysql` for reference; may only be set at creation time).
	Version *string `pulumi:"version"`
}

// DbaasMysqlInput is an input type that accepts DbaasMysqlArgs and DbaasMysqlOutput values.
// You can construct a concrete instance of `DbaasMysqlInput` via:
//
//	DbaasMysqlArgs{...}
type DbaasMysqlInput interface {
	pulumi.Input

	ToDbaasMysqlOutput() DbaasMysqlOutput
	ToDbaasMysqlOutputWithContext(context.Context) DbaasMysqlOutput
}

type DbaasMysqlArgs struct {
	// A custom administrator account password (may only be set at creation time).
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// A custom administrator account username (may only be set at creation time).
	AdminUsername pulumi.StringPtrInput `pulumi:"adminUsername"`
	// The automated backup schedule (`HH:MM`).
	BackupSchedule pulumi.StringPtrInput `pulumi:"backupSchedule"`
	// A list of CIDR blocks to allow incoming connections from.
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// MySQL configuration settings in JSON format (`exo dbaas type show mysql --settings=mysql` for reference).
	MysqlSettings pulumi.StringPtrInput `pulumi:"mysqlSettings"`
	// MySQL major version (`exo dbaas type show mysql` for reference; may only be set at creation time).
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (DbaasMysqlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasMysql)(nil)).Elem()
}

func (i DbaasMysqlArgs) ToDbaasMysqlOutput() DbaasMysqlOutput {
	return i.ToDbaasMysqlOutputWithContext(context.Background())
}

func (i DbaasMysqlArgs) ToDbaasMysqlOutputWithContext(ctx context.Context) DbaasMysqlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasMysqlOutput)
}

func (i DbaasMysqlArgs) ToDbaasMysqlPtrOutput() DbaasMysqlPtrOutput {
	return i.ToDbaasMysqlPtrOutputWithContext(context.Background())
}

func (i DbaasMysqlArgs) ToDbaasMysqlPtrOutputWithContext(ctx context.Context) DbaasMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasMysqlOutput).ToDbaasMysqlPtrOutputWithContext(ctx)
}

// DbaasMysqlPtrInput is an input type that accepts DbaasMysqlArgs, DbaasMysqlPtr and DbaasMysqlPtrOutput values.
// You can construct a concrete instance of `DbaasMysqlPtrInput` via:
//
//	        DbaasMysqlArgs{...}
//
//	or:
//
//	        nil
type DbaasMysqlPtrInput interface {
	pulumi.Input

	ToDbaasMysqlPtrOutput() DbaasMysqlPtrOutput
	ToDbaasMysqlPtrOutputWithContext(context.Context) DbaasMysqlPtrOutput
}

type dbaasMysqlPtrType DbaasMysqlArgs

func DbaasMysqlPtr(v *DbaasMysqlArgs) DbaasMysqlPtrInput {
	return (*dbaasMysqlPtrType)(v)
}

func (*dbaasMysqlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasMysql)(nil)).Elem()
}

func (i *dbaasMysqlPtrType) ToDbaasMysqlPtrOutput() DbaasMysqlPtrOutput {
	return i.ToDbaasMysqlPtrOutputWithContext(context.Background())
}

func (i *dbaasMysqlPtrType) ToDbaasMysqlPtrOutputWithContext(ctx context.Context) DbaasMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasMysqlPtrOutput)
}

type DbaasMysqlOutput struct{ *pulumi.OutputState }

func (DbaasMysqlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasMysql)(nil)).Elem()
}

func (o DbaasMysqlOutput) ToDbaasMysqlOutput() DbaasMysqlOutput {
	return o
}

func (o DbaasMysqlOutput) ToDbaasMysqlOutputWithContext(ctx context.Context) DbaasMysqlOutput {
	return o
}

func (o DbaasMysqlOutput) ToDbaasMysqlPtrOutput() DbaasMysqlPtrOutput {
	return o.ToDbaasMysqlPtrOutputWithContext(context.Background())
}

func (o DbaasMysqlOutput) ToDbaasMysqlPtrOutputWithContext(ctx context.Context) DbaasMysqlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbaasMysql) *DbaasMysql {
		return &v
	}).(DbaasMysqlPtrOutput)
}

// A custom administrator account password (may only be set at creation time).
func (o DbaasMysqlOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasMysql) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// A custom administrator account username (may only be set at creation time).
func (o DbaasMysqlOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasMysql) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

// The automated backup schedule (`HH:MM`).
func (o DbaasMysqlOutput) BackupSchedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasMysql) *string { return v.BackupSchedule }).(pulumi.StringPtrOutput)
}

// A list of CIDR blocks to allow incoming connections from.
func (o DbaasMysqlOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DbaasMysql) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// MySQL configuration settings in JSON format (`exo dbaas type show mysql --settings=mysql` for reference).
func (o DbaasMysqlOutput) MysqlSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasMysql) *string { return v.MysqlSettings }).(pulumi.StringPtrOutput)
}

// MySQL major version (`exo dbaas type show mysql` for reference; may only be set at creation time).
func (o DbaasMysqlOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasMysql) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type DbaasMysqlPtrOutput struct{ *pulumi.OutputState }

func (DbaasMysqlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasMysql)(nil)).Elem()
}

func (o DbaasMysqlPtrOutput) ToDbaasMysqlPtrOutput() DbaasMysqlPtrOutput {
	return o
}

func (o DbaasMysqlPtrOutput) ToDbaasMysqlPtrOutputWithContext(ctx context.Context) DbaasMysqlPtrOutput {
	return o
}

func (o DbaasMysqlPtrOutput) Elem() DbaasMysqlOutput {
	return o.ApplyT(func(v *DbaasMysql) DbaasMysql {
		if v != nil {
			return *v
		}
		var ret DbaasMysql
		return ret
	}).(DbaasMysqlOutput)
}

// A custom administrator account password (may only be set at creation time).
func (o DbaasMysqlPtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasMysql) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// A custom administrator account username (may only be set at creation time).
func (o DbaasMysqlPtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasMysql) *string {
		if v == nil {
			return nil
		}
		return v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// The automated backup schedule (`HH:MM`).
func (o DbaasMysqlPtrOutput) BackupSchedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasMysql) *string {
		if v == nil {
			return nil
		}
		return v.BackupSchedule
	}).(pulumi.StringPtrOutput)
}

// A list of CIDR blocks to allow incoming connections from.
func (o DbaasMysqlPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DbaasMysql) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// MySQL configuration settings in JSON format (`exo dbaas type show mysql --settings=mysql` for reference).
func (o DbaasMysqlPtrOutput) MysqlSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasMysql) *string {
		if v == nil {
			return nil
		}
		return v.MysqlSettings
	}).(pulumi.StringPtrOutput)
}

// MySQL major version (`exo dbaas type show mysql` for reference; may only be set at creation time).
func (o DbaasMysqlPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasMysql) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type DbaasMysqlDatabaseTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// DbaasMysqlDatabaseTimeoutsInput is an input type that accepts DbaasMysqlDatabaseTimeoutsArgs and DbaasMysqlDatabaseTimeoutsOutput values.
// You can construct a concrete instance of `DbaasMysqlDatabaseTimeoutsInput` via:
//
//	DbaasMysqlDatabaseTimeoutsArgs{...}
type DbaasMysqlDatabaseTimeoutsInput interface {
	pulumi.Input

	ToDbaasMysqlDatabaseTimeoutsOutput() DbaasMysqlDatabaseTimeoutsOutput
	ToDbaasMysqlDatabaseTimeoutsOutputWithContext(context.Context) DbaasMysqlDatabaseTimeoutsOutput
}

type DbaasMysqlDatabaseTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (DbaasMysqlDatabaseTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasMysqlDatabaseTimeouts)(nil)).Elem()
}

func (i DbaasMysqlDatabaseTimeoutsArgs) ToDbaasMysqlDatabaseTimeoutsOutput() DbaasMysqlDatabaseTimeoutsOutput {
	return i.ToDbaasMysqlDatabaseTimeoutsOutputWithContext(context.Background())
}

func (i DbaasMysqlDatabaseTimeoutsArgs) ToDbaasMysqlDatabaseTimeoutsOutputWithContext(ctx context.Context) DbaasMysqlDatabaseTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasMysqlDatabaseTimeoutsOutput)
}

func (i DbaasMysqlDatabaseTimeoutsArgs) ToDbaasMysqlDatabaseTimeoutsPtrOutput() DbaasMysqlDatabaseTimeoutsPtrOutput {
	return i.ToDbaasMysqlDatabaseTimeoutsPtrOutputWithContext(context.Background())
}

func (i DbaasMysqlDatabaseTimeoutsArgs) ToDbaasMysqlDatabaseTimeoutsPtrOutputWithContext(ctx context.Context) DbaasMysqlDatabaseTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasMysqlDatabaseTimeoutsOutput).ToDbaasMysqlDatabaseTimeoutsPtrOutputWithContext(ctx)
}

// DbaasMysqlDatabaseTimeoutsPtrInput is an input type that accepts DbaasMysqlDatabaseTimeoutsArgs, DbaasMysqlDatabaseTimeoutsPtr and DbaasMysqlDatabaseTimeoutsPtrOutput values.
// You can construct a concrete instance of `DbaasMysqlDatabaseTimeoutsPtrInput` via:
//
//	        DbaasMysqlDatabaseTimeoutsArgs{...}
//
//	or:
//
//	        nil
type DbaasMysqlDatabaseTimeoutsPtrInput interface {
	pulumi.Input

	ToDbaasMysqlDatabaseTimeoutsPtrOutput() DbaasMysqlDatabaseTimeoutsPtrOutput
	ToDbaasMysqlDatabaseTimeoutsPtrOutputWithContext(context.Context) DbaasMysqlDatabaseTimeoutsPtrOutput
}

type dbaasMysqlDatabaseTimeoutsPtrType DbaasMysqlDatabaseTimeoutsArgs

func DbaasMysqlDatabaseTimeoutsPtr(v *DbaasMysqlDatabaseTimeoutsArgs) DbaasMysqlDatabaseTimeoutsPtrInput {
	return (*dbaasMysqlDatabaseTimeoutsPtrType)(v)
}

func (*dbaasMysqlDatabaseTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasMysqlDatabaseTimeouts)(nil)).Elem()
}

func (i *dbaasMysqlDatabaseTimeoutsPtrType) ToDbaasMysqlDatabaseTimeoutsPtrOutput() DbaasMysqlDatabaseTimeoutsPtrOutput {
	return i.ToDbaasMysqlDatabaseTimeoutsPtrOutputWithContext(context.Background())
}

func (i *dbaasMysqlDatabaseTimeoutsPtrType) ToDbaasMysqlDatabaseTimeoutsPtrOutputWithContext(ctx context.Context) DbaasMysqlDatabaseTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasMysqlDatabaseTimeoutsPtrOutput)
}

type DbaasMysqlDatabaseTimeoutsOutput struct{ *pulumi.OutputState }

func (DbaasMysqlDatabaseTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasMysqlDatabaseTimeouts)(nil)).Elem()
}

func (o DbaasMysqlDatabaseTimeoutsOutput) ToDbaasMysqlDatabaseTimeoutsOutput() DbaasMysqlDatabaseTimeoutsOutput {
	return o
}

func (o DbaasMysqlDatabaseTimeoutsOutput) ToDbaasMysqlDatabaseTimeoutsOutputWithContext(ctx context.Context) DbaasMysqlDatabaseTimeoutsOutput {
	return o
}

func (o DbaasMysqlDatabaseTimeoutsOutput) ToDbaasMysqlDatabaseTimeoutsPtrOutput() DbaasMysqlDatabaseTimeoutsPtrOutput {
	return o.ToDbaasMysqlDatabaseTimeoutsPtrOutputWithContext(context.Background())
}

func (o DbaasMysqlDatabaseTimeoutsOutput) ToDbaasMysqlDatabaseTimeoutsPtrOutputWithContext(ctx context.Context) DbaasMysqlDatabaseTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbaasMysqlDatabaseTimeouts) *DbaasMysqlDatabaseTimeouts {
		return &v
	}).(DbaasMysqlDatabaseTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasMysqlDatabaseTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasMysqlDatabaseTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o DbaasMysqlDatabaseTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasMysqlDatabaseTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o DbaasMysqlDatabaseTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasMysqlDatabaseTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasMysqlDatabaseTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasMysqlDatabaseTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type DbaasMysqlDatabaseTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (DbaasMysqlDatabaseTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasMysqlDatabaseTimeouts)(nil)).Elem()
}

func (o DbaasMysqlDatabaseTimeoutsPtrOutput) ToDbaasMysqlDatabaseTimeoutsPtrOutput() DbaasMysqlDatabaseTimeoutsPtrOutput {
	return o
}

func (o DbaasMysqlDatabaseTimeoutsPtrOutput) ToDbaasMysqlDatabaseTimeoutsPtrOutputWithContext(ctx context.Context) DbaasMysqlDatabaseTimeoutsPtrOutput {
	return o
}

func (o DbaasMysqlDatabaseTimeoutsPtrOutput) Elem() DbaasMysqlDatabaseTimeoutsOutput {
	return o.ApplyT(func(v *DbaasMysqlDatabaseTimeouts) DbaasMysqlDatabaseTimeouts {
		if v != nil {
			return *v
		}
		var ret DbaasMysqlDatabaseTimeouts
		return ret
	}).(DbaasMysqlDatabaseTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasMysqlDatabaseTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasMysqlDatabaseTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o DbaasMysqlDatabaseTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasMysqlDatabaseTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o DbaasMysqlDatabaseTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasMysqlDatabaseTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasMysqlDatabaseTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasMysqlDatabaseTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type DbaasMysqlUserTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// DbaasMysqlUserTimeoutsInput is an input type that accepts DbaasMysqlUserTimeoutsArgs and DbaasMysqlUserTimeoutsOutput values.
// You can construct a concrete instance of `DbaasMysqlUserTimeoutsInput` via:
//
//	DbaasMysqlUserTimeoutsArgs{...}
type DbaasMysqlUserTimeoutsInput interface {
	pulumi.Input

	ToDbaasMysqlUserTimeoutsOutput() DbaasMysqlUserTimeoutsOutput
	ToDbaasMysqlUserTimeoutsOutputWithContext(context.Context) DbaasMysqlUserTimeoutsOutput
}

type DbaasMysqlUserTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (DbaasMysqlUserTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasMysqlUserTimeouts)(nil)).Elem()
}

func (i DbaasMysqlUserTimeoutsArgs) ToDbaasMysqlUserTimeoutsOutput() DbaasMysqlUserTimeoutsOutput {
	return i.ToDbaasMysqlUserTimeoutsOutputWithContext(context.Background())
}

func (i DbaasMysqlUserTimeoutsArgs) ToDbaasMysqlUserTimeoutsOutputWithContext(ctx context.Context) DbaasMysqlUserTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasMysqlUserTimeoutsOutput)
}

func (i DbaasMysqlUserTimeoutsArgs) ToDbaasMysqlUserTimeoutsPtrOutput() DbaasMysqlUserTimeoutsPtrOutput {
	return i.ToDbaasMysqlUserTimeoutsPtrOutputWithContext(context.Background())
}

func (i DbaasMysqlUserTimeoutsArgs) ToDbaasMysqlUserTimeoutsPtrOutputWithContext(ctx context.Context) DbaasMysqlUserTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasMysqlUserTimeoutsOutput).ToDbaasMysqlUserTimeoutsPtrOutputWithContext(ctx)
}

// DbaasMysqlUserTimeoutsPtrInput is an input type that accepts DbaasMysqlUserTimeoutsArgs, DbaasMysqlUserTimeoutsPtr and DbaasMysqlUserTimeoutsPtrOutput values.
// You can construct a concrete instance of `DbaasMysqlUserTimeoutsPtrInput` via:
//
//	        DbaasMysqlUserTimeoutsArgs{...}
//
//	or:
//
//	        nil
type DbaasMysqlUserTimeoutsPtrInput interface {
	pulumi.Input

	ToDbaasMysqlUserTimeoutsPtrOutput() DbaasMysqlUserTimeoutsPtrOutput
	ToDbaasMysqlUserTimeoutsPtrOutputWithContext(context.Context) DbaasMysqlUserTimeoutsPtrOutput
}

type dbaasMysqlUserTimeoutsPtrType DbaasMysqlUserTimeoutsArgs

func DbaasMysqlUserTimeoutsPtr(v *DbaasMysqlUserTimeoutsArgs) DbaasMysqlUserTimeoutsPtrInput {
	return (*dbaasMysqlUserTimeoutsPtrType)(v)
}

func (*dbaasMysqlUserTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasMysqlUserTimeouts)(nil)).Elem()
}

func (i *dbaasMysqlUserTimeoutsPtrType) ToDbaasMysqlUserTimeoutsPtrOutput() DbaasMysqlUserTimeoutsPtrOutput {
	return i.ToDbaasMysqlUserTimeoutsPtrOutputWithContext(context.Background())
}

func (i *dbaasMysqlUserTimeoutsPtrType) ToDbaasMysqlUserTimeoutsPtrOutputWithContext(ctx context.Context) DbaasMysqlUserTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasMysqlUserTimeoutsPtrOutput)
}

type DbaasMysqlUserTimeoutsOutput struct{ *pulumi.OutputState }

func (DbaasMysqlUserTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasMysqlUserTimeouts)(nil)).Elem()
}

func (o DbaasMysqlUserTimeoutsOutput) ToDbaasMysqlUserTimeoutsOutput() DbaasMysqlUserTimeoutsOutput {
	return o
}

func (o DbaasMysqlUserTimeoutsOutput) ToDbaasMysqlUserTimeoutsOutputWithContext(ctx context.Context) DbaasMysqlUserTimeoutsOutput {
	return o
}

func (o DbaasMysqlUserTimeoutsOutput) ToDbaasMysqlUserTimeoutsPtrOutput() DbaasMysqlUserTimeoutsPtrOutput {
	return o.ToDbaasMysqlUserTimeoutsPtrOutputWithContext(context.Background())
}

func (o DbaasMysqlUserTimeoutsOutput) ToDbaasMysqlUserTimeoutsPtrOutputWithContext(ctx context.Context) DbaasMysqlUserTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbaasMysqlUserTimeouts) *DbaasMysqlUserTimeouts {
		return &v
	}).(DbaasMysqlUserTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasMysqlUserTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasMysqlUserTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o DbaasMysqlUserTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasMysqlUserTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o DbaasMysqlUserTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasMysqlUserTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasMysqlUserTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasMysqlUserTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type DbaasMysqlUserTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (DbaasMysqlUserTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasMysqlUserTimeouts)(nil)).Elem()
}

func (o DbaasMysqlUserTimeoutsPtrOutput) ToDbaasMysqlUserTimeoutsPtrOutput() DbaasMysqlUserTimeoutsPtrOutput {
	return o
}

func (o DbaasMysqlUserTimeoutsPtrOutput) ToDbaasMysqlUserTimeoutsPtrOutputWithContext(ctx context.Context) DbaasMysqlUserTimeoutsPtrOutput {
	return o
}

func (o DbaasMysqlUserTimeoutsPtrOutput) Elem() DbaasMysqlUserTimeoutsOutput {
	return o.ApplyT(func(v *DbaasMysqlUserTimeouts) DbaasMysqlUserTimeouts {
		if v != nil {
			return *v
		}
		var ret DbaasMysqlUserTimeouts
		return ret
	}).(DbaasMysqlUserTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasMysqlUserTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasMysqlUserTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o DbaasMysqlUserTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasMysqlUserTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o DbaasMysqlUserTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasMysqlUserTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasMysqlUserTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasMysqlUserTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type DbaasOpensearch struct {
	// OpenSearch Dashboards settings
	Dashboards *DbaasOpensearchDashboards `pulumi:"dashboards"`
	// ❗ Service name
	ForkFromService *string `pulumi:"forkFromService"`
	// (can be used multiple times) Allows you to create glob style patterns and set a max number of indexes matching this pattern you want to keep. Creating indexes exceeding this value will cause the oldest one to get deleted. You could for example create a pattern looking like 'logs.?' and then create index logs.1, logs.2 etc, it will delete logs.1 once you create logs.6. Do note 'logs.?' does not apply to logs.10. Note: Setting max*index*count to 0 will do nothing and the pattern gets ignored.
	IndexPatterns []DbaasOpensearchIndexPattern `pulumi:"indexPatterns"`
	// Template settings for all new indexes
	IndexTemplate *DbaasOpensearchIndexTemplate `pulumi:"indexTemplate"`
	// Allow incoming connections from this list of CIDR address block, e.g. `["10.20.0.0/16"]
	IpFilters []string `pulumi:"ipFilters"`
	// Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.
	KeepIndexRefreshInterval *bool `pulumi:"keepIndexRefreshInterval"`
	// Maximum number of indexes to keep (Minimum value is `0`)
	//
	// Deprecated: This attribute is deprecated and is ignored
	MaxIndexCount *int `pulumi:"maxIndexCount"`
	// ❗ Name of a backup to recover from
	RecoveryBackupName *string `pulumi:"recoveryBackupName"`
	// OpenSearch-specific settings, in json. e.g.`jsonencode({thread_pool_search_size: 64})`. Use `exo x get-dbaas-settings-opensearch` to get a list of available settings.
	Settings *string `pulumi:"settings"`
	// ❗ OpenSearch major version (`exo dbaas type show opensearch` for reference)
	Version *string `pulumi:"version"`
}

// DbaasOpensearchInput is an input type that accepts DbaasOpensearchArgs and DbaasOpensearchOutput values.
// You can construct a concrete instance of `DbaasOpensearchInput` via:
//
//	DbaasOpensearchArgs{...}
type DbaasOpensearchInput interface {
	pulumi.Input

	ToDbaasOpensearchOutput() DbaasOpensearchOutput
	ToDbaasOpensearchOutputWithContext(context.Context) DbaasOpensearchOutput
}

type DbaasOpensearchArgs struct {
	// OpenSearch Dashboards settings
	Dashboards DbaasOpensearchDashboardsPtrInput `pulumi:"dashboards"`
	// ❗ Service name
	ForkFromService pulumi.StringPtrInput `pulumi:"forkFromService"`
	// (can be used multiple times) Allows you to create glob style patterns and set a max number of indexes matching this pattern you want to keep. Creating indexes exceeding this value will cause the oldest one to get deleted. You could for example create a pattern looking like 'logs.?' and then create index logs.1, logs.2 etc, it will delete logs.1 once you create logs.6. Do note 'logs.?' does not apply to logs.10. Note: Setting max*index*count to 0 will do nothing and the pattern gets ignored.
	IndexPatterns DbaasOpensearchIndexPatternArrayInput `pulumi:"indexPatterns"`
	// Template settings for all new indexes
	IndexTemplate DbaasOpensearchIndexTemplatePtrInput `pulumi:"indexTemplate"`
	// Allow incoming connections from this list of CIDR address block, e.g. `["10.20.0.0/16"]
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.
	KeepIndexRefreshInterval pulumi.BoolPtrInput `pulumi:"keepIndexRefreshInterval"`
	// Maximum number of indexes to keep (Minimum value is `0`)
	//
	// Deprecated: This attribute is deprecated and is ignored
	MaxIndexCount pulumi.IntPtrInput `pulumi:"maxIndexCount"`
	// ❗ Name of a backup to recover from
	RecoveryBackupName pulumi.StringPtrInput `pulumi:"recoveryBackupName"`
	// OpenSearch-specific settings, in json. e.g.`jsonencode({thread_pool_search_size: 64})`. Use `exo x get-dbaas-settings-opensearch` to get a list of available settings.
	Settings pulumi.StringPtrInput `pulumi:"settings"`
	// ❗ OpenSearch major version (`exo dbaas type show opensearch` for reference)
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (DbaasOpensearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasOpensearch)(nil)).Elem()
}

func (i DbaasOpensearchArgs) ToDbaasOpensearchOutput() DbaasOpensearchOutput {
	return i.ToDbaasOpensearchOutputWithContext(context.Background())
}

func (i DbaasOpensearchArgs) ToDbaasOpensearchOutputWithContext(ctx context.Context) DbaasOpensearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasOpensearchOutput)
}

func (i DbaasOpensearchArgs) ToDbaasOpensearchPtrOutput() DbaasOpensearchPtrOutput {
	return i.ToDbaasOpensearchPtrOutputWithContext(context.Background())
}

func (i DbaasOpensearchArgs) ToDbaasOpensearchPtrOutputWithContext(ctx context.Context) DbaasOpensearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasOpensearchOutput).ToDbaasOpensearchPtrOutputWithContext(ctx)
}

// DbaasOpensearchPtrInput is an input type that accepts DbaasOpensearchArgs, DbaasOpensearchPtr and DbaasOpensearchPtrOutput values.
// You can construct a concrete instance of `DbaasOpensearchPtrInput` via:
//
//	        DbaasOpensearchArgs{...}
//
//	or:
//
//	        nil
type DbaasOpensearchPtrInput interface {
	pulumi.Input

	ToDbaasOpensearchPtrOutput() DbaasOpensearchPtrOutput
	ToDbaasOpensearchPtrOutputWithContext(context.Context) DbaasOpensearchPtrOutput
}

type dbaasOpensearchPtrType DbaasOpensearchArgs

func DbaasOpensearchPtr(v *DbaasOpensearchArgs) DbaasOpensearchPtrInput {
	return (*dbaasOpensearchPtrType)(v)
}

func (*dbaasOpensearchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasOpensearch)(nil)).Elem()
}

func (i *dbaasOpensearchPtrType) ToDbaasOpensearchPtrOutput() DbaasOpensearchPtrOutput {
	return i.ToDbaasOpensearchPtrOutputWithContext(context.Background())
}

func (i *dbaasOpensearchPtrType) ToDbaasOpensearchPtrOutputWithContext(ctx context.Context) DbaasOpensearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasOpensearchPtrOutput)
}

type DbaasOpensearchOutput struct{ *pulumi.OutputState }

func (DbaasOpensearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasOpensearch)(nil)).Elem()
}

func (o DbaasOpensearchOutput) ToDbaasOpensearchOutput() DbaasOpensearchOutput {
	return o
}

func (o DbaasOpensearchOutput) ToDbaasOpensearchOutputWithContext(ctx context.Context) DbaasOpensearchOutput {
	return o
}

func (o DbaasOpensearchOutput) ToDbaasOpensearchPtrOutput() DbaasOpensearchPtrOutput {
	return o.ToDbaasOpensearchPtrOutputWithContext(context.Background())
}

func (o DbaasOpensearchOutput) ToDbaasOpensearchPtrOutputWithContext(ctx context.Context) DbaasOpensearchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbaasOpensearch) *DbaasOpensearch {
		return &v
	}).(DbaasOpensearchPtrOutput)
}

// OpenSearch Dashboards settings
func (o DbaasOpensearchOutput) Dashboards() DbaasOpensearchDashboardsPtrOutput {
	return o.ApplyT(func(v DbaasOpensearch) *DbaasOpensearchDashboards { return v.Dashboards }).(DbaasOpensearchDashboardsPtrOutput)
}

// ❗ Service name
func (o DbaasOpensearchOutput) ForkFromService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasOpensearch) *string { return v.ForkFromService }).(pulumi.StringPtrOutput)
}

// (can be used multiple times) Allows you to create glob style patterns and set a max number of indexes matching this pattern you want to keep. Creating indexes exceeding this value will cause the oldest one to get deleted. You could for example create a pattern looking like 'logs.?' and then create index logs.1, logs.2 etc, it will delete logs.1 once you create logs.6. Do note 'logs.?' does not apply to logs.10. Note: Setting max*index*count to 0 will do nothing and the pattern gets ignored.
func (o DbaasOpensearchOutput) IndexPatterns() DbaasOpensearchIndexPatternArrayOutput {
	return o.ApplyT(func(v DbaasOpensearch) []DbaasOpensearchIndexPattern { return v.IndexPatterns }).(DbaasOpensearchIndexPatternArrayOutput)
}

// Template settings for all new indexes
func (o DbaasOpensearchOutput) IndexTemplate() DbaasOpensearchIndexTemplatePtrOutput {
	return o.ApplyT(func(v DbaasOpensearch) *DbaasOpensearchIndexTemplate { return v.IndexTemplate }).(DbaasOpensearchIndexTemplatePtrOutput)
}

// Allow incoming connections from this list of CIDR address block, e.g. `["10.20.0.0/16"]
func (o DbaasOpensearchOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DbaasOpensearch) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.
func (o DbaasOpensearchOutput) KeepIndexRefreshInterval() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DbaasOpensearch) *bool { return v.KeepIndexRefreshInterval }).(pulumi.BoolPtrOutput)
}

// Maximum number of indexes to keep (Minimum value is `0`)
//
// Deprecated: This attribute is deprecated and is ignored
func (o DbaasOpensearchOutput) MaxIndexCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbaasOpensearch) *int { return v.MaxIndexCount }).(pulumi.IntPtrOutput)
}

// ❗ Name of a backup to recover from
func (o DbaasOpensearchOutput) RecoveryBackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasOpensearch) *string { return v.RecoveryBackupName }).(pulumi.StringPtrOutput)
}

// OpenSearch-specific settings, in json. e.g.`jsonencode({thread_pool_search_size: 64})`. Use `exo x get-dbaas-settings-opensearch` to get a list of available settings.
func (o DbaasOpensearchOutput) Settings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasOpensearch) *string { return v.Settings }).(pulumi.StringPtrOutput)
}

// ❗ OpenSearch major version (`exo dbaas type show opensearch` for reference)
func (o DbaasOpensearchOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasOpensearch) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type DbaasOpensearchPtrOutput struct{ *pulumi.OutputState }

func (DbaasOpensearchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasOpensearch)(nil)).Elem()
}

func (o DbaasOpensearchPtrOutput) ToDbaasOpensearchPtrOutput() DbaasOpensearchPtrOutput {
	return o
}

func (o DbaasOpensearchPtrOutput) ToDbaasOpensearchPtrOutputWithContext(ctx context.Context) DbaasOpensearchPtrOutput {
	return o
}

func (o DbaasOpensearchPtrOutput) Elem() DbaasOpensearchOutput {
	return o.ApplyT(func(v *DbaasOpensearch) DbaasOpensearch {
		if v != nil {
			return *v
		}
		var ret DbaasOpensearch
		return ret
	}).(DbaasOpensearchOutput)
}

// OpenSearch Dashboards settings
func (o DbaasOpensearchPtrOutput) Dashboards() DbaasOpensearchDashboardsPtrOutput {
	return o.ApplyT(func(v *DbaasOpensearch) *DbaasOpensearchDashboards {
		if v == nil {
			return nil
		}
		return v.Dashboards
	}).(DbaasOpensearchDashboardsPtrOutput)
}

// ❗ Service name
func (o DbaasOpensearchPtrOutput) ForkFromService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasOpensearch) *string {
		if v == nil {
			return nil
		}
		return v.ForkFromService
	}).(pulumi.StringPtrOutput)
}

// (can be used multiple times) Allows you to create glob style patterns and set a max number of indexes matching this pattern you want to keep. Creating indexes exceeding this value will cause the oldest one to get deleted. You could for example create a pattern looking like 'logs.?' and then create index logs.1, logs.2 etc, it will delete logs.1 once you create logs.6. Do note 'logs.?' does not apply to logs.10. Note: Setting max*index*count to 0 will do nothing and the pattern gets ignored.
func (o DbaasOpensearchPtrOutput) IndexPatterns() DbaasOpensearchIndexPatternArrayOutput {
	return o.ApplyT(func(v *DbaasOpensearch) []DbaasOpensearchIndexPattern {
		if v == nil {
			return nil
		}
		return v.IndexPatterns
	}).(DbaasOpensearchIndexPatternArrayOutput)
}

// Template settings for all new indexes
func (o DbaasOpensearchPtrOutput) IndexTemplate() DbaasOpensearchIndexTemplatePtrOutput {
	return o.ApplyT(func(v *DbaasOpensearch) *DbaasOpensearchIndexTemplate {
		if v == nil {
			return nil
		}
		return v.IndexTemplate
	}).(DbaasOpensearchIndexTemplatePtrOutput)
}

// Allow incoming connections from this list of CIDR address block, e.g. `["10.20.0.0/16"]
func (o DbaasOpensearchPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DbaasOpensearch) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.
func (o DbaasOpensearchPtrOutput) KeepIndexRefreshInterval() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DbaasOpensearch) *bool {
		if v == nil {
			return nil
		}
		return v.KeepIndexRefreshInterval
	}).(pulumi.BoolPtrOutput)
}

// Maximum number of indexes to keep (Minimum value is `0`)
//
// Deprecated: This attribute is deprecated and is ignored
func (o DbaasOpensearchPtrOutput) MaxIndexCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DbaasOpensearch) *int {
		if v == nil {
			return nil
		}
		return v.MaxIndexCount
	}).(pulumi.IntPtrOutput)
}

// ❗ Name of a backup to recover from
func (o DbaasOpensearchPtrOutput) RecoveryBackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasOpensearch) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryBackupName
	}).(pulumi.StringPtrOutput)
}

// OpenSearch-specific settings, in json. e.g.`jsonencode({thread_pool_search_size: 64})`. Use `exo x get-dbaas-settings-opensearch` to get a list of available settings.
func (o DbaasOpensearchPtrOutput) Settings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasOpensearch) *string {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(pulumi.StringPtrOutput)
}

// ❗ OpenSearch major version (`exo dbaas type show opensearch` for reference)
func (o DbaasOpensearchPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasOpensearch) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type DbaasOpensearchDashboards struct {
	// Enable or disable OpenSearch Dashboards (default: true).
	Enabled *bool `pulumi:"enabled"`
	// Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max*old*space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch. (default: 128).
	MaxOldSpaceSize *int `pulumi:"maxOldSpaceSize"`
	// Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch (default: 30000)
	RequestTimeout *int `pulumi:"requestTimeout"`
}

// DbaasOpensearchDashboardsInput is an input type that accepts DbaasOpensearchDashboardsArgs and DbaasOpensearchDashboardsOutput values.
// You can construct a concrete instance of `DbaasOpensearchDashboardsInput` via:
//
//	DbaasOpensearchDashboardsArgs{...}
type DbaasOpensearchDashboardsInput interface {
	pulumi.Input

	ToDbaasOpensearchDashboardsOutput() DbaasOpensearchDashboardsOutput
	ToDbaasOpensearchDashboardsOutputWithContext(context.Context) DbaasOpensearchDashboardsOutput
}

type DbaasOpensearchDashboardsArgs struct {
	// Enable or disable OpenSearch Dashboards (default: true).
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max*old*space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch. (default: 128).
	MaxOldSpaceSize pulumi.IntPtrInput `pulumi:"maxOldSpaceSize"`
	// Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch (default: 30000)
	RequestTimeout pulumi.IntPtrInput `pulumi:"requestTimeout"`
}

func (DbaasOpensearchDashboardsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasOpensearchDashboards)(nil)).Elem()
}

func (i DbaasOpensearchDashboardsArgs) ToDbaasOpensearchDashboardsOutput() DbaasOpensearchDashboardsOutput {
	return i.ToDbaasOpensearchDashboardsOutputWithContext(context.Background())
}

func (i DbaasOpensearchDashboardsArgs) ToDbaasOpensearchDashboardsOutputWithContext(ctx context.Context) DbaasOpensearchDashboardsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasOpensearchDashboardsOutput)
}

func (i DbaasOpensearchDashboardsArgs) ToDbaasOpensearchDashboardsPtrOutput() DbaasOpensearchDashboardsPtrOutput {
	return i.ToDbaasOpensearchDashboardsPtrOutputWithContext(context.Background())
}

func (i DbaasOpensearchDashboardsArgs) ToDbaasOpensearchDashboardsPtrOutputWithContext(ctx context.Context) DbaasOpensearchDashboardsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasOpensearchDashboardsOutput).ToDbaasOpensearchDashboardsPtrOutputWithContext(ctx)
}

// DbaasOpensearchDashboardsPtrInput is an input type that accepts DbaasOpensearchDashboardsArgs, DbaasOpensearchDashboardsPtr and DbaasOpensearchDashboardsPtrOutput values.
// You can construct a concrete instance of `DbaasOpensearchDashboardsPtrInput` via:
//
//	        DbaasOpensearchDashboardsArgs{...}
//
//	or:
//
//	        nil
type DbaasOpensearchDashboardsPtrInput interface {
	pulumi.Input

	ToDbaasOpensearchDashboardsPtrOutput() DbaasOpensearchDashboardsPtrOutput
	ToDbaasOpensearchDashboardsPtrOutputWithContext(context.Context) DbaasOpensearchDashboardsPtrOutput
}

type dbaasOpensearchDashboardsPtrType DbaasOpensearchDashboardsArgs

func DbaasOpensearchDashboardsPtr(v *DbaasOpensearchDashboardsArgs) DbaasOpensearchDashboardsPtrInput {
	return (*dbaasOpensearchDashboardsPtrType)(v)
}

func (*dbaasOpensearchDashboardsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasOpensearchDashboards)(nil)).Elem()
}

func (i *dbaasOpensearchDashboardsPtrType) ToDbaasOpensearchDashboardsPtrOutput() DbaasOpensearchDashboardsPtrOutput {
	return i.ToDbaasOpensearchDashboardsPtrOutputWithContext(context.Background())
}

func (i *dbaasOpensearchDashboardsPtrType) ToDbaasOpensearchDashboardsPtrOutputWithContext(ctx context.Context) DbaasOpensearchDashboardsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasOpensearchDashboardsPtrOutput)
}

type DbaasOpensearchDashboardsOutput struct{ *pulumi.OutputState }

func (DbaasOpensearchDashboardsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasOpensearchDashboards)(nil)).Elem()
}

func (o DbaasOpensearchDashboardsOutput) ToDbaasOpensearchDashboardsOutput() DbaasOpensearchDashboardsOutput {
	return o
}

func (o DbaasOpensearchDashboardsOutput) ToDbaasOpensearchDashboardsOutputWithContext(ctx context.Context) DbaasOpensearchDashboardsOutput {
	return o
}

func (o DbaasOpensearchDashboardsOutput) ToDbaasOpensearchDashboardsPtrOutput() DbaasOpensearchDashboardsPtrOutput {
	return o.ToDbaasOpensearchDashboardsPtrOutputWithContext(context.Background())
}

func (o DbaasOpensearchDashboardsOutput) ToDbaasOpensearchDashboardsPtrOutputWithContext(ctx context.Context) DbaasOpensearchDashboardsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbaasOpensearchDashboards) *DbaasOpensearchDashboards {
		return &v
	}).(DbaasOpensearchDashboardsPtrOutput)
}

// Enable or disable OpenSearch Dashboards (default: true).
func (o DbaasOpensearchDashboardsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DbaasOpensearchDashboards) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max*old*space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch. (default: 128).
func (o DbaasOpensearchDashboardsOutput) MaxOldSpaceSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbaasOpensearchDashboards) *int { return v.MaxOldSpaceSize }).(pulumi.IntPtrOutput)
}

// Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch (default: 30000)
func (o DbaasOpensearchDashboardsOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbaasOpensearchDashboards) *int { return v.RequestTimeout }).(pulumi.IntPtrOutput)
}

type DbaasOpensearchDashboardsPtrOutput struct{ *pulumi.OutputState }

func (DbaasOpensearchDashboardsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasOpensearchDashboards)(nil)).Elem()
}

func (o DbaasOpensearchDashboardsPtrOutput) ToDbaasOpensearchDashboardsPtrOutput() DbaasOpensearchDashboardsPtrOutput {
	return o
}

func (o DbaasOpensearchDashboardsPtrOutput) ToDbaasOpensearchDashboardsPtrOutputWithContext(ctx context.Context) DbaasOpensearchDashboardsPtrOutput {
	return o
}

func (o DbaasOpensearchDashboardsPtrOutput) Elem() DbaasOpensearchDashboardsOutput {
	return o.ApplyT(func(v *DbaasOpensearchDashboards) DbaasOpensearchDashboards {
		if v != nil {
			return *v
		}
		var ret DbaasOpensearchDashboards
		return ret
	}).(DbaasOpensearchDashboardsOutput)
}

// Enable or disable OpenSearch Dashboards (default: true).
func (o DbaasOpensearchDashboardsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DbaasOpensearchDashboards) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max*old*space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch. (default: 128).
func (o DbaasOpensearchDashboardsPtrOutput) MaxOldSpaceSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DbaasOpensearchDashboards) *int {
		if v == nil {
			return nil
		}
		return v.MaxOldSpaceSize
	}).(pulumi.IntPtrOutput)
}

// Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch (default: 30000)
func (o DbaasOpensearchDashboardsPtrOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DbaasOpensearchDashboards) *int {
		if v == nil {
			return nil
		}
		return v.RequestTimeout
	}).(pulumi.IntPtrOutput)
}

type DbaasOpensearchIndexPattern struct {
	// Maximum number of indexes to keep before deleting the oldest one (Minimum value is `0`)
	MaxIndexCount *int `pulumi:"maxIndexCount"`
	// fnmatch pattern
	Pattern *string `pulumi:"pattern"`
	// `alphabetical` or `creationDate`.
	SortingAlgorithm *string `pulumi:"sortingAlgorithm"`
}

// DbaasOpensearchIndexPatternInput is an input type that accepts DbaasOpensearchIndexPatternArgs and DbaasOpensearchIndexPatternOutput values.
// You can construct a concrete instance of `DbaasOpensearchIndexPatternInput` via:
//
//	DbaasOpensearchIndexPatternArgs{...}
type DbaasOpensearchIndexPatternInput interface {
	pulumi.Input

	ToDbaasOpensearchIndexPatternOutput() DbaasOpensearchIndexPatternOutput
	ToDbaasOpensearchIndexPatternOutputWithContext(context.Context) DbaasOpensearchIndexPatternOutput
}

type DbaasOpensearchIndexPatternArgs struct {
	// Maximum number of indexes to keep before deleting the oldest one (Minimum value is `0`)
	MaxIndexCount pulumi.IntPtrInput `pulumi:"maxIndexCount"`
	// fnmatch pattern
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// `alphabetical` or `creationDate`.
	SortingAlgorithm pulumi.StringPtrInput `pulumi:"sortingAlgorithm"`
}

func (DbaasOpensearchIndexPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasOpensearchIndexPattern)(nil)).Elem()
}

func (i DbaasOpensearchIndexPatternArgs) ToDbaasOpensearchIndexPatternOutput() DbaasOpensearchIndexPatternOutput {
	return i.ToDbaasOpensearchIndexPatternOutputWithContext(context.Background())
}

func (i DbaasOpensearchIndexPatternArgs) ToDbaasOpensearchIndexPatternOutputWithContext(ctx context.Context) DbaasOpensearchIndexPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasOpensearchIndexPatternOutput)
}

// DbaasOpensearchIndexPatternArrayInput is an input type that accepts DbaasOpensearchIndexPatternArray and DbaasOpensearchIndexPatternArrayOutput values.
// You can construct a concrete instance of `DbaasOpensearchIndexPatternArrayInput` via:
//
//	DbaasOpensearchIndexPatternArray{ DbaasOpensearchIndexPatternArgs{...} }
type DbaasOpensearchIndexPatternArrayInput interface {
	pulumi.Input

	ToDbaasOpensearchIndexPatternArrayOutput() DbaasOpensearchIndexPatternArrayOutput
	ToDbaasOpensearchIndexPatternArrayOutputWithContext(context.Context) DbaasOpensearchIndexPatternArrayOutput
}

type DbaasOpensearchIndexPatternArray []DbaasOpensearchIndexPatternInput

func (DbaasOpensearchIndexPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbaasOpensearchIndexPattern)(nil)).Elem()
}

func (i DbaasOpensearchIndexPatternArray) ToDbaasOpensearchIndexPatternArrayOutput() DbaasOpensearchIndexPatternArrayOutput {
	return i.ToDbaasOpensearchIndexPatternArrayOutputWithContext(context.Background())
}

func (i DbaasOpensearchIndexPatternArray) ToDbaasOpensearchIndexPatternArrayOutputWithContext(ctx context.Context) DbaasOpensearchIndexPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasOpensearchIndexPatternArrayOutput)
}

type DbaasOpensearchIndexPatternOutput struct{ *pulumi.OutputState }

func (DbaasOpensearchIndexPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasOpensearchIndexPattern)(nil)).Elem()
}

func (o DbaasOpensearchIndexPatternOutput) ToDbaasOpensearchIndexPatternOutput() DbaasOpensearchIndexPatternOutput {
	return o
}

func (o DbaasOpensearchIndexPatternOutput) ToDbaasOpensearchIndexPatternOutputWithContext(ctx context.Context) DbaasOpensearchIndexPatternOutput {
	return o
}

// Maximum number of indexes to keep before deleting the oldest one (Minimum value is `0`)
func (o DbaasOpensearchIndexPatternOutput) MaxIndexCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbaasOpensearchIndexPattern) *int { return v.MaxIndexCount }).(pulumi.IntPtrOutput)
}

// fnmatch pattern
func (o DbaasOpensearchIndexPatternOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasOpensearchIndexPattern) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// `alphabetical` or `creationDate`.
func (o DbaasOpensearchIndexPatternOutput) SortingAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasOpensearchIndexPattern) *string { return v.SortingAlgorithm }).(pulumi.StringPtrOutput)
}

type DbaasOpensearchIndexPatternArrayOutput struct{ *pulumi.OutputState }

func (DbaasOpensearchIndexPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbaasOpensearchIndexPattern)(nil)).Elem()
}

func (o DbaasOpensearchIndexPatternArrayOutput) ToDbaasOpensearchIndexPatternArrayOutput() DbaasOpensearchIndexPatternArrayOutput {
	return o
}

func (o DbaasOpensearchIndexPatternArrayOutput) ToDbaasOpensearchIndexPatternArrayOutputWithContext(ctx context.Context) DbaasOpensearchIndexPatternArrayOutput {
	return o
}

func (o DbaasOpensearchIndexPatternArrayOutput) Index(i pulumi.IntInput) DbaasOpensearchIndexPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DbaasOpensearchIndexPattern {
		return vs[0].([]DbaasOpensearchIndexPattern)[vs[1].(int)]
	}).(DbaasOpensearchIndexPatternOutput)
}

type DbaasOpensearchIndexTemplate struct {
	// The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. (Default is 10000. Minimum value is `0`, maximum value is `100000`.)
	MappingNestedObjectsLimit *int `pulumi:"mappingNestedObjectsLimit"`
	// The number of replicas each primary shard has. (Minimum value is `0`, maximum value is `29`)
	NumberOfReplicas *int `pulumi:"numberOfReplicas"`
	// The number of primary shards that an index should have. (Minimum value is `1`, maximum value is `1024`.)
	NumberOfShards *int `pulumi:"numberOfShards"`
}

// DbaasOpensearchIndexTemplateInput is an input type that accepts DbaasOpensearchIndexTemplateArgs and DbaasOpensearchIndexTemplateOutput values.
// You can construct a concrete instance of `DbaasOpensearchIndexTemplateInput` via:
//
//	DbaasOpensearchIndexTemplateArgs{...}
type DbaasOpensearchIndexTemplateInput interface {
	pulumi.Input

	ToDbaasOpensearchIndexTemplateOutput() DbaasOpensearchIndexTemplateOutput
	ToDbaasOpensearchIndexTemplateOutputWithContext(context.Context) DbaasOpensearchIndexTemplateOutput
}

type DbaasOpensearchIndexTemplateArgs struct {
	// The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. (Default is 10000. Minimum value is `0`, maximum value is `100000`.)
	MappingNestedObjectsLimit pulumi.IntPtrInput `pulumi:"mappingNestedObjectsLimit"`
	// The number of replicas each primary shard has. (Minimum value is `0`, maximum value is `29`)
	NumberOfReplicas pulumi.IntPtrInput `pulumi:"numberOfReplicas"`
	// The number of primary shards that an index should have. (Minimum value is `1`, maximum value is `1024`.)
	NumberOfShards pulumi.IntPtrInput `pulumi:"numberOfShards"`
}

func (DbaasOpensearchIndexTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasOpensearchIndexTemplate)(nil)).Elem()
}

func (i DbaasOpensearchIndexTemplateArgs) ToDbaasOpensearchIndexTemplateOutput() DbaasOpensearchIndexTemplateOutput {
	return i.ToDbaasOpensearchIndexTemplateOutputWithContext(context.Background())
}

func (i DbaasOpensearchIndexTemplateArgs) ToDbaasOpensearchIndexTemplateOutputWithContext(ctx context.Context) DbaasOpensearchIndexTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasOpensearchIndexTemplateOutput)
}

func (i DbaasOpensearchIndexTemplateArgs) ToDbaasOpensearchIndexTemplatePtrOutput() DbaasOpensearchIndexTemplatePtrOutput {
	return i.ToDbaasOpensearchIndexTemplatePtrOutputWithContext(context.Background())
}

func (i DbaasOpensearchIndexTemplateArgs) ToDbaasOpensearchIndexTemplatePtrOutputWithContext(ctx context.Context) DbaasOpensearchIndexTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasOpensearchIndexTemplateOutput).ToDbaasOpensearchIndexTemplatePtrOutputWithContext(ctx)
}

// DbaasOpensearchIndexTemplatePtrInput is an input type that accepts DbaasOpensearchIndexTemplateArgs, DbaasOpensearchIndexTemplatePtr and DbaasOpensearchIndexTemplatePtrOutput values.
// You can construct a concrete instance of `DbaasOpensearchIndexTemplatePtrInput` via:
//
//	        DbaasOpensearchIndexTemplateArgs{...}
//
//	or:
//
//	        nil
type DbaasOpensearchIndexTemplatePtrInput interface {
	pulumi.Input

	ToDbaasOpensearchIndexTemplatePtrOutput() DbaasOpensearchIndexTemplatePtrOutput
	ToDbaasOpensearchIndexTemplatePtrOutputWithContext(context.Context) DbaasOpensearchIndexTemplatePtrOutput
}

type dbaasOpensearchIndexTemplatePtrType DbaasOpensearchIndexTemplateArgs

func DbaasOpensearchIndexTemplatePtr(v *DbaasOpensearchIndexTemplateArgs) DbaasOpensearchIndexTemplatePtrInput {
	return (*dbaasOpensearchIndexTemplatePtrType)(v)
}

func (*dbaasOpensearchIndexTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasOpensearchIndexTemplate)(nil)).Elem()
}

func (i *dbaasOpensearchIndexTemplatePtrType) ToDbaasOpensearchIndexTemplatePtrOutput() DbaasOpensearchIndexTemplatePtrOutput {
	return i.ToDbaasOpensearchIndexTemplatePtrOutputWithContext(context.Background())
}

func (i *dbaasOpensearchIndexTemplatePtrType) ToDbaasOpensearchIndexTemplatePtrOutputWithContext(ctx context.Context) DbaasOpensearchIndexTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasOpensearchIndexTemplatePtrOutput)
}

type DbaasOpensearchIndexTemplateOutput struct{ *pulumi.OutputState }

func (DbaasOpensearchIndexTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasOpensearchIndexTemplate)(nil)).Elem()
}

func (o DbaasOpensearchIndexTemplateOutput) ToDbaasOpensearchIndexTemplateOutput() DbaasOpensearchIndexTemplateOutput {
	return o
}

func (o DbaasOpensearchIndexTemplateOutput) ToDbaasOpensearchIndexTemplateOutputWithContext(ctx context.Context) DbaasOpensearchIndexTemplateOutput {
	return o
}

func (o DbaasOpensearchIndexTemplateOutput) ToDbaasOpensearchIndexTemplatePtrOutput() DbaasOpensearchIndexTemplatePtrOutput {
	return o.ToDbaasOpensearchIndexTemplatePtrOutputWithContext(context.Background())
}

func (o DbaasOpensearchIndexTemplateOutput) ToDbaasOpensearchIndexTemplatePtrOutputWithContext(ctx context.Context) DbaasOpensearchIndexTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbaasOpensearchIndexTemplate) *DbaasOpensearchIndexTemplate {
		return &v
	}).(DbaasOpensearchIndexTemplatePtrOutput)
}

// The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. (Default is 10000. Minimum value is `0`, maximum value is `100000`.)
func (o DbaasOpensearchIndexTemplateOutput) MappingNestedObjectsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbaasOpensearchIndexTemplate) *int { return v.MappingNestedObjectsLimit }).(pulumi.IntPtrOutput)
}

// The number of replicas each primary shard has. (Minimum value is `0`, maximum value is `29`)
func (o DbaasOpensearchIndexTemplateOutput) NumberOfReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbaasOpensearchIndexTemplate) *int { return v.NumberOfReplicas }).(pulumi.IntPtrOutput)
}

// The number of primary shards that an index should have. (Minimum value is `1`, maximum value is `1024`.)
func (o DbaasOpensearchIndexTemplateOutput) NumberOfShards() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbaasOpensearchIndexTemplate) *int { return v.NumberOfShards }).(pulumi.IntPtrOutput)
}

type DbaasOpensearchIndexTemplatePtrOutput struct{ *pulumi.OutputState }

func (DbaasOpensearchIndexTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasOpensearchIndexTemplate)(nil)).Elem()
}

func (o DbaasOpensearchIndexTemplatePtrOutput) ToDbaasOpensearchIndexTemplatePtrOutput() DbaasOpensearchIndexTemplatePtrOutput {
	return o
}

func (o DbaasOpensearchIndexTemplatePtrOutput) ToDbaasOpensearchIndexTemplatePtrOutputWithContext(ctx context.Context) DbaasOpensearchIndexTemplatePtrOutput {
	return o
}

func (o DbaasOpensearchIndexTemplatePtrOutput) Elem() DbaasOpensearchIndexTemplateOutput {
	return o.ApplyT(func(v *DbaasOpensearchIndexTemplate) DbaasOpensearchIndexTemplate {
		if v != nil {
			return *v
		}
		var ret DbaasOpensearchIndexTemplate
		return ret
	}).(DbaasOpensearchIndexTemplateOutput)
}

// The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. (Default is 10000. Minimum value is `0`, maximum value is `100000`.)
func (o DbaasOpensearchIndexTemplatePtrOutput) MappingNestedObjectsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DbaasOpensearchIndexTemplate) *int {
		if v == nil {
			return nil
		}
		return v.MappingNestedObjectsLimit
	}).(pulumi.IntPtrOutput)
}

// The number of replicas each primary shard has. (Minimum value is `0`, maximum value is `29`)
func (o DbaasOpensearchIndexTemplatePtrOutput) NumberOfReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DbaasOpensearchIndexTemplate) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfReplicas
	}).(pulumi.IntPtrOutput)
}

// The number of primary shards that an index should have. (Minimum value is `1`, maximum value is `1024`.)
func (o DbaasOpensearchIndexTemplatePtrOutput) NumberOfShards() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DbaasOpensearchIndexTemplate) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfShards
	}).(pulumi.IntPtrOutput)
}

type DbaasOpensearchUserTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// DbaasOpensearchUserTimeoutsInput is an input type that accepts DbaasOpensearchUserTimeoutsArgs and DbaasOpensearchUserTimeoutsOutput values.
// You can construct a concrete instance of `DbaasOpensearchUserTimeoutsInput` via:
//
//	DbaasOpensearchUserTimeoutsArgs{...}
type DbaasOpensearchUserTimeoutsInput interface {
	pulumi.Input

	ToDbaasOpensearchUserTimeoutsOutput() DbaasOpensearchUserTimeoutsOutput
	ToDbaasOpensearchUserTimeoutsOutputWithContext(context.Context) DbaasOpensearchUserTimeoutsOutput
}

type DbaasOpensearchUserTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (DbaasOpensearchUserTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasOpensearchUserTimeouts)(nil)).Elem()
}

func (i DbaasOpensearchUserTimeoutsArgs) ToDbaasOpensearchUserTimeoutsOutput() DbaasOpensearchUserTimeoutsOutput {
	return i.ToDbaasOpensearchUserTimeoutsOutputWithContext(context.Background())
}

func (i DbaasOpensearchUserTimeoutsArgs) ToDbaasOpensearchUserTimeoutsOutputWithContext(ctx context.Context) DbaasOpensearchUserTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasOpensearchUserTimeoutsOutput)
}

func (i DbaasOpensearchUserTimeoutsArgs) ToDbaasOpensearchUserTimeoutsPtrOutput() DbaasOpensearchUserTimeoutsPtrOutput {
	return i.ToDbaasOpensearchUserTimeoutsPtrOutputWithContext(context.Background())
}

func (i DbaasOpensearchUserTimeoutsArgs) ToDbaasOpensearchUserTimeoutsPtrOutputWithContext(ctx context.Context) DbaasOpensearchUserTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasOpensearchUserTimeoutsOutput).ToDbaasOpensearchUserTimeoutsPtrOutputWithContext(ctx)
}

// DbaasOpensearchUserTimeoutsPtrInput is an input type that accepts DbaasOpensearchUserTimeoutsArgs, DbaasOpensearchUserTimeoutsPtr and DbaasOpensearchUserTimeoutsPtrOutput values.
// You can construct a concrete instance of `DbaasOpensearchUserTimeoutsPtrInput` via:
//
//	        DbaasOpensearchUserTimeoutsArgs{...}
//
//	or:
//
//	        nil
type DbaasOpensearchUserTimeoutsPtrInput interface {
	pulumi.Input

	ToDbaasOpensearchUserTimeoutsPtrOutput() DbaasOpensearchUserTimeoutsPtrOutput
	ToDbaasOpensearchUserTimeoutsPtrOutputWithContext(context.Context) DbaasOpensearchUserTimeoutsPtrOutput
}

type dbaasOpensearchUserTimeoutsPtrType DbaasOpensearchUserTimeoutsArgs

func DbaasOpensearchUserTimeoutsPtr(v *DbaasOpensearchUserTimeoutsArgs) DbaasOpensearchUserTimeoutsPtrInput {
	return (*dbaasOpensearchUserTimeoutsPtrType)(v)
}

func (*dbaasOpensearchUserTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasOpensearchUserTimeouts)(nil)).Elem()
}

func (i *dbaasOpensearchUserTimeoutsPtrType) ToDbaasOpensearchUserTimeoutsPtrOutput() DbaasOpensearchUserTimeoutsPtrOutput {
	return i.ToDbaasOpensearchUserTimeoutsPtrOutputWithContext(context.Background())
}

func (i *dbaasOpensearchUserTimeoutsPtrType) ToDbaasOpensearchUserTimeoutsPtrOutputWithContext(ctx context.Context) DbaasOpensearchUserTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasOpensearchUserTimeoutsPtrOutput)
}

type DbaasOpensearchUserTimeoutsOutput struct{ *pulumi.OutputState }

func (DbaasOpensearchUserTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasOpensearchUserTimeouts)(nil)).Elem()
}

func (o DbaasOpensearchUserTimeoutsOutput) ToDbaasOpensearchUserTimeoutsOutput() DbaasOpensearchUserTimeoutsOutput {
	return o
}

func (o DbaasOpensearchUserTimeoutsOutput) ToDbaasOpensearchUserTimeoutsOutputWithContext(ctx context.Context) DbaasOpensearchUserTimeoutsOutput {
	return o
}

func (o DbaasOpensearchUserTimeoutsOutput) ToDbaasOpensearchUserTimeoutsPtrOutput() DbaasOpensearchUserTimeoutsPtrOutput {
	return o.ToDbaasOpensearchUserTimeoutsPtrOutputWithContext(context.Background())
}

func (o DbaasOpensearchUserTimeoutsOutput) ToDbaasOpensearchUserTimeoutsPtrOutputWithContext(ctx context.Context) DbaasOpensearchUserTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbaasOpensearchUserTimeouts) *DbaasOpensearchUserTimeouts {
		return &v
	}).(DbaasOpensearchUserTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasOpensearchUserTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasOpensearchUserTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o DbaasOpensearchUserTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasOpensearchUserTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o DbaasOpensearchUserTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasOpensearchUserTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasOpensearchUserTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasOpensearchUserTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type DbaasOpensearchUserTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (DbaasOpensearchUserTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasOpensearchUserTimeouts)(nil)).Elem()
}

func (o DbaasOpensearchUserTimeoutsPtrOutput) ToDbaasOpensearchUserTimeoutsPtrOutput() DbaasOpensearchUserTimeoutsPtrOutput {
	return o
}

func (o DbaasOpensearchUserTimeoutsPtrOutput) ToDbaasOpensearchUserTimeoutsPtrOutputWithContext(ctx context.Context) DbaasOpensearchUserTimeoutsPtrOutput {
	return o
}

func (o DbaasOpensearchUserTimeoutsPtrOutput) Elem() DbaasOpensearchUserTimeoutsOutput {
	return o.ApplyT(func(v *DbaasOpensearchUserTimeouts) DbaasOpensearchUserTimeouts {
		if v != nil {
			return *v
		}
		var ret DbaasOpensearchUserTimeouts
		return ret
	}).(DbaasOpensearchUserTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasOpensearchUserTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasOpensearchUserTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o DbaasOpensearchUserTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasOpensearchUserTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o DbaasOpensearchUserTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasOpensearchUserTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasOpensearchUserTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasOpensearchUserTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type DbaasPg struct {
	// A custom administrator account password (may only be set at creation time).
	AdminPassword *string `pulumi:"adminPassword"`
	// A custom administrator account username (may only be set at creation time).
	AdminUsername *string `pulumi:"adminUsername"`
	// The automated backup schedule (`HH:MM`).
	BackupSchedule *string `pulumi:"backupSchedule"`
	// A list of CIDR blocks to allow incoming connections from.
	IpFilters []string `pulumi:"ipFilters"`
	// PostgreSQL configuration settings in JSON format (`exo dbaas type show pg --settings=pg` for reference).
	PgSettings *string `pulumi:"pgSettings"`
	// PgBouncer configuration settings in JSON format (`exo dbaas type show pg --settings=pgbouncer` for reference).
	PgbouncerSettings *string `pulumi:"pgbouncerSettings"`
	// pglookout configuration settings in JSON format (`exo dbaas type show pg --settings=pglookout` for reference).
	PglookoutSettings *string `pulumi:"pglookoutSettings"`
	// PostgreSQL major version (`exo dbaas type show pg` for reference; may only be set at creation time).
	Version *string `pulumi:"version"`
}

// DbaasPgInput is an input type that accepts DbaasPgArgs and DbaasPgOutput values.
// You can construct a concrete instance of `DbaasPgInput` via:
//
//	DbaasPgArgs{...}
type DbaasPgInput interface {
	pulumi.Input

	ToDbaasPgOutput() DbaasPgOutput
	ToDbaasPgOutputWithContext(context.Context) DbaasPgOutput
}

type DbaasPgArgs struct {
	// A custom administrator account password (may only be set at creation time).
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// A custom administrator account username (may only be set at creation time).
	AdminUsername pulumi.StringPtrInput `pulumi:"adminUsername"`
	// The automated backup schedule (`HH:MM`).
	BackupSchedule pulumi.StringPtrInput `pulumi:"backupSchedule"`
	// A list of CIDR blocks to allow incoming connections from.
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// PostgreSQL configuration settings in JSON format (`exo dbaas type show pg --settings=pg` for reference).
	PgSettings pulumi.StringPtrInput `pulumi:"pgSettings"`
	// PgBouncer configuration settings in JSON format (`exo dbaas type show pg --settings=pgbouncer` for reference).
	PgbouncerSettings pulumi.StringPtrInput `pulumi:"pgbouncerSettings"`
	// pglookout configuration settings in JSON format (`exo dbaas type show pg --settings=pglookout` for reference).
	PglookoutSettings pulumi.StringPtrInput `pulumi:"pglookoutSettings"`
	// PostgreSQL major version (`exo dbaas type show pg` for reference; may only be set at creation time).
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (DbaasPgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasPg)(nil)).Elem()
}

func (i DbaasPgArgs) ToDbaasPgOutput() DbaasPgOutput {
	return i.ToDbaasPgOutputWithContext(context.Background())
}

func (i DbaasPgArgs) ToDbaasPgOutputWithContext(ctx context.Context) DbaasPgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasPgOutput)
}

func (i DbaasPgArgs) ToDbaasPgPtrOutput() DbaasPgPtrOutput {
	return i.ToDbaasPgPtrOutputWithContext(context.Background())
}

func (i DbaasPgArgs) ToDbaasPgPtrOutputWithContext(ctx context.Context) DbaasPgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasPgOutput).ToDbaasPgPtrOutputWithContext(ctx)
}

// DbaasPgPtrInput is an input type that accepts DbaasPgArgs, DbaasPgPtr and DbaasPgPtrOutput values.
// You can construct a concrete instance of `DbaasPgPtrInput` via:
//
//	        DbaasPgArgs{...}
//
//	or:
//
//	        nil
type DbaasPgPtrInput interface {
	pulumi.Input

	ToDbaasPgPtrOutput() DbaasPgPtrOutput
	ToDbaasPgPtrOutputWithContext(context.Context) DbaasPgPtrOutput
}

type dbaasPgPtrType DbaasPgArgs

func DbaasPgPtr(v *DbaasPgArgs) DbaasPgPtrInput {
	return (*dbaasPgPtrType)(v)
}

func (*dbaasPgPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasPg)(nil)).Elem()
}

func (i *dbaasPgPtrType) ToDbaasPgPtrOutput() DbaasPgPtrOutput {
	return i.ToDbaasPgPtrOutputWithContext(context.Background())
}

func (i *dbaasPgPtrType) ToDbaasPgPtrOutputWithContext(ctx context.Context) DbaasPgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasPgPtrOutput)
}

type DbaasPgOutput struct{ *pulumi.OutputState }

func (DbaasPgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasPg)(nil)).Elem()
}

func (o DbaasPgOutput) ToDbaasPgOutput() DbaasPgOutput {
	return o
}

func (o DbaasPgOutput) ToDbaasPgOutputWithContext(ctx context.Context) DbaasPgOutput {
	return o
}

func (o DbaasPgOutput) ToDbaasPgPtrOutput() DbaasPgPtrOutput {
	return o.ToDbaasPgPtrOutputWithContext(context.Background())
}

func (o DbaasPgOutput) ToDbaasPgPtrOutputWithContext(ctx context.Context) DbaasPgPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbaasPg) *DbaasPg {
		return &v
	}).(DbaasPgPtrOutput)
}

// A custom administrator account password (may only be set at creation time).
func (o DbaasPgOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasPg) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// A custom administrator account username (may only be set at creation time).
func (o DbaasPgOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasPg) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

// The automated backup schedule (`HH:MM`).
func (o DbaasPgOutput) BackupSchedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasPg) *string { return v.BackupSchedule }).(pulumi.StringPtrOutput)
}

// A list of CIDR blocks to allow incoming connections from.
func (o DbaasPgOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DbaasPg) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// PostgreSQL configuration settings in JSON format (`exo dbaas type show pg --settings=pg` for reference).
func (o DbaasPgOutput) PgSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasPg) *string { return v.PgSettings }).(pulumi.StringPtrOutput)
}

// PgBouncer configuration settings in JSON format (`exo dbaas type show pg --settings=pgbouncer` for reference).
func (o DbaasPgOutput) PgbouncerSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasPg) *string { return v.PgbouncerSettings }).(pulumi.StringPtrOutput)
}

// pglookout configuration settings in JSON format (`exo dbaas type show pg --settings=pglookout` for reference).
func (o DbaasPgOutput) PglookoutSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasPg) *string { return v.PglookoutSettings }).(pulumi.StringPtrOutput)
}

// PostgreSQL major version (`exo dbaas type show pg` for reference; may only be set at creation time).
func (o DbaasPgOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasPg) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type DbaasPgPtrOutput struct{ *pulumi.OutputState }

func (DbaasPgPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasPg)(nil)).Elem()
}

func (o DbaasPgPtrOutput) ToDbaasPgPtrOutput() DbaasPgPtrOutput {
	return o
}

func (o DbaasPgPtrOutput) ToDbaasPgPtrOutputWithContext(ctx context.Context) DbaasPgPtrOutput {
	return o
}

func (o DbaasPgPtrOutput) Elem() DbaasPgOutput {
	return o.ApplyT(func(v *DbaasPg) DbaasPg {
		if v != nil {
			return *v
		}
		var ret DbaasPg
		return ret
	}).(DbaasPgOutput)
}

// A custom administrator account password (may only be set at creation time).
func (o DbaasPgPtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasPg) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// A custom administrator account username (may only be set at creation time).
func (o DbaasPgPtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasPg) *string {
		if v == nil {
			return nil
		}
		return v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// The automated backup schedule (`HH:MM`).
func (o DbaasPgPtrOutput) BackupSchedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasPg) *string {
		if v == nil {
			return nil
		}
		return v.BackupSchedule
	}).(pulumi.StringPtrOutput)
}

// A list of CIDR blocks to allow incoming connections from.
func (o DbaasPgPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DbaasPg) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// PostgreSQL configuration settings in JSON format (`exo dbaas type show pg --settings=pg` for reference).
func (o DbaasPgPtrOutput) PgSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasPg) *string {
		if v == nil {
			return nil
		}
		return v.PgSettings
	}).(pulumi.StringPtrOutput)
}

// PgBouncer configuration settings in JSON format (`exo dbaas type show pg --settings=pgbouncer` for reference).
func (o DbaasPgPtrOutput) PgbouncerSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasPg) *string {
		if v == nil {
			return nil
		}
		return v.PgbouncerSettings
	}).(pulumi.StringPtrOutput)
}

// pglookout configuration settings in JSON format (`exo dbaas type show pg --settings=pglookout` for reference).
func (o DbaasPgPtrOutput) PglookoutSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasPg) *string {
		if v == nil {
			return nil
		}
		return v.PglookoutSettings
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL major version (`exo dbaas type show pg` for reference; may only be set at creation time).
func (o DbaasPgPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasPg) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type DbaasPgDatabaseTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// DbaasPgDatabaseTimeoutsInput is an input type that accepts DbaasPgDatabaseTimeoutsArgs and DbaasPgDatabaseTimeoutsOutput values.
// You can construct a concrete instance of `DbaasPgDatabaseTimeoutsInput` via:
//
//	DbaasPgDatabaseTimeoutsArgs{...}
type DbaasPgDatabaseTimeoutsInput interface {
	pulumi.Input

	ToDbaasPgDatabaseTimeoutsOutput() DbaasPgDatabaseTimeoutsOutput
	ToDbaasPgDatabaseTimeoutsOutputWithContext(context.Context) DbaasPgDatabaseTimeoutsOutput
}

type DbaasPgDatabaseTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (DbaasPgDatabaseTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasPgDatabaseTimeouts)(nil)).Elem()
}

func (i DbaasPgDatabaseTimeoutsArgs) ToDbaasPgDatabaseTimeoutsOutput() DbaasPgDatabaseTimeoutsOutput {
	return i.ToDbaasPgDatabaseTimeoutsOutputWithContext(context.Background())
}

func (i DbaasPgDatabaseTimeoutsArgs) ToDbaasPgDatabaseTimeoutsOutputWithContext(ctx context.Context) DbaasPgDatabaseTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasPgDatabaseTimeoutsOutput)
}

func (i DbaasPgDatabaseTimeoutsArgs) ToDbaasPgDatabaseTimeoutsPtrOutput() DbaasPgDatabaseTimeoutsPtrOutput {
	return i.ToDbaasPgDatabaseTimeoutsPtrOutputWithContext(context.Background())
}

func (i DbaasPgDatabaseTimeoutsArgs) ToDbaasPgDatabaseTimeoutsPtrOutputWithContext(ctx context.Context) DbaasPgDatabaseTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasPgDatabaseTimeoutsOutput).ToDbaasPgDatabaseTimeoutsPtrOutputWithContext(ctx)
}

// DbaasPgDatabaseTimeoutsPtrInput is an input type that accepts DbaasPgDatabaseTimeoutsArgs, DbaasPgDatabaseTimeoutsPtr and DbaasPgDatabaseTimeoutsPtrOutput values.
// You can construct a concrete instance of `DbaasPgDatabaseTimeoutsPtrInput` via:
//
//	        DbaasPgDatabaseTimeoutsArgs{...}
//
//	or:
//
//	        nil
type DbaasPgDatabaseTimeoutsPtrInput interface {
	pulumi.Input

	ToDbaasPgDatabaseTimeoutsPtrOutput() DbaasPgDatabaseTimeoutsPtrOutput
	ToDbaasPgDatabaseTimeoutsPtrOutputWithContext(context.Context) DbaasPgDatabaseTimeoutsPtrOutput
}

type dbaasPgDatabaseTimeoutsPtrType DbaasPgDatabaseTimeoutsArgs

func DbaasPgDatabaseTimeoutsPtr(v *DbaasPgDatabaseTimeoutsArgs) DbaasPgDatabaseTimeoutsPtrInput {
	return (*dbaasPgDatabaseTimeoutsPtrType)(v)
}

func (*dbaasPgDatabaseTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasPgDatabaseTimeouts)(nil)).Elem()
}

func (i *dbaasPgDatabaseTimeoutsPtrType) ToDbaasPgDatabaseTimeoutsPtrOutput() DbaasPgDatabaseTimeoutsPtrOutput {
	return i.ToDbaasPgDatabaseTimeoutsPtrOutputWithContext(context.Background())
}

func (i *dbaasPgDatabaseTimeoutsPtrType) ToDbaasPgDatabaseTimeoutsPtrOutputWithContext(ctx context.Context) DbaasPgDatabaseTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasPgDatabaseTimeoutsPtrOutput)
}

type DbaasPgDatabaseTimeoutsOutput struct{ *pulumi.OutputState }

func (DbaasPgDatabaseTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasPgDatabaseTimeouts)(nil)).Elem()
}

func (o DbaasPgDatabaseTimeoutsOutput) ToDbaasPgDatabaseTimeoutsOutput() DbaasPgDatabaseTimeoutsOutput {
	return o
}

func (o DbaasPgDatabaseTimeoutsOutput) ToDbaasPgDatabaseTimeoutsOutputWithContext(ctx context.Context) DbaasPgDatabaseTimeoutsOutput {
	return o
}

func (o DbaasPgDatabaseTimeoutsOutput) ToDbaasPgDatabaseTimeoutsPtrOutput() DbaasPgDatabaseTimeoutsPtrOutput {
	return o.ToDbaasPgDatabaseTimeoutsPtrOutputWithContext(context.Background())
}

func (o DbaasPgDatabaseTimeoutsOutput) ToDbaasPgDatabaseTimeoutsPtrOutputWithContext(ctx context.Context) DbaasPgDatabaseTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbaasPgDatabaseTimeouts) *DbaasPgDatabaseTimeouts {
		return &v
	}).(DbaasPgDatabaseTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasPgDatabaseTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasPgDatabaseTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o DbaasPgDatabaseTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasPgDatabaseTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o DbaasPgDatabaseTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasPgDatabaseTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasPgDatabaseTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasPgDatabaseTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type DbaasPgDatabaseTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (DbaasPgDatabaseTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasPgDatabaseTimeouts)(nil)).Elem()
}

func (o DbaasPgDatabaseTimeoutsPtrOutput) ToDbaasPgDatabaseTimeoutsPtrOutput() DbaasPgDatabaseTimeoutsPtrOutput {
	return o
}

func (o DbaasPgDatabaseTimeoutsPtrOutput) ToDbaasPgDatabaseTimeoutsPtrOutputWithContext(ctx context.Context) DbaasPgDatabaseTimeoutsPtrOutput {
	return o
}

func (o DbaasPgDatabaseTimeoutsPtrOutput) Elem() DbaasPgDatabaseTimeoutsOutput {
	return o.ApplyT(func(v *DbaasPgDatabaseTimeouts) DbaasPgDatabaseTimeouts {
		if v != nil {
			return *v
		}
		var ret DbaasPgDatabaseTimeouts
		return ret
	}).(DbaasPgDatabaseTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasPgDatabaseTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasPgDatabaseTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o DbaasPgDatabaseTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasPgDatabaseTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o DbaasPgDatabaseTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasPgDatabaseTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasPgDatabaseTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasPgDatabaseTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type DbaasPgUserTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// DbaasPgUserTimeoutsInput is an input type that accepts DbaasPgUserTimeoutsArgs and DbaasPgUserTimeoutsOutput values.
// You can construct a concrete instance of `DbaasPgUserTimeoutsInput` via:
//
//	DbaasPgUserTimeoutsArgs{...}
type DbaasPgUserTimeoutsInput interface {
	pulumi.Input

	ToDbaasPgUserTimeoutsOutput() DbaasPgUserTimeoutsOutput
	ToDbaasPgUserTimeoutsOutputWithContext(context.Context) DbaasPgUserTimeoutsOutput
}

type DbaasPgUserTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (DbaasPgUserTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasPgUserTimeouts)(nil)).Elem()
}

func (i DbaasPgUserTimeoutsArgs) ToDbaasPgUserTimeoutsOutput() DbaasPgUserTimeoutsOutput {
	return i.ToDbaasPgUserTimeoutsOutputWithContext(context.Background())
}

func (i DbaasPgUserTimeoutsArgs) ToDbaasPgUserTimeoutsOutputWithContext(ctx context.Context) DbaasPgUserTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasPgUserTimeoutsOutput)
}

func (i DbaasPgUserTimeoutsArgs) ToDbaasPgUserTimeoutsPtrOutput() DbaasPgUserTimeoutsPtrOutput {
	return i.ToDbaasPgUserTimeoutsPtrOutputWithContext(context.Background())
}

func (i DbaasPgUserTimeoutsArgs) ToDbaasPgUserTimeoutsPtrOutputWithContext(ctx context.Context) DbaasPgUserTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasPgUserTimeoutsOutput).ToDbaasPgUserTimeoutsPtrOutputWithContext(ctx)
}

// DbaasPgUserTimeoutsPtrInput is an input type that accepts DbaasPgUserTimeoutsArgs, DbaasPgUserTimeoutsPtr and DbaasPgUserTimeoutsPtrOutput values.
// You can construct a concrete instance of `DbaasPgUserTimeoutsPtrInput` via:
//
//	        DbaasPgUserTimeoutsArgs{...}
//
//	or:
//
//	        nil
type DbaasPgUserTimeoutsPtrInput interface {
	pulumi.Input

	ToDbaasPgUserTimeoutsPtrOutput() DbaasPgUserTimeoutsPtrOutput
	ToDbaasPgUserTimeoutsPtrOutputWithContext(context.Context) DbaasPgUserTimeoutsPtrOutput
}

type dbaasPgUserTimeoutsPtrType DbaasPgUserTimeoutsArgs

func DbaasPgUserTimeoutsPtr(v *DbaasPgUserTimeoutsArgs) DbaasPgUserTimeoutsPtrInput {
	return (*dbaasPgUserTimeoutsPtrType)(v)
}

func (*dbaasPgUserTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasPgUserTimeouts)(nil)).Elem()
}

func (i *dbaasPgUserTimeoutsPtrType) ToDbaasPgUserTimeoutsPtrOutput() DbaasPgUserTimeoutsPtrOutput {
	return i.ToDbaasPgUserTimeoutsPtrOutputWithContext(context.Background())
}

func (i *dbaasPgUserTimeoutsPtrType) ToDbaasPgUserTimeoutsPtrOutputWithContext(ctx context.Context) DbaasPgUserTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasPgUserTimeoutsPtrOutput)
}

type DbaasPgUserTimeoutsOutput struct{ *pulumi.OutputState }

func (DbaasPgUserTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasPgUserTimeouts)(nil)).Elem()
}

func (o DbaasPgUserTimeoutsOutput) ToDbaasPgUserTimeoutsOutput() DbaasPgUserTimeoutsOutput {
	return o
}

func (o DbaasPgUserTimeoutsOutput) ToDbaasPgUserTimeoutsOutputWithContext(ctx context.Context) DbaasPgUserTimeoutsOutput {
	return o
}

func (o DbaasPgUserTimeoutsOutput) ToDbaasPgUserTimeoutsPtrOutput() DbaasPgUserTimeoutsPtrOutput {
	return o.ToDbaasPgUserTimeoutsPtrOutputWithContext(context.Background())
}

func (o DbaasPgUserTimeoutsOutput) ToDbaasPgUserTimeoutsPtrOutputWithContext(ctx context.Context) DbaasPgUserTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbaasPgUserTimeouts) *DbaasPgUserTimeouts {
		return &v
	}).(DbaasPgUserTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasPgUserTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasPgUserTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o DbaasPgUserTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasPgUserTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o DbaasPgUserTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasPgUserTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasPgUserTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasPgUserTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type DbaasPgUserTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (DbaasPgUserTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasPgUserTimeouts)(nil)).Elem()
}

func (o DbaasPgUserTimeoutsPtrOutput) ToDbaasPgUserTimeoutsPtrOutput() DbaasPgUserTimeoutsPtrOutput {
	return o
}

func (o DbaasPgUserTimeoutsPtrOutput) ToDbaasPgUserTimeoutsPtrOutputWithContext(ctx context.Context) DbaasPgUserTimeoutsPtrOutput {
	return o
}

func (o DbaasPgUserTimeoutsPtrOutput) Elem() DbaasPgUserTimeoutsOutput {
	return o.ApplyT(func(v *DbaasPgUserTimeouts) DbaasPgUserTimeouts {
		if v != nil {
			return *v
		}
		var ret DbaasPgUserTimeouts
		return ret
	}).(DbaasPgUserTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasPgUserTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasPgUserTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o DbaasPgUserTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasPgUserTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o DbaasPgUserTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasPgUserTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasPgUserTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasPgUserTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type DbaasTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// DbaasTimeoutsInput is an input type that accepts DbaasTimeoutsArgs and DbaasTimeoutsOutput values.
// You can construct a concrete instance of `DbaasTimeoutsInput` via:
//
//	DbaasTimeoutsArgs{...}
type DbaasTimeoutsInput interface {
	pulumi.Input

	ToDbaasTimeoutsOutput() DbaasTimeoutsOutput
	ToDbaasTimeoutsOutputWithContext(context.Context) DbaasTimeoutsOutput
}

type DbaasTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (DbaasTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasTimeouts)(nil)).Elem()
}

func (i DbaasTimeoutsArgs) ToDbaasTimeoutsOutput() DbaasTimeoutsOutput {
	return i.ToDbaasTimeoutsOutputWithContext(context.Background())
}

func (i DbaasTimeoutsArgs) ToDbaasTimeoutsOutputWithContext(ctx context.Context) DbaasTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasTimeoutsOutput)
}

func (i DbaasTimeoutsArgs) ToDbaasTimeoutsPtrOutput() DbaasTimeoutsPtrOutput {
	return i.ToDbaasTimeoutsPtrOutputWithContext(context.Background())
}

func (i DbaasTimeoutsArgs) ToDbaasTimeoutsPtrOutputWithContext(ctx context.Context) DbaasTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasTimeoutsOutput).ToDbaasTimeoutsPtrOutputWithContext(ctx)
}

// DbaasTimeoutsPtrInput is an input type that accepts DbaasTimeoutsArgs, DbaasTimeoutsPtr and DbaasTimeoutsPtrOutput values.
// You can construct a concrete instance of `DbaasTimeoutsPtrInput` via:
//
//	        DbaasTimeoutsArgs{...}
//
//	or:
//
//	        nil
type DbaasTimeoutsPtrInput interface {
	pulumi.Input

	ToDbaasTimeoutsPtrOutput() DbaasTimeoutsPtrOutput
	ToDbaasTimeoutsPtrOutputWithContext(context.Context) DbaasTimeoutsPtrOutput
}

type dbaasTimeoutsPtrType DbaasTimeoutsArgs

func DbaasTimeoutsPtr(v *DbaasTimeoutsArgs) DbaasTimeoutsPtrInput {
	return (*dbaasTimeoutsPtrType)(v)
}

func (*dbaasTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasTimeouts)(nil)).Elem()
}

func (i *dbaasTimeoutsPtrType) ToDbaasTimeoutsPtrOutput() DbaasTimeoutsPtrOutput {
	return i.ToDbaasTimeoutsPtrOutputWithContext(context.Background())
}

func (i *dbaasTimeoutsPtrType) ToDbaasTimeoutsPtrOutputWithContext(ctx context.Context) DbaasTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasTimeoutsPtrOutput)
}

type DbaasTimeoutsOutput struct{ *pulumi.OutputState }

func (DbaasTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasTimeouts)(nil)).Elem()
}

func (o DbaasTimeoutsOutput) ToDbaasTimeoutsOutput() DbaasTimeoutsOutput {
	return o
}

func (o DbaasTimeoutsOutput) ToDbaasTimeoutsOutputWithContext(ctx context.Context) DbaasTimeoutsOutput {
	return o
}

func (o DbaasTimeoutsOutput) ToDbaasTimeoutsPtrOutput() DbaasTimeoutsPtrOutput {
	return o.ToDbaasTimeoutsPtrOutputWithContext(context.Background())
}

func (o DbaasTimeoutsOutput) ToDbaasTimeoutsPtrOutputWithContext(ctx context.Context) DbaasTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbaasTimeouts) *DbaasTimeouts {
		return &v
	}).(DbaasTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o DbaasTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o DbaasTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type DbaasTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (DbaasTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasTimeouts)(nil)).Elem()
}

func (o DbaasTimeoutsPtrOutput) ToDbaasTimeoutsPtrOutput() DbaasTimeoutsPtrOutput {
	return o
}

func (o DbaasTimeoutsPtrOutput) ToDbaasTimeoutsPtrOutputWithContext(ctx context.Context) DbaasTimeoutsPtrOutput {
	return o
}

func (o DbaasTimeoutsPtrOutput) Elem() DbaasTimeoutsOutput {
	return o.ApplyT(func(v *DbaasTimeouts) DbaasTimeouts {
		if v != nil {
			return *v
		}
		var ret DbaasTimeouts
		return ret
	}).(DbaasTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o DbaasTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o DbaasTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DbaasTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type DbaasValkey struct {
	// A list of CIDR blocks to allow incoming connections from.
	IpFilters []string `pulumi:"ipFilters"`
	// Valkey configuration settings in JSON format (`exo dbaas type show valkey --settings=valkey` for reference).
	ValkeySettings *string `pulumi:"valkeySettings"`
}

// DbaasValkeyInput is an input type that accepts DbaasValkeyArgs and DbaasValkeyOutput values.
// You can construct a concrete instance of `DbaasValkeyInput` via:
//
//	DbaasValkeyArgs{...}
type DbaasValkeyInput interface {
	pulumi.Input

	ToDbaasValkeyOutput() DbaasValkeyOutput
	ToDbaasValkeyOutputWithContext(context.Context) DbaasValkeyOutput
}

type DbaasValkeyArgs struct {
	// A list of CIDR blocks to allow incoming connections from.
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Valkey configuration settings in JSON format (`exo dbaas type show valkey --settings=valkey` for reference).
	ValkeySettings pulumi.StringPtrInput `pulumi:"valkeySettings"`
}

func (DbaasValkeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasValkey)(nil)).Elem()
}

func (i DbaasValkeyArgs) ToDbaasValkeyOutput() DbaasValkeyOutput {
	return i.ToDbaasValkeyOutputWithContext(context.Background())
}

func (i DbaasValkeyArgs) ToDbaasValkeyOutputWithContext(ctx context.Context) DbaasValkeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasValkeyOutput)
}

func (i DbaasValkeyArgs) ToDbaasValkeyPtrOutput() DbaasValkeyPtrOutput {
	return i.ToDbaasValkeyPtrOutputWithContext(context.Background())
}

func (i DbaasValkeyArgs) ToDbaasValkeyPtrOutputWithContext(ctx context.Context) DbaasValkeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasValkeyOutput).ToDbaasValkeyPtrOutputWithContext(ctx)
}

// DbaasValkeyPtrInput is an input type that accepts DbaasValkeyArgs, DbaasValkeyPtr and DbaasValkeyPtrOutput values.
// You can construct a concrete instance of `DbaasValkeyPtrInput` via:
//
//	        DbaasValkeyArgs{...}
//
//	or:
//
//	        nil
type DbaasValkeyPtrInput interface {
	pulumi.Input

	ToDbaasValkeyPtrOutput() DbaasValkeyPtrOutput
	ToDbaasValkeyPtrOutputWithContext(context.Context) DbaasValkeyPtrOutput
}

type dbaasValkeyPtrType DbaasValkeyArgs

func DbaasValkeyPtr(v *DbaasValkeyArgs) DbaasValkeyPtrInput {
	return (*dbaasValkeyPtrType)(v)
}

func (*dbaasValkeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasValkey)(nil)).Elem()
}

func (i *dbaasValkeyPtrType) ToDbaasValkeyPtrOutput() DbaasValkeyPtrOutput {
	return i.ToDbaasValkeyPtrOutputWithContext(context.Background())
}

func (i *dbaasValkeyPtrType) ToDbaasValkeyPtrOutputWithContext(ctx context.Context) DbaasValkeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasValkeyPtrOutput)
}

type DbaasValkeyOutput struct{ *pulumi.OutputState }

func (DbaasValkeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbaasValkey)(nil)).Elem()
}

func (o DbaasValkeyOutput) ToDbaasValkeyOutput() DbaasValkeyOutput {
	return o
}

func (o DbaasValkeyOutput) ToDbaasValkeyOutputWithContext(ctx context.Context) DbaasValkeyOutput {
	return o
}

func (o DbaasValkeyOutput) ToDbaasValkeyPtrOutput() DbaasValkeyPtrOutput {
	return o.ToDbaasValkeyPtrOutputWithContext(context.Background())
}

func (o DbaasValkeyOutput) ToDbaasValkeyPtrOutputWithContext(ctx context.Context) DbaasValkeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbaasValkey) *DbaasValkey {
		return &v
	}).(DbaasValkeyPtrOutput)
}

// A list of CIDR blocks to allow incoming connections from.
func (o DbaasValkeyOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DbaasValkey) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Valkey configuration settings in JSON format (`exo dbaas type show valkey --settings=valkey` for reference).
func (o DbaasValkeyOutput) ValkeySettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbaasValkey) *string { return v.ValkeySettings }).(pulumi.StringPtrOutput)
}

type DbaasValkeyPtrOutput struct{ *pulumi.OutputState }

func (DbaasValkeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasValkey)(nil)).Elem()
}

func (o DbaasValkeyPtrOutput) ToDbaasValkeyPtrOutput() DbaasValkeyPtrOutput {
	return o
}

func (o DbaasValkeyPtrOutput) ToDbaasValkeyPtrOutputWithContext(ctx context.Context) DbaasValkeyPtrOutput {
	return o
}

func (o DbaasValkeyPtrOutput) Elem() DbaasValkeyOutput {
	return o.ApplyT(func(v *DbaasValkey) DbaasValkey {
		if v != nil {
			return *v
		}
		var ret DbaasValkey
		return ret
	}).(DbaasValkeyOutput)
}

// A list of CIDR blocks to allow incoming connections from.
func (o DbaasValkeyPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DbaasValkey) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// Valkey configuration settings in JSON format (`exo dbaas type show valkey --settings=valkey` for reference).
func (o DbaasValkeyPtrOutput) ValkeySettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasValkey) *string {
		if v == nil {
			return nil
		}
		return v.ValkeySettings
	}).(pulumi.StringPtrOutput)
}

type ElasticIpHealthcheck struct {
	// The healthcheck interval (seconds; must be between `5` and `300`; default: `10`).
	Interval *int `pulumi:"interval"`
	// The healthcheck mode (`tcp`, `http` or `https`; may only be set at creation time).
	Mode string `pulumi:"mode"`
	// The healthcheck target port (must be between `1` and `65535`).
	Port int `pulumi:"port"`
	// The number of failed healthcheck attempts before considering the target unhealthy (must be between `1` and `20`; default: `2`).
	StrikesFail *int `pulumi:"strikesFail"`
	// The number of successful healthcheck attempts before considering the target healthy (must be between `1` and `20`; default: `3`).
	StrikesOk *int `pulumi:"strikesOk"`
	// The time before considering a healthcheck probing failed (seconds; must be between `2` and `60`; default: `3`).
	Timeout *int `pulumi:"timeout"`
	// Disable TLS certificate verification for healthcheck in `https` mode (boolean; default: `false`).
	TlsSkipVerify *bool `pulumi:"tlsSkipVerify"`
	// The healthcheck server name to present with SNI in `https` mode.
	TlsSni *string `pulumi:"tlsSni"`
	// The healthcheck target URI (required in `http(s)` modes).
	Uri *string `pulumi:"uri"`
}

// ElasticIpHealthcheckInput is an input type that accepts ElasticIpHealthcheckArgs and ElasticIpHealthcheckOutput values.
// You can construct a concrete instance of `ElasticIpHealthcheckInput` via:
//
//	ElasticIpHealthcheckArgs{...}
type ElasticIpHealthcheckInput interface {
	pulumi.Input

	ToElasticIpHealthcheckOutput() ElasticIpHealthcheckOutput
	ToElasticIpHealthcheckOutputWithContext(context.Context) ElasticIpHealthcheckOutput
}

type ElasticIpHealthcheckArgs struct {
	// The healthcheck interval (seconds; must be between `5` and `300`; default: `10`).
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// The healthcheck mode (`tcp`, `http` or `https`; may only be set at creation time).
	Mode pulumi.StringInput `pulumi:"mode"`
	// The healthcheck target port (must be between `1` and `65535`).
	Port pulumi.IntInput `pulumi:"port"`
	// The number of failed healthcheck attempts before considering the target unhealthy (must be between `1` and `20`; default: `2`).
	StrikesFail pulumi.IntPtrInput `pulumi:"strikesFail"`
	// The number of successful healthcheck attempts before considering the target healthy (must be between `1` and `20`; default: `3`).
	StrikesOk pulumi.IntPtrInput `pulumi:"strikesOk"`
	// The time before considering a healthcheck probing failed (seconds; must be between `2` and `60`; default: `3`).
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// Disable TLS certificate verification for healthcheck in `https` mode (boolean; default: `false`).
	TlsSkipVerify pulumi.BoolPtrInput `pulumi:"tlsSkipVerify"`
	// The healthcheck server name to present with SNI in `https` mode.
	TlsSni pulumi.StringPtrInput `pulumi:"tlsSni"`
	// The healthcheck target URI (required in `http(s)` modes).
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (ElasticIpHealthcheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticIpHealthcheck)(nil)).Elem()
}

func (i ElasticIpHealthcheckArgs) ToElasticIpHealthcheckOutput() ElasticIpHealthcheckOutput {
	return i.ToElasticIpHealthcheckOutputWithContext(context.Background())
}

func (i ElasticIpHealthcheckArgs) ToElasticIpHealthcheckOutputWithContext(ctx context.Context) ElasticIpHealthcheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticIpHealthcheckOutput)
}

func (i ElasticIpHealthcheckArgs) ToElasticIpHealthcheckPtrOutput() ElasticIpHealthcheckPtrOutput {
	return i.ToElasticIpHealthcheckPtrOutputWithContext(context.Background())
}

func (i ElasticIpHealthcheckArgs) ToElasticIpHealthcheckPtrOutputWithContext(ctx context.Context) ElasticIpHealthcheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticIpHealthcheckOutput).ToElasticIpHealthcheckPtrOutputWithContext(ctx)
}

// ElasticIpHealthcheckPtrInput is an input type that accepts ElasticIpHealthcheckArgs, ElasticIpHealthcheckPtr and ElasticIpHealthcheckPtrOutput values.
// You can construct a concrete instance of `ElasticIpHealthcheckPtrInput` via:
//
//	        ElasticIpHealthcheckArgs{...}
//
//	or:
//
//	        nil
type ElasticIpHealthcheckPtrInput interface {
	pulumi.Input

	ToElasticIpHealthcheckPtrOutput() ElasticIpHealthcheckPtrOutput
	ToElasticIpHealthcheckPtrOutputWithContext(context.Context) ElasticIpHealthcheckPtrOutput
}

type elasticIpHealthcheckPtrType ElasticIpHealthcheckArgs

func ElasticIpHealthcheckPtr(v *ElasticIpHealthcheckArgs) ElasticIpHealthcheckPtrInput {
	return (*elasticIpHealthcheckPtrType)(v)
}

func (*elasticIpHealthcheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticIpHealthcheck)(nil)).Elem()
}

func (i *elasticIpHealthcheckPtrType) ToElasticIpHealthcheckPtrOutput() ElasticIpHealthcheckPtrOutput {
	return i.ToElasticIpHealthcheckPtrOutputWithContext(context.Background())
}

func (i *elasticIpHealthcheckPtrType) ToElasticIpHealthcheckPtrOutputWithContext(ctx context.Context) ElasticIpHealthcheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticIpHealthcheckPtrOutput)
}

type ElasticIpHealthcheckOutput struct{ *pulumi.OutputState }

func (ElasticIpHealthcheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticIpHealthcheck)(nil)).Elem()
}

func (o ElasticIpHealthcheckOutput) ToElasticIpHealthcheckOutput() ElasticIpHealthcheckOutput {
	return o
}

func (o ElasticIpHealthcheckOutput) ToElasticIpHealthcheckOutputWithContext(ctx context.Context) ElasticIpHealthcheckOutput {
	return o
}

func (o ElasticIpHealthcheckOutput) ToElasticIpHealthcheckPtrOutput() ElasticIpHealthcheckPtrOutput {
	return o.ToElasticIpHealthcheckPtrOutputWithContext(context.Background())
}

func (o ElasticIpHealthcheckOutput) ToElasticIpHealthcheckPtrOutputWithContext(ctx context.Context) ElasticIpHealthcheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticIpHealthcheck) *ElasticIpHealthcheck {
		return &v
	}).(ElasticIpHealthcheckPtrOutput)
}

// The healthcheck interval (seconds; must be between `5` and `300`; default: `10`).
func (o ElasticIpHealthcheckOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElasticIpHealthcheck) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// The healthcheck mode (`tcp`, `http` or `https`; may only be set at creation time).
func (o ElasticIpHealthcheckOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticIpHealthcheck) string { return v.Mode }).(pulumi.StringOutput)
}

// The healthcheck target port (must be between `1` and `65535`).
func (o ElasticIpHealthcheckOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ElasticIpHealthcheck) int { return v.Port }).(pulumi.IntOutput)
}

// The number of failed healthcheck attempts before considering the target unhealthy (must be between `1` and `20`; default: `2`).
func (o ElasticIpHealthcheckOutput) StrikesFail() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElasticIpHealthcheck) *int { return v.StrikesFail }).(pulumi.IntPtrOutput)
}

// The number of successful healthcheck attempts before considering the target healthy (must be between `1` and `20`; default: `3`).
func (o ElasticIpHealthcheckOutput) StrikesOk() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElasticIpHealthcheck) *int { return v.StrikesOk }).(pulumi.IntPtrOutput)
}

// The time before considering a healthcheck probing failed (seconds; must be between `2` and `60`; default: `3`).
func (o ElasticIpHealthcheckOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElasticIpHealthcheck) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// Disable TLS certificate verification for healthcheck in `https` mode (boolean; default: `false`).
func (o ElasticIpHealthcheckOutput) TlsSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticIpHealthcheck) *bool { return v.TlsSkipVerify }).(pulumi.BoolPtrOutput)
}

// The healthcheck server name to present with SNI in `https` mode.
func (o ElasticIpHealthcheckOutput) TlsSni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticIpHealthcheck) *string { return v.TlsSni }).(pulumi.StringPtrOutput)
}

// The healthcheck target URI (required in `http(s)` modes).
func (o ElasticIpHealthcheckOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticIpHealthcheck) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type ElasticIpHealthcheckPtrOutput struct{ *pulumi.OutputState }

func (ElasticIpHealthcheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticIpHealthcheck)(nil)).Elem()
}

func (o ElasticIpHealthcheckPtrOutput) ToElasticIpHealthcheckPtrOutput() ElasticIpHealthcheckPtrOutput {
	return o
}

func (o ElasticIpHealthcheckPtrOutput) ToElasticIpHealthcheckPtrOutputWithContext(ctx context.Context) ElasticIpHealthcheckPtrOutput {
	return o
}

func (o ElasticIpHealthcheckPtrOutput) Elem() ElasticIpHealthcheckOutput {
	return o.ApplyT(func(v *ElasticIpHealthcheck) ElasticIpHealthcheck {
		if v != nil {
			return *v
		}
		var ret ElasticIpHealthcheck
		return ret
	}).(ElasticIpHealthcheckOutput)
}

// The healthcheck interval (seconds; must be between `5` and `300`; default: `10`).
func (o ElasticIpHealthcheckPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticIpHealthcheck) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// The healthcheck mode (`tcp`, `http` or `https`; may only be set at creation time).
func (o ElasticIpHealthcheckPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticIpHealthcheck) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

// The healthcheck target port (must be between `1` and `65535`).
func (o ElasticIpHealthcheckPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticIpHealthcheck) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The number of failed healthcheck attempts before considering the target unhealthy (must be between `1` and `20`; default: `2`).
func (o ElasticIpHealthcheckPtrOutput) StrikesFail() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticIpHealthcheck) *int {
		if v == nil {
			return nil
		}
		return v.StrikesFail
	}).(pulumi.IntPtrOutput)
}

// The number of successful healthcheck attempts before considering the target healthy (must be between `1` and `20`; default: `3`).
func (o ElasticIpHealthcheckPtrOutput) StrikesOk() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticIpHealthcheck) *int {
		if v == nil {
			return nil
		}
		return v.StrikesOk
	}).(pulumi.IntPtrOutput)
}

// The time before considering a healthcheck probing failed (seconds; must be between `2` and `60`; default: `3`).
func (o ElasticIpHealthcheckPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticIpHealthcheck) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// Disable TLS certificate verification for healthcheck in `https` mode (boolean; default: `false`).
func (o ElasticIpHealthcheckPtrOutput) TlsSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticIpHealthcheck) *bool {
		if v == nil {
			return nil
		}
		return v.TlsSkipVerify
	}).(pulumi.BoolPtrOutput)
}

// The healthcheck server name to present with SNI in `https` mode.
func (o ElasticIpHealthcheckPtrOutput) TlsSni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticIpHealthcheck) *string {
		if v == nil {
			return nil
		}
		return v.TlsSni
	}).(pulumi.StringPtrOutput)
}

// The healthcheck target URI (required in `http(s)` modes).
func (o ElasticIpHealthcheckPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticIpHealthcheck) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

type IamApiKeyTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
}

// IamApiKeyTimeoutsInput is an input type that accepts IamApiKeyTimeoutsArgs and IamApiKeyTimeoutsOutput values.
// You can construct a concrete instance of `IamApiKeyTimeoutsInput` via:
//
//	IamApiKeyTimeoutsArgs{...}
type IamApiKeyTimeoutsInput interface {
	pulumi.Input

	ToIamApiKeyTimeoutsOutput() IamApiKeyTimeoutsOutput
	ToIamApiKeyTimeoutsOutputWithContext(context.Context) IamApiKeyTimeoutsOutput
}

type IamApiKeyTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
}

func (IamApiKeyTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IamApiKeyTimeouts)(nil)).Elem()
}

func (i IamApiKeyTimeoutsArgs) ToIamApiKeyTimeoutsOutput() IamApiKeyTimeoutsOutput {
	return i.ToIamApiKeyTimeoutsOutputWithContext(context.Background())
}

func (i IamApiKeyTimeoutsArgs) ToIamApiKeyTimeoutsOutputWithContext(ctx context.Context) IamApiKeyTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamApiKeyTimeoutsOutput)
}

func (i IamApiKeyTimeoutsArgs) ToIamApiKeyTimeoutsPtrOutput() IamApiKeyTimeoutsPtrOutput {
	return i.ToIamApiKeyTimeoutsPtrOutputWithContext(context.Background())
}

func (i IamApiKeyTimeoutsArgs) ToIamApiKeyTimeoutsPtrOutputWithContext(ctx context.Context) IamApiKeyTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamApiKeyTimeoutsOutput).ToIamApiKeyTimeoutsPtrOutputWithContext(ctx)
}

// IamApiKeyTimeoutsPtrInput is an input type that accepts IamApiKeyTimeoutsArgs, IamApiKeyTimeoutsPtr and IamApiKeyTimeoutsPtrOutput values.
// You can construct a concrete instance of `IamApiKeyTimeoutsPtrInput` via:
//
//	        IamApiKeyTimeoutsArgs{...}
//
//	or:
//
//	        nil
type IamApiKeyTimeoutsPtrInput interface {
	pulumi.Input

	ToIamApiKeyTimeoutsPtrOutput() IamApiKeyTimeoutsPtrOutput
	ToIamApiKeyTimeoutsPtrOutputWithContext(context.Context) IamApiKeyTimeoutsPtrOutput
}

type iamApiKeyTimeoutsPtrType IamApiKeyTimeoutsArgs

func IamApiKeyTimeoutsPtr(v *IamApiKeyTimeoutsArgs) IamApiKeyTimeoutsPtrInput {
	return (*iamApiKeyTimeoutsPtrType)(v)
}

func (*iamApiKeyTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IamApiKeyTimeouts)(nil)).Elem()
}

func (i *iamApiKeyTimeoutsPtrType) ToIamApiKeyTimeoutsPtrOutput() IamApiKeyTimeoutsPtrOutput {
	return i.ToIamApiKeyTimeoutsPtrOutputWithContext(context.Background())
}

func (i *iamApiKeyTimeoutsPtrType) ToIamApiKeyTimeoutsPtrOutputWithContext(ctx context.Context) IamApiKeyTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamApiKeyTimeoutsPtrOutput)
}

type IamApiKeyTimeoutsOutput struct{ *pulumi.OutputState }

func (IamApiKeyTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamApiKeyTimeouts)(nil)).Elem()
}

func (o IamApiKeyTimeoutsOutput) ToIamApiKeyTimeoutsOutput() IamApiKeyTimeoutsOutput {
	return o
}

func (o IamApiKeyTimeoutsOutput) ToIamApiKeyTimeoutsOutputWithContext(ctx context.Context) IamApiKeyTimeoutsOutput {
	return o
}

func (o IamApiKeyTimeoutsOutput) ToIamApiKeyTimeoutsPtrOutput() IamApiKeyTimeoutsPtrOutput {
	return o.ToIamApiKeyTimeoutsPtrOutputWithContext(context.Background())
}

func (o IamApiKeyTimeoutsOutput) ToIamApiKeyTimeoutsPtrOutputWithContext(ctx context.Context) IamApiKeyTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IamApiKeyTimeouts) *IamApiKeyTimeouts {
		return &v
	}).(IamApiKeyTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o IamApiKeyTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IamApiKeyTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

type IamApiKeyTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (IamApiKeyTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamApiKeyTimeouts)(nil)).Elem()
}

func (o IamApiKeyTimeoutsPtrOutput) ToIamApiKeyTimeoutsPtrOutput() IamApiKeyTimeoutsPtrOutput {
	return o
}

func (o IamApiKeyTimeoutsPtrOutput) ToIamApiKeyTimeoutsPtrOutputWithContext(ctx context.Context) IamApiKeyTimeoutsPtrOutput {
	return o
}

func (o IamApiKeyTimeoutsPtrOutput) Elem() IamApiKeyTimeoutsOutput {
	return o.ApplyT(func(v *IamApiKeyTimeouts) IamApiKeyTimeouts {
		if v != nil {
			return *v
		}
		var ret IamApiKeyTimeouts
		return ret
	}).(IamApiKeyTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o IamApiKeyTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamApiKeyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

type IamOrgPolicyServices struct {
	// List of IAM service rules (if type is `rules`).
	Rules []IamOrgPolicyServicesRule `pulumi:"rules"`
	// Service type (`rules`, `allow`, or `deny`).
	Type *string `pulumi:"type"`
}

// IamOrgPolicyServicesInput is an input type that accepts IamOrgPolicyServicesArgs and IamOrgPolicyServicesOutput values.
// You can construct a concrete instance of `IamOrgPolicyServicesInput` via:
//
//	IamOrgPolicyServicesArgs{...}
type IamOrgPolicyServicesInput interface {
	pulumi.Input

	ToIamOrgPolicyServicesOutput() IamOrgPolicyServicesOutput
	ToIamOrgPolicyServicesOutputWithContext(context.Context) IamOrgPolicyServicesOutput
}

type IamOrgPolicyServicesArgs struct {
	// List of IAM service rules (if type is `rules`).
	Rules IamOrgPolicyServicesRuleArrayInput `pulumi:"rules"`
	// Service type (`rules`, `allow`, or `deny`).
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IamOrgPolicyServicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IamOrgPolicyServices)(nil)).Elem()
}

func (i IamOrgPolicyServicesArgs) ToIamOrgPolicyServicesOutput() IamOrgPolicyServicesOutput {
	return i.ToIamOrgPolicyServicesOutputWithContext(context.Background())
}

func (i IamOrgPolicyServicesArgs) ToIamOrgPolicyServicesOutputWithContext(ctx context.Context) IamOrgPolicyServicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamOrgPolicyServicesOutput)
}

// IamOrgPolicyServicesMapInput is an input type that accepts IamOrgPolicyServicesMap and IamOrgPolicyServicesMapOutput values.
// You can construct a concrete instance of `IamOrgPolicyServicesMapInput` via:
//
//	IamOrgPolicyServicesMap{ "key": IamOrgPolicyServicesArgs{...} }
type IamOrgPolicyServicesMapInput interface {
	pulumi.Input

	ToIamOrgPolicyServicesMapOutput() IamOrgPolicyServicesMapOutput
	ToIamOrgPolicyServicesMapOutputWithContext(context.Context) IamOrgPolicyServicesMapOutput
}

type IamOrgPolicyServicesMap map[string]IamOrgPolicyServicesInput

func (IamOrgPolicyServicesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IamOrgPolicyServices)(nil)).Elem()
}

func (i IamOrgPolicyServicesMap) ToIamOrgPolicyServicesMapOutput() IamOrgPolicyServicesMapOutput {
	return i.ToIamOrgPolicyServicesMapOutputWithContext(context.Background())
}

func (i IamOrgPolicyServicesMap) ToIamOrgPolicyServicesMapOutputWithContext(ctx context.Context) IamOrgPolicyServicesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamOrgPolicyServicesMapOutput)
}

type IamOrgPolicyServicesOutput struct{ *pulumi.OutputState }

func (IamOrgPolicyServicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamOrgPolicyServices)(nil)).Elem()
}

func (o IamOrgPolicyServicesOutput) ToIamOrgPolicyServicesOutput() IamOrgPolicyServicesOutput {
	return o
}

func (o IamOrgPolicyServicesOutput) ToIamOrgPolicyServicesOutputWithContext(ctx context.Context) IamOrgPolicyServicesOutput {
	return o
}

// List of IAM service rules (if type is `rules`).
func (o IamOrgPolicyServicesOutput) Rules() IamOrgPolicyServicesRuleArrayOutput {
	return o.ApplyT(func(v IamOrgPolicyServices) []IamOrgPolicyServicesRule { return v.Rules }).(IamOrgPolicyServicesRuleArrayOutput)
}

// Service type (`rules`, `allow`, or `deny`).
func (o IamOrgPolicyServicesOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IamOrgPolicyServices) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IamOrgPolicyServicesMapOutput struct{ *pulumi.OutputState }

func (IamOrgPolicyServicesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IamOrgPolicyServices)(nil)).Elem()
}

func (o IamOrgPolicyServicesMapOutput) ToIamOrgPolicyServicesMapOutput() IamOrgPolicyServicesMapOutput {
	return o
}

func (o IamOrgPolicyServicesMapOutput) ToIamOrgPolicyServicesMapOutputWithContext(ctx context.Context) IamOrgPolicyServicesMapOutput {
	return o
}

func (o IamOrgPolicyServicesMapOutput) MapIndex(k pulumi.StringInput) IamOrgPolicyServicesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) IamOrgPolicyServices {
		return vs[0].(map[string]IamOrgPolicyServices)[vs[1].(string)]
	}).(IamOrgPolicyServicesOutput)
}

type IamOrgPolicyServicesRule struct {
	// IAM policy rule action (`allow` or `deny`).
	Action *string `pulumi:"action"`
	// IAM policy rule expression.
	Expression *string `pulumi:"expression"`
	// Deprecated: This field is not suported. Specify resources using CEL expressions.
	Resources []string `pulumi:"resources"`
}

// IamOrgPolicyServicesRuleInput is an input type that accepts IamOrgPolicyServicesRuleArgs and IamOrgPolicyServicesRuleOutput values.
// You can construct a concrete instance of `IamOrgPolicyServicesRuleInput` via:
//
//	IamOrgPolicyServicesRuleArgs{...}
type IamOrgPolicyServicesRuleInput interface {
	pulumi.Input

	ToIamOrgPolicyServicesRuleOutput() IamOrgPolicyServicesRuleOutput
	ToIamOrgPolicyServicesRuleOutputWithContext(context.Context) IamOrgPolicyServicesRuleOutput
}

type IamOrgPolicyServicesRuleArgs struct {
	// IAM policy rule action (`allow` or `deny`).
	Action pulumi.StringPtrInput `pulumi:"action"`
	// IAM policy rule expression.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// Deprecated: This field is not suported. Specify resources using CEL expressions.
	Resources pulumi.StringArrayInput `pulumi:"resources"`
}

func (IamOrgPolicyServicesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IamOrgPolicyServicesRule)(nil)).Elem()
}

func (i IamOrgPolicyServicesRuleArgs) ToIamOrgPolicyServicesRuleOutput() IamOrgPolicyServicesRuleOutput {
	return i.ToIamOrgPolicyServicesRuleOutputWithContext(context.Background())
}

func (i IamOrgPolicyServicesRuleArgs) ToIamOrgPolicyServicesRuleOutputWithContext(ctx context.Context) IamOrgPolicyServicesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamOrgPolicyServicesRuleOutput)
}

// IamOrgPolicyServicesRuleArrayInput is an input type that accepts IamOrgPolicyServicesRuleArray and IamOrgPolicyServicesRuleArrayOutput values.
// You can construct a concrete instance of `IamOrgPolicyServicesRuleArrayInput` via:
//
//	IamOrgPolicyServicesRuleArray{ IamOrgPolicyServicesRuleArgs{...} }
type IamOrgPolicyServicesRuleArrayInput interface {
	pulumi.Input

	ToIamOrgPolicyServicesRuleArrayOutput() IamOrgPolicyServicesRuleArrayOutput
	ToIamOrgPolicyServicesRuleArrayOutputWithContext(context.Context) IamOrgPolicyServicesRuleArrayOutput
}

type IamOrgPolicyServicesRuleArray []IamOrgPolicyServicesRuleInput

func (IamOrgPolicyServicesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamOrgPolicyServicesRule)(nil)).Elem()
}

func (i IamOrgPolicyServicesRuleArray) ToIamOrgPolicyServicesRuleArrayOutput() IamOrgPolicyServicesRuleArrayOutput {
	return i.ToIamOrgPolicyServicesRuleArrayOutputWithContext(context.Background())
}

func (i IamOrgPolicyServicesRuleArray) ToIamOrgPolicyServicesRuleArrayOutputWithContext(ctx context.Context) IamOrgPolicyServicesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamOrgPolicyServicesRuleArrayOutput)
}

type IamOrgPolicyServicesRuleOutput struct{ *pulumi.OutputState }

func (IamOrgPolicyServicesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamOrgPolicyServicesRule)(nil)).Elem()
}

func (o IamOrgPolicyServicesRuleOutput) ToIamOrgPolicyServicesRuleOutput() IamOrgPolicyServicesRuleOutput {
	return o
}

func (o IamOrgPolicyServicesRuleOutput) ToIamOrgPolicyServicesRuleOutputWithContext(ctx context.Context) IamOrgPolicyServicesRuleOutput {
	return o
}

// IAM policy rule action (`allow` or `deny`).
func (o IamOrgPolicyServicesRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IamOrgPolicyServicesRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// IAM policy rule expression.
func (o IamOrgPolicyServicesRuleOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IamOrgPolicyServicesRule) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// Deprecated: This field is not suported. Specify resources using CEL expressions.
func (o IamOrgPolicyServicesRuleOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IamOrgPolicyServicesRule) []string { return v.Resources }).(pulumi.StringArrayOutput)
}

type IamOrgPolicyServicesRuleArrayOutput struct{ *pulumi.OutputState }

func (IamOrgPolicyServicesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamOrgPolicyServicesRule)(nil)).Elem()
}

func (o IamOrgPolicyServicesRuleArrayOutput) ToIamOrgPolicyServicesRuleArrayOutput() IamOrgPolicyServicesRuleArrayOutput {
	return o
}

func (o IamOrgPolicyServicesRuleArrayOutput) ToIamOrgPolicyServicesRuleArrayOutputWithContext(ctx context.Context) IamOrgPolicyServicesRuleArrayOutput {
	return o
}

func (o IamOrgPolicyServicesRuleArrayOutput) Index(i pulumi.IntInput) IamOrgPolicyServicesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IamOrgPolicyServicesRule {
		return vs[0].([]IamOrgPolicyServicesRule)[vs[1].(int)]
	}).(IamOrgPolicyServicesRuleOutput)
}

type IamOrgPolicyTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
}

// IamOrgPolicyTimeoutsInput is an input type that accepts IamOrgPolicyTimeoutsArgs and IamOrgPolicyTimeoutsOutput values.
// You can construct a concrete instance of `IamOrgPolicyTimeoutsInput` via:
//
//	IamOrgPolicyTimeoutsArgs{...}
type IamOrgPolicyTimeoutsInput interface {
	pulumi.Input

	ToIamOrgPolicyTimeoutsOutput() IamOrgPolicyTimeoutsOutput
	ToIamOrgPolicyTimeoutsOutputWithContext(context.Context) IamOrgPolicyTimeoutsOutput
}

type IamOrgPolicyTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
}

func (IamOrgPolicyTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IamOrgPolicyTimeouts)(nil)).Elem()
}

func (i IamOrgPolicyTimeoutsArgs) ToIamOrgPolicyTimeoutsOutput() IamOrgPolicyTimeoutsOutput {
	return i.ToIamOrgPolicyTimeoutsOutputWithContext(context.Background())
}

func (i IamOrgPolicyTimeoutsArgs) ToIamOrgPolicyTimeoutsOutputWithContext(ctx context.Context) IamOrgPolicyTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamOrgPolicyTimeoutsOutput)
}

func (i IamOrgPolicyTimeoutsArgs) ToIamOrgPolicyTimeoutsPtrOutput() IamOrgPolicyTimeoutsPtrOutput {
	return i.ToIamOrgPolicyTimeoutsPtrOutputWithContext(context.Background())
}

func (i IamOrgPolicyTimeoutsArgs) ToIamOrgPolicyTimeoutsPtrOutputWithContext(ctx context.Context) IamOrgPolicyTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamOrgPolicyTimeoutsOutput).ToIamOrgPolicyTimeoutsPtrOutputWithContext(ctx)
}

// IamOrgPolicyTimeoutsPtrInput is an input type that accepts IamOrgPolicyTimeoutsArgs, IamOrgPolicyTimeoutsPtr and IamOrgPolicyTimeoutsPtrOutput values.
// You can construct a concrete instance of `IamOrgPolicyTimeoutsPtrInput` via:
//
//	        IamOrgPolicyTimeoutsArgs{...}
//
//	or:
//
//	        nil
type IamOrgPolicyTimeoutsPtrInput interface {
	pulumi.Input

	ToIamOrgPolicyTimeoutsPtrOutput() IamOrgPolicyTimeoutsPtrOutput
	ToIamOrgPolicyTimeoutsPtrOutputWithContext(context.Context) IamOrgPolicyTimeoutsPtrOutput
}

type iamOrgPolicyTimeoutsPtrType IamOrgPolicyTimeoutsArgs

func IamOrgPolicyTimeoutsPtr(v *IamOrgPolicyTimeoutsArgs) IamOrgPolicyTimeoutsPtrInput {
	return (*iamOrgPolicyTimeoutsPtrType)(v)
}

func (*iamOrgPolicyTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IamOrgPolicyTimeouts)(nil)).Elem()
}

func (i *iamOrgPolicyTimeoutsPtrType) ToIamOrgPolicyTimeoutsPtrOutput() IamOrgPolicyTimeoutsPtrOutput {
	return i.ToIamOrgPolicyTimeoutsPtrOutputWithContext(context.Background())
}

func (i *iamOrgPolicyTimeoutsPtrType) ToIamOrgPolicyTimeoutsPtrOutputWithContext(ctx context.Context) IamOrgPolicyTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamOrgPolicyTimeoutsPtrOutput)
}

type IamOrgPolicyTimeoutsOutput struct{ *pulumi.OutputState }

func (IamOrgPolicyTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamOrgPolicyTimeouts)(nil)).Elem()
}

func (o IamOrgPolicyTimeoutsOutput) ToIamOrgPolicyTimeoutsOutput() IamOrgPolicyTimeoutsOutput {
	return o
}

func (o IamOrgPolicyTimeoutsOutput) ToIamOrgPolicyTimeoutsOutputWithContext(ctx context.Context) IamOrgPolicyTimeoutsOutput {
	return o
}

func (o IamOrgPolicyTimeoutsOutput) ToIamOrgPolicyTimeoutsPtrOutput() IamOrgPolicyTimeoutsPtrOutput {
	return o.ToIamOrgPolicyTimeoutsPtrOutputWithContext(context.Background())
}

func (o IamOrgPolicyTimeoutsOutput) ToIamOrgPolicyTimeoutsPtrOutputWithContext(ctx context.Context) IamOrgPolicyTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IamOrgPolicyTimeouts) *IamOrgPolicyTimeouts {
		return &v
	}).(IamOrgPolicyTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o IamOrgPolicyTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IamOrgPolicyTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

type IamOrgPolicyTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (IamOrgPolicyTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamOrgPolicyTimeouts)(nil)).Elem()
}

func (o IamOrgPolicyTimeoutsPtrOutput) ToIamOrgPolicyTimeoutsPtrOutput() IamOrgPolicyTimeoutsPtrOutput {
	return o
}

func (o IamOrgPolicyTimeoutsPtrOutput) ToIamOrgPolicyTimeoutsPtrOutputWithContext(ctx context.Context) IamOrgPolicyTimeoutsPtrOutput {
	return o
}

func (o IamOrgPolicyTimeoutsPtrOutput) Elem() IamOrgPolicyTimeoutsOutput {
	return o.ApplyT(func(v *IamOrgPolicyTimeouts) IamOrgPolicyTimeouts {
		if v != nil {
			return *v
		}
		var ret IamOrgPolicyTimeouts
		return ret
	}).(IamOrgPolicyTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o IamOrgPolicyTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamOrgPolicyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

type IamRolePolicy struct {
	// Default service strategy (`allow` or `deny`).
	DefaultServiceStrategy *string `pulumi:"defaultServiceStrategy"`
	// IAM policy services.
	Services map[string]IamRolePolicyServices `pulumi:"services"`
}

// IamRolePolicyInput is an input type that accepts IamRolePolicyArgs and IamRolePolicyOutput values.
// You can construct a concrete instance of `IamRolePolicyInput` via:
//
//	IamRolePolicyArgs{...}
type IamRolePolicyInput interface {
	pulumi.Input

	ToIamRolePolicyOutput() IamRolePolicyOutput
	ToIamRolePolicyOutputWithContext(context.Context) IamRolePolicyOutput
}

type IamRolePolicyArgs struct {
	// Default service strategy (`allow` or `deny`).
	DefaultServiceStrategy pulumi.StringPtrInput `pulumi:"defaultServiceStrategy"`
	// IAM policy services.
	Services IamRolePolicyServicesMapInput `pulumi:"services"`
}

func (IamRolePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IamRolePolicy)(nil)).Elem()
}

func (i IamRolePolicyArgs) ToIamRolePolicyOutput() IamRolePolicyOutput {
	return i.ToIamRolePolicyOutputWithContext(context.Background())
}

func (i IamRolePolicyArgs) ToIamRolePolicyOutputWithContext(ctx context.Context) IamRolePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamRolePolicyOutput)
}

func (i IamRolePolicyArgs) ToIamRolePolicyPtrOutput() IamRolePolicyPtrOutput {
	return i.ToIamRolePolicyPtrOutputWithContext(context.Background())
}

func (i IamRolePolicyArgs) ToIamRolePolicyPtrOutputWithContext(ctx context.Context) IamRolePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamRolePolicyOutput).ToIamRolePolicyPtrOutputWithContext(ctx)
}

// IamRolePolicyPtrInput is an input type that accepts IamRolePolicyArgs, IamRolePolicyPtr and IamRolePolicyPtrOutput values.
// You can construct a concrete instance of `IamRolePolicyPtrInput` via:
//
//	        IamRolePolicyArgs{...}
//
//	or:
//
//	        nil
type IamRolePolicyPtrInput interface {
	pulumi.Input

	ToIamRolePolicyPtrOutput() IamRolePolicyPtrOutput
	ToIamRolePolicyPtrOutputWithContext(context.Context) IamRolePolicyPtrOutput
}

type iamRolePolicyPtrType IamRolePolicyArgs

func IamRolePolicyPtr(v *IamRolePolicyArgs) IamRolePolicyPtrInput {
	return (*iamRolePolicyPtrType)(v)
}

func (*iamRolePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IamRolePolicy)(nil)).Elem()
}

func (i *iamRolePolicyPtrType) ToIamRolePolicyPtrOutput() IamRolePolicyPtrOutput {
	return i.ToIamRolePolicyPtrOutputWithContext(context.Background())
}

func (i *iamRolePolicyPtrType) ToIamRolePolicyPtrOutputWithContext(ctx context.Context) IamRolePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamRolePolicyPtrOutput)
}

type IamRolePolicyOutput struct{ *pulumi.OutputState }

func (IamRolePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamRolePolicy)(nil)).Elem()
}

func (o IamRolePolicyOutput) ToIamRolePolicyOutput() IamRolePolicyOutput {
	return o
}

func (o IamRolePolicyOutput) ToIamRolePolicyOutputWithContext(ctx context.Context) IamRolePolicyOutput {
	return o
}

func (o IamRolePolicyOutput) ToIamRolePolicyPtrOutput() IamRolePolicyPtrOutput {
	return o.ToIamRolePolicyPtrOutputWithContext(context.Background())
}

func (o IamRolePolicyOutput) ToIamRolePolicyPtrOutputWithContext(ctx context.Context) IamRolePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IamRolePolicy) *IamRolePolicy {
		return &v
	}).(IamRolePolicyPtrOutput)
}

// Default service strategy (`allow` or `deny`).
func (o IamRolePolicyOutput) DefaultServiceStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IamRolePolicy) *string { return v.DefaultServiceStrategy }).(pulumi.StringPtrOutput)
}

// IAM policy services.
func (o IamRolePolicyOutput) Services() IamRolePolicyServicesMapOutput {
	return o.ApplyT(func(v IamRolePolicy) map[string]IamRolePolicyServices { return v.Services }).(IamRolePolicyServicesMapOutput)
}

type IamRolePolicyPtrOutput struct{ *pulumi.OutputState }

func (IamRolePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamRolePolicy)(nil)).Elem()
}

func (o IamRolePolicyPtrOutput) ToIamRolePolicyPtrOutput() IamRolePolicyPtrOutput {
	return o
}

func (o IamRolePolicyPtrOutput) ToIamRolePolicyPtrOutputWithContext(ctx context.Context) IamRolePolicyPtrOutput {
	return o
}

func (o IamRolePolicyPtrOutput) Elem() IamRolePolicyOutput {
	return o.ApplyT(func(v *IamRolePolicy) IamRolePolicy {
		if v != nil {
			return *v
		}
		var ret IamRolePolicy
		return ret
	}).(IamRolePolicyOutput)
}

// Default service strategy (`allow` or `deny`).
func (o IamRolePolicyPtrOutput) DefaultServiceStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamRolePolicy) *string {
		if v == nil {
			return nil
		}
		return v.DefaultServiceStrategy
	}).(pulumi.StringPtrOutput)
}

// IAM policy services.
func (o IamRolePolicyPtrOutput) Services() IamRolePolicyServicesMapOutput {
	return o.ApplyT(func(v *IamRolePolicy) map[string]IamRolePolicyServices {
		if v == nil {
			return nil
		}
		return v.Services
	}).(IamRolePolicyServicesMapOutput)
}

type IamRolePolicyServices struct {
	// List of IAM service rules (if type is `rules`).
	Rules []IamRolePolicyServicesRule `pulumi:"rules"`
	// Service type (`rules`, `allow`, or `deny`).
	Type *string `pulumi:"type"`
}

// IamRolePolicyServicesInput is an input type that accepts IamRolePolicyServicesArgs and IamRolePolicyServicesOutput values.
// You can construct a concrete instance of `IamRolePolicyServicesInput` via:
//
//	IamRolePolicyServicesArgs{...}
type IamRolePolicyServicesInput interface {
	pulumi.Input

	ToIamRolePolicyServicesOutput() IamRolePolicyServicesOutput
	ToIamRolePolicyServicesOutputWithContext(context.Context) IamRolePolicyServicesOutput
}

type IamRolePolicyServicesArgs struct {
	// List of IAM service rules (if type is `rules`).
	Rules IamRolePolicyServicesRuleArrayInput `pulumi:"rules"`
	// Service type (`rules`, `allow`, or `deny`).
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IamRolePolicyServicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IamRolePolicyServices)(nil)).Elem()
}

func (i IamRolePolicyServicesArgs) ToIamRolePolicyServicesOutput() IamRolePolicyServicesOutput {
	return i.ToIamRolePolicyServicesOutputWithContext(context.Background())
}

func (i IamRolePolicyServicesArgs) ToIamRolePolicyServicesOutputWithContext(ctx context.Context) IamRolePolicyServicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamRolePolicyServicesOutput)
}

// IamRolePolicyServicesMapInput is an input type that accepts IamRolePolicyServicesMap and IamRolePolicyServicesMapOutput values.
// You can construct a concrete instance of `IamRolePolicyServicesMapInput` via:
//
//	IamRolePolicyServicesMap{ "key": IamRolePolicyServicesArgs{...} }
type IamRolePolicyServicesMapInput interface {
	pulumi.Input

	ToIamRolePolicyServicesMapOutput() IamRolePolicyServicesMapOutput
	ToIamRolePolicyServicesMapOutputWithContext(context.Context) IamRolePolicyServicesMapOutput
}

type IamRolePolicyServicesMap map[string]IamRolePolicyServicesInput

func (IamRolePolicyServicesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IamRolePolicyServices)(nil)).Elem()
}

func (i IamRolePolicyServicesMap) ToIamRolePolicyServicesMapOutput() IamRolePolicyServicesMapOutput {
	return i.ToIamRolePolicyServicesMapOutputWithContext(context.Background())
}

func (i IamRolePolicyServicesMap) ToIamRolePolicyServicesMapOutputWithContext(ctx context.Context) IamRolePolicyServicesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamRolePolicyServicesMapOutput)
}

type IamRolePolicyServicesOutput struct{ *pulumi.OutputState }

func (IamRolePolicyServicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamRolePolicyServices)(nil)).Elem()
}

func (o IamRolePolicyServicesOutput) ToIamRolePolicyServicesOutput() IamRolePolicyServicesOutput {
	return o
}

func (o IamRolePolicyServicesOutput) ToIamRolePolicyServicesOutputWithContext(ctx context.Context) IamRolePolicyServicesOutput {
	return o
}

// List of IAM service rules (if type is `rules`).
func (o IamRolePolicyServicesOutput) Rules() IamRolePolicyServicesRuleArrayOutput {
	return o.ApplyT(func(v IamRolePolicyServices) []IamRolePolicyServicesRule { return v.Rules }).(IamRolePolicyServicesRuleArrayOutput)
}

// Service type (`rules`, `allow`, or `deny`).
func (o IamRolePolicyServicesOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IamRolePolicyServices) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IamRolePolicyServicesMapOutput struct{ *pulumi.OutputState }

func (IamRolePolicyServicesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IamRolePolicyServices)(nil)).Elem()
}

func (o IamRolePolicyServicesMapOutput) ToIamRolePolicyServicesMapOutput() IamRolePolicyServicesMapOutput {
	return o
}

func (o IamRolePolicyServicesMapOutput) ToIamRolePolicyServicesMapOutputWithContext(ctx context.Context) IamRolePolicyServicesMapOutput {
	return o
}

func (o IamRolePolicyServicesMapOutput) MapIndex(k pulumi.StringInput) IamRolePolicyServicesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) IamRolePolicyServices {
		return vs[0].(map[string]IamRolePolicyServices)[vs[1].(string)]
	}).(IamRolePolicyServicesOutput)
}

type IamRolePolicyServicesRule struct {
	// IAM policy rule action (`allow` or `deny`).
	Action *string `pulumi:"action"`
	// IAM policy rule expression.
	Expression *string `pulumi:"expression"`
	// Deprecated: This field is not suported. Specify resources using CEL expressions.
	Resources []string `pulumi:"resources"`
}

// IamRolePolicyServicesRuleInput is an input type that accepts IamRolePolicyServicesRuleArgs and IamRolePolicyServicesRuleOutput values.
// You can construct a concrete instance of `IamRolePolicyServicesRuleInput` via:
//
//	IamRolePolicyServicesRuleArgs{...}
type IamRolePolicyServicesRuleInput interface {
	pulumi.Input

	ToIamRolePolicyServicesRuleOutput() IamRolePolicyServicesRuleOutput
	ToIamRolePolicyServicesRuleOutputWithContext(context.Context) IamRolePolicyServicesRuleOutput
}

type IamRolePolicyServicesRuleArgs struct {
	// IAM policy rule action (`allow` or `deny`).
	Action pulumi.StringPtrInput `pulumi:"action"`
	// IAM policy rule expression.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// Deprecated: This field is not suported. Specify resources using CEL expressions.
	Resources pulumi.StringArrayInput `pulumi:"resources"`
}

func (IamRolePolicyServicesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IamRolePolicyServicesRule)(nil)).Elem()
}

func (i IamRolePolicyServicesRuleArgs) ToIamRolePolicyServicesRuleOutput() IamRolePolicyServicesRuleOutput {
	return i.ToIamRolePolicyServicesRuleOutputWithContext(context.Background())
}

func (i IamRolePolicyServicesRuleArgs) ToIamRolePolicyServicesRuleOutputWithContext(ctx context.Context) IamRolePolicyServicesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamRolePolicyServicesRuleOutput)
}

// IamRolePolicyServicesRuleArrayInput is an input type that accepts IamRolePolicyServicesRuleArray and IamRolePolicyServicesRuleArrayOutput values.
// You can construct a concrete instance of `IamRolePolicyServicesRuleArrayInput` via:
//
//	IamRolePolicyServicesRuleArray{ IamRolePolicyServicesRuleArgs{...} }
type IamRolePolicyServicesRuleArrayInput interface {
	pulumi.Input

	ToIamRolePolicyServicesRuleArrayOutput() IamRolePolicyServicesRuleArrayOutput
	ToIamRolePolicyServicesRuleArrayOutputWithContext(context.Context) IamRolePolicyServicesRuleArrayOutput
}

type IamRolePolicyServicesRuleArray []IamRolePolicyServicesRuleInput

func (IamRolePolicyServicesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamRolePolicyServicesRule)(nil)).Elem()
}

func (i IamRolePolicyServicesRuleArray) ToIamRolePolicyServicesRuleArrayOutput() IamRolePolicyServicesRuleArrayOutput {
	return i.ToIamRolePolicyServicesRuleArrayOutputWithContext(context.Background())
}

func (i IamRolePolicyServicesRuleArray) ToIamRolePolicyServicesRuleArrayOutputWithContext(ctx context.Context) IamRolePolicyServicesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamRolePolicyServicesRuleArrayOutput)
}

type IamRolePolicyServicesRuleOutput struct{ *pulumi.OutputState }

func (IamRolePolicyServicesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamRolePolicyServicesRule)(nil)).Elem()
}

func (o IamRolePolicyServicesRuleOutput) ToIamRolePolicyServicesRuleOutput() IamRolePolicyServicesRuleOutput {
	return o
}

func (o IamRolePolicyServicesRuleOutput) ToIamRolePolicyServicesRuleOutputWithContext(ctx context.Context) IamRolePolicyServicesRuleOutput {
	return o
}

// IAM policy rule action (`allow` or `deny`).
func (o IamRolePolicyServicesRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IamRolePolicyServicesRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// IAM policy rule expression.
func (o IamRolePolicyServicesRuleOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IamRolePolicyServicesRule) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// Deprecated: This field is not suported. Specify resources using CEL expressions.
func (o IamRolePolicyServicesRuleOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IamRolePolicyServicesRule) []string { return v.Resources }).(pulumi.StringArrayOutput)
}

type IamRolePolicyServicesRuleArrayOutput struct{ *pulumi.OutputState }

func (IamRolePolicyServicesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamRolePolicyServicesRule)(nil)).Elem()
}

func (o IamRolePolicyServicesRuleArrayOutput) ToIamRolePolicyServicesRuleArrayOutput() IamRolePolicyServicesRuleArrayOutput {
	return o
}

func (o IamRolePolicyServicesRuleArrayOutput) ToIamRolePolicyServicesRuleArrayOutputWithContext(ctx context.Context) IamRolePolicyServicesRuleArrayOutput {
	return o
}

func (o IamRolePolicyServicesRuleArrayOutput) Index(i pulumi.IntInput) IamRolePolicyServicesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IamRolePolicyServicesRule {
		return vs[0].([]IamRolePolicyServicesRule)[vs[1].(int)]
	}).(IamRolePolicyServicesRuleOutput)
}

type IamRoleTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
}

// IamRoleTimeoutsInput is an input type that accepts IamRoleTimeoutsArgs and IamRoleTimeoutsOutput values.
// You can construct a concrete instance of `IamRoleTimeoutsInput` via:
//
//	IamRoleTimeoutsArgs{...}
type IamRoleTimeoutsInput interface {
	pulumi.Input

	ToIamRoleTimeoutsOutput() IamRoleTimeoutsOutput
	ToIamRoleTimeoutsOutputWithContext(context.Context) IamRoleTimeoutsOutput
}

type IamRoleTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
}

func (IamRoleTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IamRoleTimeouts)(nil)).Elem()
}

func (i IamRoleTimeoutsArgs) ToIamRoleTimeoutsOutput() IamRoleTimeoutsOutput {
	return i.ToIamRoleTimeoutsOutputWithContext(context.Background())
}

func (i IamRoleTimeoutsArgs) ToIamRoleTimeoutsOutputWithContext(ctx context.Context) IamRoleTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamRoleTimeoutsOutput)
}

func (i IamRoleTimeoutsArgs) ToIamRoleTimeoutsPtrOutput() IamRoleTimeoutsPtrOutput {
	return i.ToIamRoleTimeoutsPtrOutputWithContext(context.Background())
}

func (i IamRoleTimeoutsArgs) ToIamRoleTimeoutsPtrOutputWithContext(ctx context.Context) IamRoleTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamRoleTimeoutsOutput).ToIamRoleTimeoutsPtrOutputWithContext(ctx)
}

// IamRoleTimeoutsPtrInput is an input type that accepts IamRoleTimeoutsArgs, IamRoleTimeoutsPtr and IamRoleTimeoutsPtrOutput values.
// You can construct a concrete instance of `IamRoleTimeoutsPtrInput` via:
//
//	        IamRoleTimeoutsArgs{...}
//
//	or:
//
//	        nil
type IamRoleTimeoutsPtrInput interface {
	pulumi.Input

	ToIamRoleTimeoutsPtrOutput() IamRoleTimeoutsPtrOutput
	ToIamRoleTimeoutsPtrOutputWithContext(context.Context) IamRoleTimeoutsPtrOutput
}

type iamRoleTimeoutsPtrType IamRoleTimeoutsArgs

func IamRoleTimeoutsPtr(v *IamRoleTimeoutsArgs) IamRoleTimeoutsPtrInput {
	return (*iamRoleTimeoutsPtrType)(v)
}

func (*iamRoleTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IamRoleTimeouts)(nil)).Elem()
}

func (i *iamRoleTimeoutsPtrType) ToIamRoleTimeoutsPtrOutput() IamRoleTimeoutsPtrOutput {
	return i.ToIamRoleTimeoutsPtrOutputWithContext(context.Background())
}

func (i *iamRoleTimeoutsPtrType) ToIamRoleTimeoutsPtrOutputWithContext(ctx context.Context) IamRoleTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamRoleTimeoutsPtrOutput)
}

type IamRoleTimeoutsOutput struct{ *pulumi.OutputState }

func (IamRoleTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamRoleTimeouts)(nil)).Elem()
}

func (o IamRoleTimeoutsOutput) ToIamRoleTimeoutsOutput() IamRoleTimeoutsOutput {
	return o
}

func (o IamRoleTimeoutsOutput) ToIamRoleTimeoutsOutputWithContext(ctx context.Context) IamRoleTimeoutsOutput {
	return o
}

func (o IamRoleTimeoutsOutput) ToIamRoleTimeoutsPtrOutput() IamRoleTimeoutsPtrOutput {
	return o.ToIamRoleTimeoutsPtrOutputWithContext(context.Background())
}

func (o IamRoleTimeoutsOutput) ToIamRoleTimeoutsPtrOutputWithContext(ctx context.Context) IamRoleTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IamRoleTimeouts) *IamRoleTimeouts {
		return &v
	}).(IamRoleTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o IamRoleTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IamRoleTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

type IamRoleTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (IamRoleTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamRoleTimeouts)(nil)).Elem()
}

func (o IamRoleTimeoutsPtrOutput) ToIamRoleTimeoutsPtrOutput() IamRoleTimeoutsPtrOutput {
	return o
}

func (o IamRoleTimeoutsPtrOutput) ToIamRoleTimeoutsPtrOutputWithContext(ctx context.Context) IamRoleTimeoutsPtrOutput {
	return o
}

func (o IamRoleTimeoutsPtrOutput) Elem() IamRoleTimeoutsOutput {
	return o.ApplyT(func(v *IamRoleTimeouts) IamRoleTimeouts {
		if v != nil {
			return *v
		}
		var ret IamRoleTimeouts
		return ret
	}).(IamRoleTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o IamRoleTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamRoleTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

type InstancePoolInstance struct {
	// The ID of this resource.
	Id *string `pulumi:"id"`
	// The instance (main network interface) IPv6 address.
	Ipv6Address *string `pulumi:"ipv6Address"`
	// The instance name.
	Name *string `pulumi:"name"`
	// The instance (main network interface) IPv4 address.
	PublicIpAddress *string `pulumi:"publicIpAddress"`
}

// InstancePoolInstanceInput is an input type that accepts InstancePoolInstanceArgs and InstancePoolInstanceOutput values.
// You can construct a concrete instance of `InstancePoolInstanceInput` via:
//
//	InstancePoolInstanceArgs{...}
type InstancePoolInstanceInput interface {
	pulumi.Input

	ToInstancePoolInstanceOutput() InstancePoolInstanceOutput
	ToInstancePoolInstanceOutputWithContext(context.Context) InstancePoolInstanceOutput
}

type InstancePoolInstanceArgs struct {
	// The ID of this resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The instance (main network interface) IPv6 address.
	Ipv6Address pulumi.StringPtrInput `pulumi:"ipv6Address"`
	// The instance name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The instance (main network interface) IPv4 address.
	PublicIpAddress pulumi.StringPtrInput `pulumi:"publicIpAddress"`
}

func (InstancePoolInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePoolInstance)(nil)).Elem()
}

func (i InstancePoolInstanceArgs) ToInstancePoolInstanceOutput() InstancePoolInstanceOutput {
	return i.ToInstancePoolInstanceOutputWithContext(context.Background())
}

func (i InstancePoolInstanceArgs) ToInstancePoolInstanceOutputWithContext(ctx context.Context) InstancePoolInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePoolInstanceOutput)
}

// InstancePoolInstanceArrayInput is an input type that accepts InstancePoolInstanceArray and InstancePoolInstanceArrayOutput values.
// You can construct a concrete instance of `InstancePoolInstanceArrayInput` via:
//
//	InstancePoolInstanceArray{ InstancePoolInstanceArgs{...} }
type InstancePoolInstanceArrayInput interface {
	pulumi.Input

	ToInstancePoolInstanceArrayOutput() InstancePoolInstanceArrayOutput
	ToInstancePoolInstanceArrayOutputWithContext(context.Context) InstancePoolInstanceArrayOutput
}

type InstancePoolInstanceArray []InstancePoolInstanceInput

func (InstancePoolInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancePoolInstance)(nil)).Elem()
}

func (i InstancePoolInstanceArray) ToInstancePoolInstanceArrayOutput() InstancePoolInstanceArrayOutput {
	return i.ToInstancePoolInstanceArrayOutputWithContext(context.Background())
}

func (i InstancePoolInstanceArray) ToInstancePoolInstanceArrayOutputWithContext(ctx context.Context) InstancePoolInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePoolInstanceArrayOutput)
}

type InstancePoolInstanceOutput struct{ *pulumi.OutputState }

func (InstancePoolInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePoolInstance)(nil)).Elem()
}

func (o InstancePoolInstanceOutput) ToInstancePoolInstanceOutput() InstancePoolInstanceOutput {
	return o
}

func (o InstancePoolInstanceOutput) ToInstancePoolInstanceOutputWithContext(ctx context.Context) InstancePoolInstanceOutput {
	return o
}

// The ID of this resource.
func (o InstancePoolInstanceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePoolInstance) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The instance (main network interface) IPv6 address.
func (o InstancePoolInstanceOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePoolInstance) *string { return v.Ipv6Address }).(pulumi.StringPtrOutput)
}

// The instance name.
func (o InstancePoolInstanceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePoolInstance) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The instance (main network interface) IPv4 address.
func (o InstancePoolInstanceOutput) PublicIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePoolInstance) *string { return v.PublicIpAddress }).(pulumi.StringPtrOutput)
}

type InstancePoolInstanceArrayOutput struct{ *pulumi.OutputState }

func (InstancePoolInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancePoolInstance)(nil)).Elem()
}

func (o InstancePoolInstanceArrayOutput) ToInstancePoolInstanceArrayOutput() InstancePoolInstanceArrayOutput {
	return o
}

func (o InstancePoolInstanceArrayOutput) ToInstancePoolInstanceArrayOutputWithContext(ctx context.Context) InstancePoolInstanceArrayOutput {
	return o
}

func (o InstancePoolInstanceArrayOutput) Index(i pulumi.IntInput) InstancePoolInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancePoolInstance {
		return vs[0].([]InstancePoolInstance)[vs[1].(int)]
	}).(InstancePoolInstanceOutput)
}

type NlbServiceHealthcheck struct {
	// The healthcheck interval in seconds (default: `10`).
	Interval *int `pulumi:"interval"`
	// The healthcheck mode (`tcp`|`http`|`https`; default: `tcp`).
	Mode *string `pulumi:"mode"`
	// The NLB service (TCP/UDP) port.
	Port int `pulumi:"port"`
	// The healthcheck retries (default: `1`).
	Retries *int `pulumi:"retries"`
	// The healthcheck timeout (seconds; default: `5`).
	Timeout *int `pulumi:"timeout"`
	// The healthcheck TLS SNI server name (only if `mode` is `https`).
	TlsSni *string `pulumi:"tlsSni"`
	// The healthcheck URI (must be set only if `mode` is `http(s)`).
	Uri *string `pulumi:"uri"`
}

// NlbServiceHealthcheckInput is an input type that accepts NlbServiceHealthcheckArgs and NlbServiceHealthcheckOutput values.
// You can construct a concrete instance of `NlbServiceHealthcheckInput` via:
//
//	NlbServiceHealthcheckArgs{...}
type NlbServiceHealthcheckInput interface {
	pulumi.Input

	ToNlbServiceHealthcheckOutput() NlbServiceHealthcheckOutput
	ToNlbServiceHealthcheckOutputWithContext(context.Context) NlbServiceHealthcheckOutput
}

type NlbServiceHealthcheckArgs struct {
	// The healthcheck interval in seconds (default: `10`).
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// The healthcheck mode (`tcp`|`http`|`https`; default: `tcp`).
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// The NLB service (TCP/UDP) port.
	Port pulumi.IntInput `pulumi:"port"`
	// The healthcheck retries (default: `1`).
	Retries pulumi.IntPtrInput `pulumi:"retries"`
	// The healthcheck timeout (seconds; default: `5`).
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The healthcheck TLS SNI server name (only if `mode` is `https`).
	TlsSni pulumi.StringPtrInput `pulumi:"tlsSni"`
	// The healthcheck URI (must be set only if `mode` is `http(s)`).
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (NlbServiceHealthcheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NlbServiceHealthcheck)(nil)).Elem()
}

func (i NlbServiceHealthcheckArgs) ToNlbServiceHealthcheckOutput() NlbServiceHealthcheckOutput {
	return i.ToNlbServiceHealthcheckOutputWithContext(context.Background())
}

func (i NlbServiceHealthcheckArgs) ToNlbServiceHealthcheckOutputWithContext(ctx context.Context) NlbServiceHealthcheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NlbServiceHealthcheckOutput)
}

// NlbServiceHealthcheckArrayInput is an input type that accepts NlbServiceHealthcheckArray and NlbServiceHealthcheckArrayOutput values.
// You can construct a concrete instance of `NlbServiceHealthcheckArrayInput` via:
//
//	NlbServiceHealthcheckArray{ NlbServiceHealthcheckArgs{...} }
type NlbServiceHealthcheckArrayInput interface {
	pulumi.Input

	ToNlbServiceHealthcheckArrayOutput() NlbServiceHealthcheckArrayOutput
	ToNlbServiceHealthcheckArrayOutputWithContext(context.Context) NlbServiceHealthcheckArrayOutput
}

type NlbServiceHealthcheckArray []NlbServiceHealthcheckInput

func (NlbServiceHealthcheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NlbServiceHealthcheck)(nil)).Elem()
}

func (i NlbServiceHealthcheckArray) ToNlbServiceHealthcheckArrayOutput() NlbServiceHealthcheckArrayOutput {
	return i.ToNlbServiceHealthcheckArrayOutputWithContext(context.Background())
}

func (i NlbServiceHealthcheckArray) ToNlbServiceHealthcheckArrayOutputWithContext(ctx context.Context) NlbServiceHealthcheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NlbServiceHealthcheckArrayOutput)
}

type NlbServiceHealthcheckOutput struct{ *pulumi.OutputState }

func (NlbServiceHealthcheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NlbServiceHealthcheck)(nil)).Elem()
}

func (o NlbServiceHealthcheckOutput) ToNlbServiceHealthcheckOutput() NlbServiceHealthcheckOutput {
	return o
}

func (o NlbServiceHealthcheckOutput) ToNlbServiceHealthcheckOutputWithContext(ctx context.Context) NlbServiceHealthcheckOutput {
	return o
}

// The healthcheck interval in seconds (default: `10`).
func (o NlbServiceHealthcheckOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NlbServiceHealthcheck) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// The healthcheck mode (`tcp`|`http`|`https`; default: `tcp`).
func (o NlbServiceHealthcheckOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NlbServiceHealthcheck) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The NLB service (TCP/UDP) port.
func (o NlbServiceHealthcheckOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v NlbServiceHealthcheck) int { return v.Port }).(pulumi.IntOutput)
}

// The healthcheck retries (default: `1`).
func (o NlbServiceHealthcheckOutput) Retries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NlbServiceHealthcheck) *int { return v.Retries }).(pulumi.IntPtrOutput)
}

// The healthcheck timeout (seconds; default: `5`).
func (o NlbServiceHealthcheckOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NlbServiceHealthcheck) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The healthcheck TLS SNI server name (only if `mode` is `https`).
func (o NlbServiceHealthcheckOutput) TlsSni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NlbServiceHealthcheck) *string { return v.TlsSni }).(pulumi.StringPtrOutput)
}

// The healthcheck URI (must be set only if `mode` is `http(s)`).
func (o NlbServiceHealthcheckOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NlbServiceHealthcheck) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type NlbServiceHealthcheckArrayOutput struct{ *pulumi.OutputState }

func (NlbServiceHealthcheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NlbServiceHealthcheck)(nil)).Elem()
}

func (o NlbServiceHealthcheckArrayOutput) ToNlbServiceHealthcheckArrayOutput() NlbServiceHealthcheckArrayOutput {
	return o
}

func (o NlbServiceHealthcheckArrayOutput) ToNlbServiceHealthcheckArrayOutputWithContext(ctx context.Context) NlbServiceHealthcheckArrayOutput {
	return o
}

func (o NlbServiceHealthcheckArrayOutput) Index(i pulumi.IntInput) NlbServiceHealthcheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NlbServiceHealthcheck {
		return vs[0].([]NlbServiceHealthcheck)[vs[1].(int)]
	}).(NlbServiceHealthcheckOutput)
}

type SksClusterAudit struct {
	// The optional bearer token to include in the request header
	BearerToken *string `pulumi:"bearerToken"`
	// Whether to run the APIServer with the configured Kubernetes Audit
	Enabled *bool `pulumi:"enabled"`
	// The cluster API endpoint.
	Endpoint *string `pulumi:"endpoint"`
	// The Initial Backoff to wait before sending data to the remote server (default '10s')
	InitialBackoff *string `pulumi:"initialBackoff"`
}

// SksClusterAuditInput is an input type that accepts SksClusterAuditArgs and SksClusterAuditOutput values.
// You can construct a concrete instance of `SksClusterAuditInput` via:
//
//	SksClusterAuditArgs{...}
type SksClusterAuditInput interface {
	pulumi.Input

	ToSksClusterAuditOutput() SksClusterAuditOutput
	ToSksClusterAuditOutputWithContext(context.Context) SksClusterAuditOutput
}

type SksClusterAuditArgs struct {
	// The optional bearer token to include in the request header
	BearerToken pulumi.StringPtrInput `pulumi:"bearerToken"`
	// Whether to run the APIServer with the configured Kubernetes Audit
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The cluster API endpoint.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// The Initial Backoff to wait before sending data to the remote server (default '10s')
	InitialBackoff pulumi.StringPtrInput `pulumi:"initialBackoff"`
}

func (SksClusterAuditArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SksClusterAudit)(nil)).Elem()
}

func (i SksClusterAuditArgs) ToSksClusterAuditOutput() SksClusterAuditOutput {
	return i.ToSksClusterAuditOutputWithContext(context.Background())
}

func (i SksClusterAuditArgs) ToSksClusterAuditOutputWithContext(ctx context.Context) SksClusterAuditOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SksClusterAuditOutput)
}

func (i SksClusterAuditArgs) ToSksClusterAuditPtrOutput() SksClusterAuditPtrOutput {
	return i.ToSksClusterAuditPtrOutputWithContext(context.Background())
}

func (i SksClusterAuditArgs) ToSksClusterAuditPtrOutputWithContext(ctx context.Context) SksClusterAuditPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SksClusterAuditOutput).ToSksClusterAuditPtrOutputWithContext(ctx)
}

// SksClusterAuditPtrInput is an input type that accepts SksClusterAuditArgs, SksClusterAuditPtr and SksClusterAuditPtrOutput values.
// You can construct a concrete instance of `SksClusterAuditPtrInput` via:
//
//	        SksClusterAuditArgs{...}
//
//	or:
//
//	        nil
type SksClusterAuditPtrInput interface {
	pulumi.Input

	ToSksClusterAuditPtrOutput() SksClusterAuditPtrOutput
	ToSksClusterAuditPtrOutputWithContext(context.Context) SksClusterAuditPtrOutput
}

type sksClusterAuditPtrType SksClusterAuditArgs

func SksClusterAuditPtr(v *SksClusterAuditArgs) SksClusterAuditPtrInput {
	return (*sksClusterAuditPtrType)(v)
}

func (*sksClusterAuditPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SksClusterAudit)(nil)).Elem()
}

func (i *sksClusterAuditPtrType) ToSksClusterAuditPtrOutput() SksClusterAuditPtrOutput {
	return i.ToSksClusterAuditPtrOutputWithContext(context.Background())
}

func (i *sksClusterAuditPtrType) ToSksClusterAuditPtrOutputWithContext(ctx context.Context) SksClusterAuditPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SksClusterAuditPtrOutput)
}

type SksClusterAuditOutput struct{ *pulumi.OutputState }

func (SksClusterAuditOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SksClusterAudit)(nil)).Elem()
}

func (o SksClusterAuditOutput) ToSksClusterAuditOutput() SksClusterAuditOutput {
	return o
}

func (o SksClusterAuditOutput) ToSksClusterAuditOutputWithContext(ctx context.Context) SksClusterAuditOutput {
	return o
}

func (o SksClusterAuditOutput) ToSksClusterAuditPtrOutput() SksClusterAuditPtrOutput {
	return o.ToSksClusterAuditPtrOutputWithContext(context.Background())
}

func (o SksClusterAuditOutput) ToSksClusterAuditPtrOutputWithContext(ctx context.Context) SksClusterAuditPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SksClusterAudit) *SksClusterAudit {
		return &v
	}).(SksClusterAuditPtrOutput)
}

// The optional bearer token to include in the request header
func (o SksClusterAuditOutput) BearerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SksClusterAudit) *string { return v.BearerToken }).(pulumi.StringPtrOutput)
}

// Whether to run the APIServer with the configured Kubernetes Audit
func (o SksClusterAuditOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SksClusterAudit) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The cluster API endpoint.
func (o SksClusterAuditOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SksClusterAudit) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// The Initial Backoff to wait before sending data to the remote server (default '10s')
func (o SksClusterAuditOutput) InitialBackoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SksClusterAudit) *string { return v.InitialBackoff }).(pulumi.StringPtrOutput)
}

type SksClusterAuditPtrOutput struct{ *pulumi.OutputState }

func (SksClusterAuditPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SksClusterAudit)(nil)).Elem()
}

func (o SksClusterAuditPtrOutput) ToSksClusterAuditPtrOutput() SksClusterAuditPtrOutput {
	return o
}

func (o SksClusterAuditPtrOutput) ToSksClusterAuditPtrOutputWithContext(ctx context.Context) SksClusterAuditPtrOutput {
	return o
}

func (o SksClusterAuditPtrOutput) Elem() SksClusterAuditOutput {
	return o.ApplyT(func(v *SksClusterAudit) SksClusterAudit {
		if v != nil {
			return *v
		}
		var ret SksClusterAudit
		return ret
	}).(SksClusterAuditOutput)
}

// The optional bearer token to include in the request header
func (o SksClusterAuditPtrOutput) BearerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SksClusterAudit) *string {
		if v == nil {
			return nil
		}
		return v.BearerToken
	}).(pulumi.StringPtrOutput)
}

// Whether to run the APIServer with the configured Kubernetes Audit
func (o SksClusterAuditPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SksClusterAudit) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The cluster API endpoint.
func (o SksClusterAuditPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SksClusterAudit) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// The Initial Backoff to wait before sending data to the remote server (default '10s')
func (o SksClusterAuditPtrOutput) InitialBackoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SksClusterAudit) *string {
		if v == nil {
			return nil
		}
		return v.InitialBackoff
	}).(pulumi.StringPtrOutput)
}

type SksClusterOidc struct {
	// The OpenID client ID.
	ClientId string `pulumi:"clientId"`
	// An OpenID JWT claim to use as the user's group.
	GroupsClaim *string `pulumi:"groupsClaim"`
	// An OpenID prefix prepended to group claims.
	GroupsPrefix *string `pulumi:"groupsPrefix"`
	// The OpenID provider URL.
	IssuerUrl string `pulumi:"issuerUrl"`
	// A map of key/value pairs that describes a required claim in the OpenID Token.
	RequiredClaim map[string]string `pulumi:"requiredClaim"`
	// An OpenID JWT claim to use as the user name.
	UsernameClaim *string `pulumi:"usernameClaim"`
	// An OpenID prefix prepended to username claims.
	UsernamePrefix *string `pulumi:"usernamePrefix"`
}

// SksClusterOidcInput is an input type that accepts SksClusterOidcArgs and SksClusterOidcOutput values.
// You can construct a concrete instance of `SksClusterOidcInput` via:
//
//	SksClusterOidcArgs{...}
type SksClusterOidcInput interface {
	pulumi.Input

	ToSksClusterOidcOutput() SksClusterOidcOutput
	ToSksClusterOidcOutputWithContext(context.Context) SksClusterOidcOutput
}

type SksClusterOidcArgs struct {
	// The OpenID client ID.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// An OpenID JWT claim to use as the user's group.
	GroupsClaim pulumi.StringPtrInput `pulumi:"groupsClaim"`
	// An OpenID prefix prepended to group claims.
	GroupsPrefix pulumi.StringPtrInput `pulumi:"groupsPrefix"`
	// The OpenID provider URL.
	IssuerUrl pulumi.StringInput `pulumi:"issuerUrl"`
	// A map of key/value pairs that describes a required claim in the OpenID Token.
	RequiredClaim pulumi.StringMapInput `pulumi:"requiredClaim"`
	// An OpenID JWT claim to use as the user name.
	UsernameClaim pulumi.StringPtrInput `pulumi:"usernameClaim"`
	// An OpenID prefix prepended to username claims.
	UsernamePrefix pulumi.StringPtrInput `pulumi:"usernamePrefix"`
}

func (SksClusterOidcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SksClusterOidc)(nil)).Elem()
}

func (i SksClusterOidcArgs) ToSksClusterOidcOutput() SksClusterOidcOutput {
	return i.ToSksClusterOidcOutputWithContext(context.Background())
}

func (i SksClusterOidcArgs) ToSksClusterOidcOutputWithContext(ctx context.Context) SksClusterOidcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SksClusterOidcOutput)
}

func (i SksClusterOidcArgs) ToSksClusterOidcPtrOutput() SksClusterOidcPtrOutput {
	return i.ToSksClusterOidcPtrOutputWithContext(context.Background())
}

func (i SksClusterOidcArgs) ToSksClusterOidcPtrOutputWithContext(ctx context.Context) SksClusterOidcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SksClusterOidcOutput).ToSksClusterOidcPtrOutputWithContext(ctx)
}

// SksClusterOidcPtrInput is an input type that accepts SksClusterOidcArgs, SksClusterOidcPtr and SksClusterOidcPtrOutput values.
// You can construct a concrete instance of `SksClusterOidcPtrInput` via:
//
//	        SksClusterOidcArgs{...}
//
//	or:
//
//	        nil
type SksClusterOidcPtrInput interface {
	pulumi.Input

	ToSksClusterOidcPtrOutput() SksClusterOidcPtrOutput
	ToSksClusterOidcPtrOutputWithContext(context.Context) SksClusterOidcPtrOutput
}

type sksClusterOidcPtrType SksClusterOidcArgs

func SksClusterOidcPtr(v *SksClusterOidcArgs) SksClusterOidcPtrInput {
	return (*sksClusterOidcPtrType)(v)
}

func (*sksClusterOidcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SksClusterOidc)(nil)).Elem()
}

func (i *sksClusterOidcPtrType) ToSksClusterOidcPtrOutput() SksClusterOidcPtrOutput {
	return i.ToSksClusterOidcPtrOutputWithContext(context.Background())
}

func (i *sksClusterOidcPtrType) ToSksClusterOidcPtrOutputWithContext(ctx context.Context) SksClusterOidcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SksClusterOidcPtrOutput)
}

type SksClusterOidcOutput struct{ *pulumi.OutputState }

func (SksClusterOidcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SksClusterOidc)(nil)).Elem()
}

func (o SksClusterOidcOutput) ToSksClusterOidcOutput() SksClusterOidcOutput {
	return o
}

func (o SksClusterOidcOutput) ToSksClusterOidcOutputWithContext(ctx context.Context) SksClusterOidcOutput {
	return o
}

func (o SksClusterOidcOutput) ToSksClusterOidcPtrOutput() SksClusterOidcPtrOutput {
	return o.ToSksClusterOidcPtrOutputWithContext(context.Background())
}

func (o SksClusterOidcOutput) ToSksClusterOidcPtrOutputWithContext(ctx context.Context) SksClusterOidcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SksClusterOidc) *SksClusterOidc {
		return &v
	}).(SksClusterOidcPtrOutput)
}

// The OpenID client ID.
func (o SksClusterOidcOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v SksClusterOidc) string { return v.ClientId }).(pulumi.StringOutput)
}

// An OpenID JWT claim to use as the user's group.
func (o SksClusterOidcOutput) GroupsClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SksClusterOidc) *string { return v.GroupsClaim }).(pulumi.StringPtrOutput)
}

// An OpenID prefix prepended to group claims.
func (o SksClusterOidcOutput) GroupsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SksClusterOidc) *string { return v.GroupsPrefix }).(pulumi.StringPtrOutput)
}

// The OpenID provider URL.
func (o SksClusterOidcOutput) IssuerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v SksClusterOidc) string { return v.IssuerUrl }).(pulumi.StringOutput)
}

// A map of key/value pairs that describes a required claim in the OpenID Token.
func (o SksClusterOidcOutput) RequiredClaim() pulumi.StringMapOutput {
	return o.ApplyT(func(v SksClusterOidc) map[string]string { return v.RequiredClaim }).(pulumi.StringMapOutput)
}

// An OpenID JWT claim to use as the user name.
func (o SksClusterOidcOutput) UsernameClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SksClusterOidc) *string { return v.UsernameClaim }).(pulumi.StringPtrOutput)
}

// An OpenID prefix prepended to username claims.
func (o SksClusterOidcOutput) UsernamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SksClusterOidc) *string { return v.UsernamePrefix }).(pulumi.StringPtrOutput)
}

type SksClusterOidcPtrOutput struct{ *pulumi.OutputState }

func (SksClusterOidcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SksClusterOidc)(nil)).Elem()
}

func (o SksClusterOidcPtrOutput) ToSksClusterOidcPtrOutput() SksClusterOidcPtrOutput {
	return o
}

func (o SksClusterOidcPtrOutput) ToSksClusterOidcPtrOutputWithContext(ctx context.Context) SksClusterOidcPtrOutput {
	return o
}

func (o SksClusterOidcPtrOutput) Elem() SksClusterOidcOutput {
	return o.ApplyT(func(v *SksClusterOidc) SksClusterOidc {
		if v != nil {
			return *v
		}
		var ret SksClusterOidc
		return ret
	}).(SksClusterOidcOutput)
}

// The OpenID client ID.
func (o SksClusterOidcPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SksClusterOidc) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// An OpenID JWT claim to use as the user's group.
func (o SksClusterOidcPtrOutput) GroupsClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SksClusterOidc) *string {
		if v == nil {
			return nil
		}
		return v.GroupsClaim
	}).(pulumi.StringPtrOutput)
}

// An OpenID prefix prepended to group claims.
func (o SksClusterOidcPtrOutput) GroupsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SksClusterOidc) *string {
		if v == nil {
			return nil
		}
		return v.GroupsPrefix
	}).(pulumi.StringPtrOutput)
}

// The OpenID provider URL.
func (o SksClusterOidcPtrOutput) IssuerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SksClusterOidc) *string {
		if v == nil {
			return nil
		}
		return &v.IssuerUrl
	}).(pulumi.StringPtrOutput)
}

// A map of key/value pairs that describes a required claim in the OpenID Token.
func (o SksClusterOidcPtrOutput) RequiredClaim() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SksClusterOidc) map[string]string {
		if v == nil {
			return nil
		}
		return v.RequiredClaim
	}).(pulumi.StringMapOutput)
}

// An OpenID JWT claim to use as the user name.
func (o SksClusterOidcPtrOutput) UsernameClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SksClusterOidc) *string {
		if v == nil {
			return nil
		}
		return v.UsernameClaim
	}).(pulumi.StringPtrOutput)
}

// An OpenID prefix prepended to username claims.
func (o SksClusterOidcPtrOutput) UsernamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SksClusterOidc) *string {
		if v == nil {
			return nil
		}
		return v.UsernamePrefix
	}).(pulumi.StringPtrOutput)
}

type SksNodepoolKubeletImageGc struct {
	// The percent of disk usage after which image garbage collection is always run
	HighThreshold *int `pulumi:"highThreshold"`
	// The percent of disk usage before which image garbage collection is never run
	LowThreshold *int `pulumi:"lowThreshold"`
	// The minimum age for an unused image before it is garbage collected (k8s duration format, eg. 1h)
	MinAge *string `pulumi:"minAge"`
}

// SksNodepoolKubeletImageGcInput is an input type that accepts SksNodepoolKubeletImageGcArgs and SksNodepoolKubeletImageGcOutput values.
// You can construct a concrete instance of `SksNodepoolKubeletImageGcInput` via:
//
//	SksNodepoolKubeletImageGcArgs{...}
type SksNodepoolKubeletImageGcInput interface {
	pulumi.Input

	ToSksNodepoolKubeletImageGcOutput() SksNodepoolKubeletImageGcOutput
	ToSksNodepoolKubeletImageGcOutputWithContext(context.Context) SksNodepoolKubeletImageGcOutput
}

type SksNodepoolKubeletImageGcArgs struct {
	// The percent of disk usage after which image garbage collection is always run
	HighThreshold pulumi.IntPtrInput `pulumi:"highThreshold"`
	// The percent of disk usage before which image garbage collection is never run
	LowThreshold pulumi.IntPtrInput `pulumi:"lowThreshold"`
	// The minimum age for an unused image before it is garbage collected (k8s duration format, eg. 1h)
	MinAge pulumi.StringPtrInput `pulumi:"minAge"`
}

func (SksNodepoolKubeletImageGcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SksNodepoolKubeletImageGc)(nil)).Elem()
}

func (i SksNodepoolKubeletImageGcArgs) ToSksNodepoolKubeletImageGcOutput() SksNodepoolKubeletImageGcOutput {
	return i.ToSksNodepoolKubeletImageGcOutputWithContext(context.Background())
}

func (i SksNodepoolKubeletImageGcArgs) ToSksNodepoolKubeletImageGcOutputWithContext(ctx context.Context) SksNodepoolKubeletImageGcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SksNodepoolKubeletImageGcOutput)
}

// SksNodepoolKubeletImageGcArrayInput is an input type that accepts SksNodepoolKubeletImageGcArray and SksNodepoolKubeletImageGcArrayOutput values.
// You can construct a concrete instance of `SksNodepoolKubeletImageGcArrayInput` via:
//
//	SksNodepoolKubeletImageGcArray{ SksNodepoolKubeletImageGcArgs{...} }
type SksNodepoolKubeletImageGcArrayInput interface {
	pulumi.Input

	ToSksNodepoolKubeletImageGcArrayOutput() SksNodepoolKubeletImageGcArrayOutput
	ToSksNodepoolKubeletImageGcArrayOutputWithContext(context.Context) SksNodepoolKubeletImageGcArrayOutput
}

type SksNodepoolKubeletImageGcArray []SksNodepoolKubeletImageGcInput

func (SksNodepoolKubeletImageGcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SksNodepoolKubeletImageGc)(nil)).Elem()
}

func (i SksNodepoolKubeletImageGcArray) ToSksNodepoolKubeletImageGcArrayOutput() SksNodepoolKubeletImageGcArrayOutput {
	return i.ToSksNodepoolKubeletImageGcArrayOutputWithContext(context.Background())
}

func (i SksNodepoolKubeletImageGcArray) ToSksNodepoolKubeletImageGcArrayOutputWithContext(ctx context.Context) SksNodepoolKubeletImageGcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SksNodepoolKubeletImageGcArrayOutput)
}

type SksNodepoolKubeletImageGcOutput struct{ *pulumi.OutputState }

func (SksNodepoolKubeletImageGcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SksNodepoolKubeletImageGc)(nil)).Elem()
}

func (o SksNodepoolKubeletImageGcOutput) ToSksNodepoolKubeletImageGcOutput() SksNodepoolKubeletImageGcOutput {
	return o
}

func (o SksNodepoolKubeletImageGcOutput) ToSksNodepoolKubeletImageGcOutputWithContext(ctx context.Context) SksNodepoolKubeletImageGcOutput {
	return o
}

// The percent of disk usage after which image garbage collection is always run
func (o SksNodepoolKubeletImageGcOutput) HighThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SksNodepoolKubeletImageGc) *int { return v.HighThreshold }).(pulumi.IntPtrOutput)
}

// The percent of disk usage before which image garbage collection is never run
func (o SksNodepoolKubeletImageGcOutput) LowThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SksNodepoolKubeletImageGc) *int { return v.LowThreshold }).(pulumi.IntPtrOutput)
}

// The minimum age for an unused image before it is garbage collected (k8s duration format, eg. 1h)
func (o SksNodepoolKubeletImageGcOutput) MinAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SksNodepoolKubeletImageGc) *string { return v.MinAge }).(pulumi.StringPtrOutput)
}

type SksNodepoolKubeletImageGcArrayOutput struct{ *pulumi.OutputState }

func (SksNodepoolKubeletImageGcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SksNodepoolKubeletImageGc)(nil)).Elem()
}

func (o SksNodepoolKubeletImageGcArrayOutput) ToSksNodepoolKubeletImageGcArrayOutput() SksNodepoolKubeletImageGcArrayOutput {
	return o
}

func (o SksNodepoolKubeletImageGcArrayOutput) ToSksNodepoolKubeletImageGcArrayOutputWithContext(ctx context.Context) SksNodepoolKubeletImageGcArrayOutput {
	return o
}

func (o SksNodepoolKubeletImageGcArrayOutput) Index(i pulumi.IntInput) SksNodepoolKubeletImageGcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SksNodepoolKubeletImageGc {
		return vs[0].([]SksNodepoolKubeletImageGc)[vs[1].(int)]
	}).(SksNodepoolKubeletImageGcOutput)
}

type SosBucketPolicyTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// SosBucketPolicyTimeoutsInput is an input type that accepts SosBucketPolicyTimeoutsArgs and SosBucketPolicyTimeoutsOutput values.
// You can construct a concrete instance of `SosBucketPolicyTimeoutsInput` via:
//
//	SosBucketPolicyTimeoutsArgs{...}
type SosBucketPolicyTimeoutsInput interface {
	pulumi.Input

	ToSosBucketPolicyTimeoutsOutput() SosBucketPolicyTimeoutsOutput
	ToSosBucketPolicyTimeoutsOutputWithContext(context.Context) SosBucketPolicyTimeoutsOutput
}

type SosBucketPolicyTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (SosBucketPolicyTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SosBucketPolicyTimeouts)(nil)).Elem()
}

func (i SosBucketPolicyTimeoutsArgs) ToSosBucketPolicyTimeoutsOutput() SosBucketPolicyTimeoutsOutput {
	return i.ToSosBucketPolicyTimeoutsOutputWithContext(context.Background())
}

func (i SosBucketPolicyTimeoutsArgs) ToSosBucketPolicyTimeoutsOutputWithContext(ctx context.Context) SosBucketPolicyTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SosBucketPolicyTimeoutsOutput)
}

func (i SosBucketPolicyTimeoutsArgs) ToSosBucketPolicyTimeoutsPtrOutput() SosBucketPolicyTimeoutsPtrOutput {
	return i.ToSosBucketPolicyTimeoutsPtrOutputWithContext(context.Background())
}

func (i SosBucketPolicyTimeoutsArgs) ToSosBucketPolicyTimeoutsPtrOutputWithContext(ctx context.Context) SosBucketPolicyTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SosBucketPolicyTimeoutsOutput).ToSosBucketPolicyTimeoutsPtrOutputWithContext(ctx)
}

// SosBucketPolicyTimeoutsPtrInput is an input type that accepts SosBucketPolicyTimeoutsArgs, SosBucketPolicyTimeoutsPtr and SosBucketPolicyTimeoutsPtrOutput values.
// You can construct a concrete instance of `SosBucketPolicyTimeoutsPtrInput` via:
//
//	        SosBucketPolicyTimeoutsArgs{...}
//
//	or:
//
//	        nil
type SosBucketPolicyTimeoutsPtrInput interface {
	pulumi.Input

	ToSosBucketPolicyTimeoutsPtrOutput() SosBucketPolicyTimeoutsPtrOutput
	ToSosBucketPolicyTimeoutsPtrOutputWithContext(context.Context) SosBucketPolicyTimeoutsPtrOutput
}

type sosBucketPolicyTimeoutsPtrType SosBucketPolicyTimeoutsArgs

func SosBucketPolicyTimeoutsPtr(v *SosBucketPolicyTimeoutsArgs) SosBucketPolicyTimeoutsPtrInput {
	return (*sosBucketPolicyTimeoutsPtrType)(v)
}

func (*sosBucketPolicyTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SosBucketPolicyTimeouts)(nil)).Elem()
}

func (i *sosBucketPolicyTimeoutsPtrType) ToSosBucketPolicyTimeoutsPtrOutput() SosBucketPolicyTimeoutsPtrOutput {
	return i.ToSosBucketPolicyTimeoutsPtrOutputWithContext(context.Background())
}

func (i *sosBucketPolicyTimeoutsPtrType) ToSosBucketPolicyTimeoutsPtrOutputWithContext(ctx context.Context) SosBucketPolicyTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SosBucketPolicyTimeoutsPtrOutput)
}

type SosBucketPolicyTimeoutsOutput struct{ *pulumi.OutputState }

func (SosBucketPolicyTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SosBucketPolicyTimeouts)(nil)).Elem()
}

func (o SosBucketPolicyTimeoutsOutput) ToSosBucketPolicyTimeoutsOutput() SosBucketPolicyTimeoutsOutput {
	return o
}

func (o SosBucketPolicyTimeoutsOutput) ToSosBucketPolicyTimeoutsOutputWithContext(ctx context.Context) SosBucketPolicyTimeoutsOutput {
	return o
}

func (o SosBucketPolicyTimeoutsOutput) ToSosBucketPolicyTimeoutsPtrOutput() SosBucketPolicyTimeoutsPtrOutput {
	return o.ToSosBucketPolicyTimeoutsPtrOutputWithContext(context.Background())
}

func (o SosBucketPolicyTimeoutsOutput) ToSosBucketPolicyTimeoutsPtrOutputWithContext(ctx context.Context) SosBucketPolicyTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SosBucketPolicyTimeouts) *SosBucketPolicyTimeouts {
		return &v
	}).(SosBucketPolicyTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o SosBucketPolicyTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SosBucketPolicyTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o SosBucketPolicyTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SosBucketPolicyTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o SosBucketPolicyTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SosBucketPolicyTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o SosBucketPolicyTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SosBucketPolicyTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type SosBucketPolicyTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (SosBucketPolicyTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SosBucketPolicyTimeouts)(nil)).Elem()
}

func (o SosBucketPolicyTimeoutsPtrOutput) ToSosBucketPolicyTimeoutsPtrOutput() SosBucketPolicyTimeoutsPtrOutput {
	return o
}

func (o SosBucketPolicyTimeoutsPtrOutput) ToSosBucketPolicyTimeoutsPtrOutputWithContext(ctx context.Context) SosBucketPolicyTimeoutsPtrOutput {
	return o
}

func (o SosBucketPolicyTimeoutsPtrOutput) Elem() SosBucketPolicyTimeoutsOutput {
	return o.ApplyT(func(v *SosBucketPolicyTimeouts) SosBucketPolicyTimeouts {
		if v != nil {
			return *v
		}
		var ret SosBucketPolicyTimeouts
		return ret
	}).(SosBucketPolicyTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o SosBucketPolicyTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SosBucketPolicyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o SosBucketPolicyTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SosBucketPolicyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o SosBucketPolicyTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SosBucketPolicyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o SosBucketPolicyTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SosBucketPolicyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type GetBlockStorageVolumeInstance struct {
	// Instance ID.
	Id string `pulumi:"id"`
}

// GetBlockStorageVolumeInstanceInput is an input type that accepts GetBlockStorageVolumeInstanceArgs and GetBlockStorageVolumeInstanceOutput values.
// You can construct a concrete instance of `GetBlockStorageVolumeInstanceInput` via:
//
//	GetBlockStorageVolumeInstanceArgs{...}
type GetBlockStorageVolumeInstanceInput interface {
	pulumi.Input

	ToGetBlockStorageVolumeInstanceOutput() GetBlockStorageVolumeInstanceOutput
	ToGetBlockStorageVolumeInstanceOutputWithContext(context.Context) GetBlockStorageVolumeInstanceOutput
}

type GetBlockStorageVolumeInstanceArgs struct {
	// Instance ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetBlockStorageVolumeInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockStorageVolumeInstance)(nil)).Elem()
}

func (i GetBlockStorageVolumeInstanceArgs) ToGetBlockStorageVolumeInstanceOutput() GetBlockStorageVolumeInstanceOutput {
	return i.ToGetBlockStorageVolumeInstanceOutputWithContext(context.Background())
}

func (i GetBlockStorageVolumeInstanceArgs) ToGetBlockStorageVolumeInstanceOutputWithContext(ctx context.Context) GetBlockStorageVolumeInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockStorageVolumeInstanceOutput)
}

type GetBlockStorageVolumeInstanceOutput struct{ *pulumi.OutputState }

func (GetBlockStorageVolumeInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockStorageVolumeInstance)(nil)).Elem()
}

func (o GetBlockStorageVolumeInstanceOutput) ToGetBlockStorageVolumeInstanceOutput() GetBlockStorageVolumeInstanceOutput {
	return o
}

func (o GetBlockStorageVolumeInstanceOutput) ToGetBlockStorageVolumeInstanceOutputWithContext(ctx context.Context) GetBlockStorageVolumeInstanceOutput {
	return o
}

// Instance ID.
func (o GetBlockStorageVolumeInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockStorageVolumeInstance) string { return v.Id }).(pulumi.StringOutput)
}

type GetBlockStorageVolumeSnapshotType struct {
	// Snapshot ID.
	Id string `pulumi:"id"`
}

// GetBlockStorageVolumeSnapshotTypeInput is an input type that accepts GetBlockStorageVolumeSnapshotTypeArgs and GetBlockStorageVolumeSnapshotTypeOutput values.
// You can construct a concrete instance of `GetBlockStorageVolumeSnapshotTypeInput` via:
//
//	GetBlockStorageVolumeSnapshotTypeArgs{...}
type GetBlockStorageVolumeSnapshotTypeInput interface {
	pulumi.Input

	ToGetBlockStorageVolumeSnapshotTypeOutput() GetBlockStorageVolumeSnapshotTypeOutput
	ToGetBlockStorageVolumeSnapshotTypeOutputWithContext(context.Context) GetBlockStorageVolumeSnapshotTypeOutput
}

type GetBlockStorageVolumeSnapshotTypeArgs struct {
	// Snapshot ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetBlockStorageVolumeSnapshotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockStorageVolumeSnapshotType)(nil)).Elem()
}

func (i GetBlockStorageVolumeSnapshotTypeArgs) ToGetBlockStorageVolumeSnapshotTypeOutput() GetBlockStorageVolumeSnapshotTypeOutput {
	return i.ToGetBlockStorageVolumeSnapshotTypeOutputWithContext(context.Background())
}

func (i GetBlockStorageVolumeSnapshotTypeArgs) ToGetBlockStorageVolumeSnapshotTypeOutputWithContext(ctx context.Context) GetBlockStorageVolumeSnapshotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockStorageVolumeSnapshotTypeOutput)
}

// GetBlockStorageVolumeSnapshotTypeArrayInput is an input type that accepts GetBlockStorageVolumeSnapshotTypeArray and GetBlockStorageVolumeSnapshotTypeArrayOutput values.
// You can construct a concrete instance of `GetBlockStorageVolumeSnapshotTypeArrayInput` via:
//
//	GetBlockStorageVolumeSnapshotTypeArray{ GetBlockStorageVolumeSnapshotTypeArgs{...} }
type GetBlockStorageVolumeSnapshotTypeArrayInput interface {
	pulumi.Input

	ToGetBlockStorageVolumeSnapshotTypeArrayOutput() GetBlockStorageVolumeSnapshotTypeArrayOutput
	ToGetBlockStorageVolumeSnapshotTypeArrayOutputWithContext(context.Context) GetBlockStorageVolumeSnapshotTypeArrayOutput
}

type GetBlockStorageVolumeSnapshotTypeArray []GetBlockStorageVolumeSnapshotTypeInput

func (GetBlockStorageVolumeSnapshotTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockStorageVolumeSnapshotType)(nil)).Elem()
}

func (i GetBlockStorageVolumeSnapshotTypeArray) ToGetBlockStorageVolumeSnapshotTypeArrayOutput() GetBlockStorageVolumeSnapshotTypeArrayOutput {
	return i.ToGetBlockStorageVolumeSnapshotTypeArrayOutputWithContext(context.Background())
}

func (i GetBlockStorageVolumeSnapshotTypeArray) ToGetBlockStorageVolumeSnapshotTypeArrayOutputWithContext(ctx context.Context) GetBlockStorageVolumeSnapshotTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockStorageVolumeSnapshotTypeArrayOutput)
}

type GetBlockStorageVolumeSnapshotTypeOutput struct{ *pulumi.OutputState }

func (GetBlockStorageVolumeSnapshotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockStorageVolumeSnapshotType)(nil)).Elem()
}

func (o GetBlockStorageVolumeSnapshotTypeOutput) ToGetBlockStorageVolumeSnapshotTypeOutput() GetBlockStorageVolumeSnapshotTypeOutput {
	return o
}

func (o GetBlockStorageVolumeSnapshotTypeOutput) ToGetBlockStorageVolumeSnapshotTypeOutputWithContext(ctx context.Context) GetBlockStorageVolumeSnapshotTypeOutput {
	return o
}

// Snapshot ID.
func (o GetBlockStorageVolumeSnapshotTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockStorageVolumeSnapshotType) string { return v.Id }).(pulumi.StringOutput)
}

type GetBlockStorageVolumeSnapshotTypeArrayOutput struct{ *pulumi.OutputState }

func (GetBlockStorageVolumeSnapshotTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockStorageVolumeSnapshotType)(nil)).Elem()
}

func (o GetBlockStorageVolumeSnapshotTypeArrayOutput) ToGetBlockStorageVolumeSnapshotTypeArrayOutput() GetBlockStorageVolumeSnapshotTypeArrayOutput {
	return o
}

func (o GetBlockStorageVolumeSnapshotTypeArrayOutput) ToGetBlockStorageVolumeSnapshotTypeArrayOutputWithContext(ctx context.Context) GetBlockStorageVolumeSnapshotTypeArrayOutput {
	return o
}

func (o GetBlockStorageVolumeSnapshotTypeArrayOutput) Index(i pulumi.IntInput) GetBlockStorageVolumeSnapshotTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBlockStorageVolumeSnapshotType {
		return vs[0].([]GetBlockStorageVolumeSnapshotType)[vs[1].(int)]
	}).(GetBlockStorageVolumeSnapshotTypeOutput)
}

type GetBlockStorageVolumeSnapshotTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
}

// GetBlockStorageVolumeSnapshotTimeoutsInput is an input type that accepts GetBlockStorageVolumeSnapshotTimeoutsArgs and GetBlockStorageVolumeSnapshotTimeoutsOutput values.
// You can construct a concrete instance of `GetBlockStorageVolumeSnapshotTimeoutsInput` via:
//
//	GetBlockStorageVolumeSnapshotTimeoutsArgs{...}
type GetBlockStorageVolumeSnapshotTimeoutsInput interface {
	pulumi.Input

	ToGetBlockStorageVolumeSnapshotTimeoutsOutput() GetBlockStorageVolumeSnapshotTimeoutsOutput
	ToGetBlockStorageVolumeSnapshotTimeoutsOutputWithContext(context.Context) GetBlockStorageVolumeSnapshotTimeoutsOutput
}

type GetBlockStorageVolumeSnapshotTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
}

func (GetBlockStorageVolumeSnapshotTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockStorageVolumeSnapshotTimeouts)(nil)).Elem()
}

func (i GetBlockStorageVolumeSnapshotTimeoutsArgs) ToGetBlockStorageVolumeSnapshotTimeoutsOutput() GetBlockStorageVolumeSnapshotTimeoutsOutput {
	return i.ToGetBlockStorageVolumeSnapshotTimeoutsOutputWithContext(context.Background())
}

func (i GetBlockStorageVolumeSnapshotTimeoutsArgs) ToGetBlockStorageVolumeSnapshotTimeoutsOutputWithContext(ctx context.Context) GetBlockStorageVolumeSnapshotTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockStorageVolumeSnapshotTimeoutsOutput)
}

func (i GetBlockStorageVolumeSnapshotTimeoutsArgs) ToGetBlockStorageVolumeSnapshotTimeoutsPtrOutput() GetBlockStorageVolumeSnapshotTimeoutsPtrOutput {
	return i.ToGetBlockStorageVolumeSnapshotTimeoutsPtrOutputWithContext(context.Background())
}

func (i GetBlockStorageVolumeSnapshotTimeoutsArgs) ToGetBlockStorageVolumeSnapshotTimeoutsPtrOutputWithContext(ctx context.Context) GetBlockStorageVolumeSnapshotTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockStorageVolumeSnapshotTimeoutsOutput).ToGetBlockStorageVolumeSnapshotTimeoutsPtrOutputWithContext(ctx)
}

// GetBlockStorageVolumeSnapshotTimeoutsPtrInput is an input type that accepts GetBlockStorageVolumeSnapshotTimeoutsArgs, GetBlockStorageVolumeSnapshotTimeoutsPtr and GetBlockStorageVolumeSnapshotTimeoutsPtrOutput values.
// You can construct a concrete instance of `GetBlockStorageVolumeSnapshotTimeoutsPtrInput` via:
//
//	        GetBlockStorageVolumeSnapshotTimeoutsArgs{...}
//
//	or:
//
//	        nil
type GetBlockStorageVolumeSnapshotTimeoutsPtrInput interface {
	pulumi.Input

	ToGetBlockStorageVolumeSnapshotTimeoutsPtrOutput() GetBlockStorageVolumeSnapshotTimeoutsPtrOutput
	ToGetBlockStorageVolumeSnapshotTimeoutsPtrOutputWithContext(context.Context) GetBlockStorageVolumeSnapshotTimeoutsPtrOutput
}

type getBlockStorageVolumeSnapshotTimeoutsPtrType GetBlockStorageVolumeSnapshotTimeoutsArgs

func GetBlockStorageVolumeSnapshotTimeoutsPtr(v *GetBlockStorageVolumeSnapshotTimeoutsArgs) GetBlockStorageVolumeSnapshotTimeoutsPtrInput {
	return (*getBlockStorageVolumeSnapshotTimeoutsPtrType)(v)
}

func (*getBlockStorageVolumeSnapshotTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBlockStorageVolumeSnapshotTimeouts)(nil)).Elem()
}

func (i *getBlockStorageVolumeSnapshotTimeoutsPtrType) ToGetBlockStorageVolumeSnapshotTimeoutsPtrOutput() GetBlockStorageVolumeSnapshotTimeoutsPtrOutput {
	return i.ToGetBlockStorageVolumeSnapshotTimeoutsPtrOutputWithContext(context.Background())
}

func (i *getBlockStorageVolumeSnapshotTimeoutsPtrType) ToGetBlockStorageVolumeSnapshotTimeoutsPtrOutputWithContext(ctx context.Context) GetBlockStorageVolumeSnapshotTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockStorageVolumeSnapshotTimeoutsPtrOutput)
}

type GetBlockStorageVolumeSnapshotTimeoutsOutput struct{ *pulumi.OutputState }

func (GetBlockStorageVolumeSnapshotTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockStorageVolumeSnapshotTimeouts)(nil)).Elem()
}

func (o GetBlockStorageVolumeSnapshotTimeoutsOutput) ToGetBlockStorageVolumeSnapshotTimeoutsOutput() GetBlockStorageVolumeSnapshotTimeoutsOutput {
	return o
}

func (o GetBlockStorageVolumeSnapshotTimeoutsOutput) ToGetBlockStorageVolumeSnapshotTimeoutsOutputWithContext(ctx context.Context) GetBlockStorageVolumeSnapshotTimeoutsOutput {
	return o
}

func (o GetBlockStorageVolumeSnapshotTimeoutsOutput) ToGetBlockStorageVolumeSnapshotTimeoutsPtrOutput() GetBlockStorageVolumeSnapshotTimeoutsPtrOutput {
	return o.ToGetBlockStorageVolumeSnapshotTimeoutsPtrOutputWithContext(context.Background())
}

func (o GetBlockStorageVolumeSnapshotTimeoutsOutput) ToGetBlockStorageVolumeSnapshotTimeoutsPtrOutputWithContext(ctx context.Context) GetBlockStorageVolumeSnapshotTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetBlockStorageVolumeSnapshotTimeouts) *GetBlockStorageVolumeSnapshotTimeouts {
		return &v
	}).(GetBlockStorageVolumeSnapshotTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o GetBlockStorageVolumeSnapshotTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBlockStorageVolumeSnapshotTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

type GetBlockStorageVolumeSnapshotTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (GetBlockStorageVolumeSnapshotTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBlockStorageVolumeSnapshotTimeouts)(nil)).Elem()
}

func (o GetBlockStorageVolumeSnapshotTimeoutsPtrOutput) ToGetBlockStorageVolumeSnapshotTimeoutsPtrOutput() GetBlockStorageVolumeSnapshotTimeoutsPtrOutput {
	return o
}

func (o GetBlockStorageVolumeSnapshotTimeoutsPtrOutput) ToGetBlockStorageVolumeSnapshotTimeoutsPtrOutputWithContext(ctx context.Context) GetBlockStorageVolumeSnapshotTimeoutsPtrOutput {
	return o
}

func (o GetBlockStorageVolumeSnapshotTimeoutsPtrOutput) Elem() GetBlockStorageVolumeSnapshotTimeoutsOutput {
	return o.ApplyT(func(v *GetBlockStorageVolumeSnapshotTimeouts) GetBlockStorageVolumeSnapshotTimeouts {
		if v != nil {
			return *v
		}
		var ret GetBlockStorageVolumeSnapshotTimeouts
		return ret
	}).(GetBlockStorageVolumeSnapshotTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o GetBlockStorageVolumeSnapshotTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBlockStorageVolumeSnapshotTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

type GetBlockStorageVolumeSnapshotVolume struct {
	// Volume ID.
	Id string `pulumi:"id"`
}

// GetBlockStorageVolumeSnapshotVolumeInput is an input type that accepts GetBlockStorageVolumeSnapshotVolumeArgs and GetBlockStorageVolumeSnapshotVolumeOutput values.
// You can construct a concrete instance of `GetBlockStorageVolumeSnapshotVolumeInput` via:
//
//	GetBlockStorageVolumeSnapshotVolumeArgs{...}
type GetBlockStorageVolumeSnapshotVolumeInput interface {
	pulumi.Input

	ToGetBlockStorageVolumeSnapshotVolumeOutput() GetBlockStorageVolumeSnapshotVolumeOutput
	ToGetBlockStorageVolumeSnapshotVolumeOutputWithContext(context.Context) GetBlockStorageVolumeSnapshotVolumeOutput
}

type GetBlockStorageVolumeSnapshotVolumeArgs struct {
	// Volume ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetBlockStorageVolumeSnapshotVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockStorageVolumeSnapshotVolume)(nil)).Elem()
}

func (i GetBlockStorageVolumeSnapshotVolumeArgs) ToGetBlockStorageVolumeSnapshotVolumeOutput() GetBlockStorageVolumeSnapshotVolumeOutput {
	return i.ToGetBlockStorageVolumeSnapshotVolumeOutputWithContext(context.Background())
}

func (i GetBlockStorageVolumeSnapshotVolumeArgs) ToGetBlockStorageVolumeSnapshotVolumeOutputWithContext(ctx context.Context) GetBlockStorageVolumeSnapshotVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockStorageVolumeSnapshotVolumeOutput)
}

type GetBlockStorageVolumeSnapshotVolumeOutput struct{ *pulumi.OutputState }

func (GetBlockStorageVolumeSnapshotVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockStorageVolumeSnapshotVolume)(nil)).Elem()
}

func (o GetBlockStorageVolumeSnapshotVolumeOutput) ToGetBlockStorageVolumeSnapshotVolumeOutput() GetBlockStorageVolumeSnapshotVolumeOutput {
	return o
}

func (o GetBlockStorageVolumeSnapshotVolumeOutput) ToGetBlockStorageVolumeSnapshotVolumeOutputWithContext(ctx context.Context) GetBlockStorageVolumeSnapshotVolumeOutput {
	return o
}

// Volume ID.
func (o GetBlockStorageVolumeSnapshotVolumeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockStorageVolumeSnapshotVolume) string { return v.Id }).(pulumi.StringOutput)
}

type GetBlockStorageVolumeTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
}

// GetBlockStorageVolumeTimeoutsInput is an input type that accepts GetBlockStorageVolumeTimeoutsArgs and GetBlockStorageVolumeTimeoutsOutput values.
// You can construct a concrete instance of `GetBlockStorageVolumeTimeoutsInput` via:
//
//	GetBlockStorageVolumeTimeoutsArgs{...}
type GetBlockStorageVolumeTimeoutsInput interface {
	pulumi.Input

	ToGetBlockStorageVolumeTimeoutsOutput() GetBlockStorageVolumeTimeoutsOutput
	ToGetBlockStorageVolumeTimeoutsOutputWithContext(context.Context) GetBlockStorageVolumeTimeoutsOutput
}

type GetBlockStorageVolumeTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
}

func (GetBlockStorageVolumeTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockStorageVolumeTimeouts)(nil)).Elem()
}

func (i GetBlockStorageVolumeTimeoutsArgs) ToGetBlockStorageVolumeTimeoutsOutput() GetBlockStorageVolumeTimeoutsOutput {
	return i.ToGetBlockStorageVolumeTimeoutsOutputWithContext(context.Background())
}

func (i GetBlockStorageVolumeTimeoutsArgs) ToGetBlockStorageVolumeTimeoutsOutputWithContext(ctx context.Context) GetBlockStorageVolumeTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockStorageVolumeTimeoutsOutput)
}

func (i GetBlockStorageVolumeTimeoutsArgs) ToGetBlockStorageVolumeTimeoutsPtrOutput() GetBlockStorageVolumeTimeoutsPtrOutput {
	return i.ToGetBlockStorageVolumeTimeoutsPtrOutputWithContext(context.Background())
}

func (i GetBlockStorageVolumeTimeoutsArgs) ToGetBlockStorageVolumeTimeoutsPtrOutputWithContext(ctx context.Context) GetBlockStorageVolumeTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockStorageVolumeTimeoutsOutput).ToGetBlockStorageVolumeTimeoutsPtrOutputWithContext(ctx)
}

// GetBlockStorageVolumeTimeoutsPtrInput is an input type that accepts GetBlockStorageVolumeTimeoutsArgs, GetBlockStorageVolumeTimeoutsPtr and GetBlockStorageVolumeTimeoutsPtrOutput values.
// You can construct a concrete instance of `GetBlockStorageVolumeTimeoutsPtrInput` via:
//
//	        GetBlockStorageVolumeTimeoutsArgs{...}
//
//	or:
//
//	        nil
type GetBlockStorageVolumeTimeoutsPtrInput interface {
	pulumi.Input

	ToGetBlockStorageVolumeTimeoutsPtrOutput() GetBlockStorageVolumeTimeoutsPtrOutput
	ToGetBlockStorageVolumeTimeoutsPtrOutputWithContext(context.Context) GetBlockStorageVolumeTimeoutsPtrOutput
}

type getBlockStorageVolumeTimeoutsPtrType GetBlockStorageVolumeTimeoutsArgs

func GetBlockStorageVolumeTimeoutsPtr(v *GetBlockStorageVolumeTimeoutsArgs) GetBlockStorageVolumeTimeoutsPtrInput {
	return (*getBlockStorageVolumeTimeoutsPtrType)(v)
}

func (*getBlockStorageVolumeTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBlockStorageVolumeTimeouts)(nil)).Elem()
}

func (i *getBlockStorageVolumeTimeoutsPtrType) ToGetBlockStorageVolumeTimeoutsPtrOutput() GetBlockStorageVolumeTimeoutsPtrOutput {
	return i.ToGetBlockStorageVolumeTimeoutsPtrOutputWithContext(context.Background())
}

func (i *getBlockStorageVolumeTimeoutsPtrType) ToGetBlockStorageVolumeTimeoutsPtrOutputWithContext(ctx context.Context) GetBlockStorageVolumeTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockStorageVolumeTimeoutsPtrOutput)
}

type GetBlockStorageVolumeTimeoutsOutput struct{ *pulumi.OutputState }

func (GetBlockStorageVolumeTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockStorageVolumeTimeouts)(nil)).Elem()
}

func (o GetBlockStorageVolumeTimeoutsOutput) ToGetBlockStorageVolumeTimeoutsOutput() GetBlockStorageVolumeTimeoutsOutput {
	return o
}

func (o GetBlockStorageVolumeTimeoutsOutput) ToGetBlockStorageVolumeTimeoutsOutputWithContext(ctx context.Context) GetBlockStorageVolumeTimeoutsOutput {
	return o
}

func (o GetBlockStorageVolumeTimeoutsOutput) ToGetBlockStorageVolumeTimeoutsPtrOutput() GetBlockStorageVolumeTimeoutsPtrOutput {
	return o.ToGetBlockStorageVolumeTimeoutsPtrOutputWithContext(context.Background())
}

func (o GetBlockStorageVolumeTimeoutsOutput) ToGetBlockStorageVolumeTimeoutsPtrOutputWithContext(ctx context.Context) GetBlockStorageVolumeTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetBlockStorageVolumeTimeouts) *GetBlockStorageVolumeTimeouts {
		return &v
	}).(GetBlockStorageVolumeTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o GetBlockStorageVolumeTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBlockStorageVolumeTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

type GetBlockStorageVolumeTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (GetBlockStorageVolumeTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBlockStorageVolumeTimeouts)(nil)).Elem()
}

func (o GetBlockStorageVolumeTimeoutsPtrOutput) ToGetBlockStorageVolumeTimeoutsPtrOutput() GetBlockStorageVolumeTimeoutsPtrOutput {
	return o
}

func (o GetBlockStorageVolumeTimeoutsPtrOutput) ToGetBlockStorageVolumeTimeoutsPtrOutputWithContext(ctx context.Context) GetBlockStorageVolumeTimeoutsPtrOutput {
	return o
}

func (o GetBlockStorageVolumeTimeoutsPtrOutput) Elem() GetBlockStorageVolumeTimeoutsOutput {
	return o.ApplyT(func(v *GetBlockStorageVolumeTimeouts) GetBlockStorageVolumeTimeouts {
		if v != nil {
			return *v
		}
		var ret GetBlockStorageVolumeTimeouts
		return ret
	}).(GetBlockStorageVolumeTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o GetBlockStorageVolumeTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBlockStorageVolumeTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

type GetComputeInstanceListInstance struct {
	// The list of attached AntiAffinityGroup (IDs).
	AntiAffinityGroupIds []string `pulumi:"antiAffinityGroupIds"`
	// The compute instance creation date.
	CreatedAt string `pulumi:"createdAt"`
	// A deploy target ID.
	DeployTargetId string `pulumi:"deployTargetId"`
	// The instance disk size (GiB).
	DiskSize int `pulumi:"diskSize"`
	// The list of attached ElasticIp (IDs).
	ElasticIpIds []string `pulumi:"elasticIpIds"`
	// Indicates if the instance has secure boot enabled.
	EnableSecureBoot bool `pulumi:"enableSecureBoot"`
	// Indicates if the instance has TPM enabled.
	EnableTpm bool `pulumi:"enableTpm"`
	// The compute instance ID to match (conflicts with `name`).
	Id *string `pulumi:"id"`
	// Whether IPv6 is enabled on the instance.
	Ipv6 bool `pulumi:"ipv6"`
	// The instance (main network interface) IPv6 address (if enabled).
	Ipv6Address string `pulumi:"ipv6Address"`
	// A map of key/value labels.
	Labels map[string]string `pulumi:"labels"`
	// The instance manager ID, if any.
	ManagerId string `pulumi:"managerId"`
	// The instance manager type (instance pool, SKS node pool, etc.), if any.
	ManagerType string `pulumi:"managerType"`
	// The instance name to match (conflicts with `id`).
	Name *string `pulumi:"name"`
	// The list of attached PrivateNetwork (IDs).
	PrivateNetworkIds []string `pulumi:"privateNetworkIds"`
	// The instance (main network interface) IPv4 address.
	PublicIpAddress string `pulumi:"publicIpAddress"`
	// Domain name for reverse DNS record.
	ReverseDns string `pulumi:"reverseDns"`
	// The list of attached SecurityGroup (IDs).
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The SshKey (name) authorized on the instance.
	//
	// Deprecated: Use sshKeys instead
	SshKey string `pulumi:"sshKey"`
	// The list of SshKey (name) authorized on the instance.
	SshKeys []string `pulumi:"sshKeys"`
	// The instance state.
	State string `pulumi:"state"`
	// The instance getTemplate ID.
	TemplateId string `pulumi:"templateId"`
	// The instance type.
	Type string `pulumi:"type"`
	// The instance [cloud-init](http://cloudinit.readthedocs.io/en/latest/) configuration.
	UserData string `pulumi:"userData"`
	// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
	Zone string `pulumi:"zone"`
}

// GetComputeInstanceListInstanceInput is an input type that accepts GetComputeInstanceListInstanceArgs and GetComputeInstanceListInstanceOutput values.
// You can construct a concrete instance of `GetComputeInstanceListInstanceInput` via:
//
//	GetComputeInstanceListInstanceArgs{...}
type GetComputeInstanceListInstanceInput interface {
	pulumi.Input

	ToGetComputeInstanceListInstanceOutput() GetComputeInstanceListInstanceOutput
	ToGetComputeInstanceListInstanceOutputWithContext(context.Context) GetComputeInstanceListInstanceOutput
}

type GetComputeInstanceListInstanceArgs struct {
	// The list of attached AntiAffinityGroup (IDs).
	AntiAffinityGroupIds pulumi.StringArrayInput `pulumi:"antiAffinityGroupIds"`
	// The compute instance creation date.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// A deploy target ID.
	DeployTargetId pulumi.StringInput `pulumi:"deployTargetId"`
	// The instance disk size (GiB).
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// The list of attached ElasticIp (IDs).
	ElasticIpIds pulumi.StringArrayInput `pulumi:"elasticIpIds"`
	// Indicates if the instance has secure boot enabled.
	EnableSecureBoot pulumi.BoolInput `pulumi:"enableSecureBoot"`
	// Indicates if the instance has TPM enabled.
	EnableTpm pulumi.BoolInput `pulumi:"enableTpm"`
	// The compute instance ID to match (conflicts with `name`).
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Whether IPv6 is enabled on the instance.
	Ipv6 pulumi.BoolInput `pulumi:"ipv6"`
	// The instance (main network interface) IPv6 address (if enabled).
	Ipv6Address pulumi.StringInput `pulumi:"ipv6Address"`
	// A map of key/value labels.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The instance manager ID, if any.
	ManagerId pulumi.StringInput `pulumi:"managerId"`
	// The instance manager type (instance pool, SKS node pool, etc.), if any.
	ManagerType pulumi.StringInput `pulumi:"managerType"`
	// The instance name to match (conflicts with `id`).
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The list of attached PrivateNetwork (IDs).
	PrivateNetworkIds pulumi.StringArrayInput `pulumi:"privateNetworkIds"`
	// The instance (main network interface) IPv4 address.
	PublicIpAddress pulumi.StringInput `pulumi:"publicIpAddress"`
	// Domain name for reverse DNS record.
	ReverseDns pulumi.StringInput `pulumi:"reverseDns"`
	// The list of attached SecurityGroup (IDs).
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The SshKey (name) authorized on the instance.
	//
	// Deprecated: Use sshKeys instead
	SshKey pulumi.StringInput `pulumi:"sshKey"`
	// The list of SshKey (name) authorized on the instance.
	SshKeys pulumi.StringArrayInput `pulumi:"sshKeys"`
	// The instance state.
	State pulumi.StringInput `pulumi:"state"`
	// The instance getTemplate ID.
	TemplateId pulumi.StringInput `pulumi:"templateId"`
	// The instance type.
	Type pulumi.StringInput `pulumi:"type"`
	// The instance [cloud-init](http://cloudinit.readthedocs.io/en/latest/) configuration.
	UserData pulumi.StringInput `pulumi:"userData"`
	// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetComputeInstanceListInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceListInstance)(nil)).Elem()
}

func (i GetComputeInstanceListInstanceArgs) ToGetComputeInstanceListInstanceOutput() GetComputeInstanceListInstanceOutput {
	return i.ToGetComputeInstanceListInstanceOutputWithContext(context.Background())
}

func (i GetComputeInstanceListInstanceArgs) ToGetComputeInstanceListInstanceOutputWithContext(ctx context.Context) GetComputeInstanceListInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceListInstanceOutput)
}

// GetComputeInstanceListInstanceArrayInput is an input type that accepts GetComputeInstanceListInstanceArray and GetComputeInstanceListInstanceArrayOutput values.
// You can construct a concrete instance of `GetComputeInstanceListInstanceArrayInput` via:
//
//	GetComputeInstanceListInstanceArray{ GetComputeInstanceListInstanceArgs{...} }
type GetComputeInstanceListInstanceArrayInput interface {
	pulumi.Input

	ToGetComputeInstanceListInstanceArrayOutput() GetComputeInstanceListInstanceArrayOutput
	ToGetComputeInstanceListInstanceArrayOutputWithContext(context.Context) GetComputeInstanceListInstanceArrayOutput
}

type GetComputeInstanceListInstanceArray []GetComputeInstanceListInstanceInput

func (GetComputeInstanceListInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceListInstance)(nil)).Elem()
}

func (i GetComputeInstanceListInstanceArray) ToGetComputeInstanceListInstanceArrayOutput() GetComputeInstanceListInstanceArrayOutput {
	return i.ToGetComputeInstanceListInstanceArrayOutputWithContext(context.Background())
}

func (i GetComputeInstanceListInstanceArray) ToGetComputeInstanceListInstanceArrayOutputWithContext(ctx context.Context) GetComputeInstanceListInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceListInstanceArrayOutput)
}

type GetComputeInstanceListInstanceOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceListInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceListInstance)(nil)).Elem()
}

func (o GetComputeInstanceListInstanceOutput) ToGetComputeInstanceListInstanceOutput() GetComputeInstanceListInstanceOutput {
	return o
}

func (o GetComputeInstanceListInstanceOutput) ToGetComputeInstanceListInstanceOutputWithContext(ctx context.Context) GetComputeInstanceListInstanceOutput {
	return o
}

// The list of attached AntiAffinityGroup (IDs).
func (o GetComputeInstanceListInstanceOutput) AntiAffinityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) []string { return v.AntiAffinityGroupIds }).(pulumi.StringArrayOutput)
}

// The compute instance creation date.
func (o GetComputeInstanceListInstanceOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// A deploy target ID.
func (o GetComputeInstanceListInstanceOutput) DeployTargetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) string { return v.DeployTargetId }).(pulumi.StringOutput)
}

// The instance disk size (GiB).
func (o GetComputeInstanceListInstanceOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) int { return v.DiskSize }).(pulumi.IntOutput)
}

// The list of attached ElasticIp (IDs).
func (o GetComputeInstanceListInstanceOutput) ElasticIpIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) []string { return v.ElasticIpIds }).(pulumi.StringArrayOutput)
}

// Indicates if the instance has secure boot enabled.
func (o GetComputeInstanceListInstanceOutput) EnableSecureBoot() pulumi.BoolOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) bool { return v.EnableSecureBoot }).(pulumi.BoolOutput)
}

// Indicates if the instance has TPM enabled.
func (o GetComputeInstanceListInstanceOutput) EnableTpm() pulumi.BoolOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) bool { return v.EnableTpm }).(pulumi.BoolOutput)
}

// The compute instance ID to match (conflicts with `name`).
func (o GetComputeInstanceListInstanceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Whether IPv6 is enabled on the instance.
func (o GetComputeInstanceListInstanceOutput) Ipv6() pulumi.BoolOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) bool { return v.Ipv6 }).(pulumi.BoolOutput)
}

// The instance (main network interface) IPv6 address (if enabled).
func (o GetComputeInstanceListInstanceOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

// A map of key/value labels.
func (o GetComputeInstanceListInstanceOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The instance manager ID, if any.
func (o GetComputeInstanceListInstanceOutput) ManagerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) string { return v.ManagerId }).(pulumi.StringOutput)
}

// The instance manager type (instance pool, SKS node pool, etc.), if any.
func (o GetComputeInstanceListInstanceOutput) ManagerType() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) string { return v.ManagerType }).(pulumi.StringOutput)
}

// The instance name to match (conflicts with `id`).
func (o GetComputeInstanceListInstanceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The list of attached PrivateNetwork (IDs).
func (o GetComputeInstanceListInstanceOutput) PrivateNetworkIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) []string { return v.PrivateNetworkIds }).(pulumi.StringArrayOutput)
}

// The instance (main network interface) IPv4 address.
func (o GetComputeInstanceListInstanceOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) string { return v.PublicIpAddress }).(pulumi.StringOutput)
}

// Domain name for reverse DNS record.
func (o GetComputeInstanceListInstanceOutput) ReverseDns() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) string { return v.ReverseDns }).(pulumi.StringOutput)
}

// The list of attached SecurityGroup (IDs).
func (o GetComputeInstanceListInstanceOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The SshKey (name) authorized on the instance.
//
// Deprecated: Use sshKeys instead
func (o GetComputeInstanceListInstanceOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) string { return v.SshKey }).(pulumi.StringOutput)
}

// The list of SshKey (name) authorized on the instance.
func (o GetComputeInstanceListInstanceOutput) SshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) []string { return v.SshKeys }).(pulumi.StringArrayOutput)
}

// The instance state.
func (o GetComputeInstanceListInstanceOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) string { return v.State }).(pulumi.StringOutput)
}

// The instance getTemplate ID.
func (o GetComputeInstanceListInstanceOutput) TemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) string { return v.TemplateId }).(pulumi.StringOutput)
}

// The instance type.
func (o GetComputeInstanceListInstanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) string { return v.Type }).(pulumi.StringOutput)
}

// The instance [cloud-init](http://cloudinit.readthedocs.io/en/latest/) configuration.
func (o GetComputeInstanceListInstanceOutput) UserData() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) string { return v.UserData }).(pulumi.StringOutput)
}

// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
func (o GetComputeInstanceListInstanceOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceListInstance) string { return v.Zone }).(pulumi.StringOutput)
}

type GetComputeInstanceListInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceListInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceListInstance)(nil)).Elem()
}

func (o GetComputeInstanceListInstanceArrayOutput) ToGetComputeInstanceListInstanceArrayOutput() GetComputeInstanceListInstanceArrayOutput {
	return o
}

func (o GetComputeInstanceListInstanceArrayOutput) ToGetComputeInstanceListInstanceArrayOutputWithContext(ctx context.Context) GetComputeInstanceListInstanceArrayOutput {
	return o
}

func (o GetComputeInstanceListInstanceArrayOutput) Index(i pulumi.IntInput) GetComputeInstanceListInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstanceListInstance {
		return vs[0].([]GetComputeInstanceListInstance)[vs[1].(int)]
	}).(GetComputeInstanceListInstanceOutput)
}

type GetDatabaseUriTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
}

// GetDatabaseUriTimeoutsInput is an input type that accepts GetDatabaseUriTimeoutsArgs and GetDatabaseUriTimeoutsOutput values.
// You can construct a concrete instance of `GetDatabaseUriTimeoutsInput` via:
//
//	GetDatabaseUriTimeoutsArgs{...}
type GetDatabaseUriTimeoutsInput interface {
	pulumi.Input

	ToGetDatabaseUriTimeoutsOutput() GetDatabaseUriTimeoutsOutput
	ToGetDatabaseUriTimeoutsOutputWithContext(context.Context) GetDatabaseUriTimeoutsOutput
}

type GetDatabaseUriTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
}

func (GetDatabaseUriTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUriTimeouts)(nil)).Elem()
}

func (i GetDatabaseUriTimeoutsArgs) ToGetDatabaseUriTimeoutsOutput() GetDatabaseUriTimeoutsOutput {
	return i.ToGetDatabaseUriTimeoutsOutputWithContext(context.Background())
}

func (i GetDatabaseUriTimeoutsArgs) ToGetDatabaseUriTimeoutsOutputWithContext(ctx context.Context) GetDatabaseUriTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUriTimeoutsOutput)
}

func (i GetDatabaseUriTimeoutsArgs) ToGetDatabaseUriTimeoutsPtrOutput() GetDatabaseUriTimeoutsPtrOutput {
	return i.ToGetDatabaseUriTimeoutsPtrOutputWithContext(context.Background())
}

func (i GetDatabaseUriTimeoutsArgs) ToGetDatabaseUriTimeoutsPtrOutputWithContext(ctx context.Context) GetDatabaseUriTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUriTimeoutsOutput).ToGetDatabaseUriTimeoutsPtrOutputWithContext(ctx)
}

// GetDatabaseUriTimeoutsPtrInput is an input type that accepts GetDatabaseUriTimeoutsArgs, GetDatabaseUriTimeoutsPtr and GetDatabaseUriTimeoutsPtrOutput values.
// You can construct a concrete instance of `GetDatabaseUriTimeoutsPtrInput` via:
//
//	        GetDatabaseUriTimeoutsArgs{...}
//
//	or:
//
//	        nil
type GetDatabaseUriTimeoutsPtrInput interface {
	pulumi.Input

	ToGetDatabaseUriTimeoutsPtrOutput() GetDatabaseUriTimeoutsPtrOutput
	ToGetDatabaseUriTimeoutsPtrOutputWithContext(context.Context) GetDatabaseUriTimeoutsPtrOutput
}

type getDatabaseUriTimeoutsPtrType GetDatabaseUriTimeoutsArgs

func GetDatabaseUriTimeoutsPtr(v *GetDatabaseUriTimeoutsArgs) GetDatabaseUriTimeoutsPtrInput {
	return (*getDatabaseUriTimeoutsPtrType)(v)
}

func (*getDatabaseUriTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetDatabaseUriTimeouts)(nil)).Elem()
}

func (i *getDatabaseUriTimeoutsPtrType) ToGetDatabaseUriTimeoutsPtrOutput() GetDatabaseUriTimeoutsPtrOutput {
	return i.ToGetDatabaseUriTimeoutsPtrOutputWithContext(context.Background())
}

func (i *getDatabaseUriTimeoutsPtrType) ToGetDatabaseUriTimeoutsPtrOutputWithContext(ctx context.Context) GetDatabaseUriTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUriTimeoutsPtrOutput)
}

type GetDatabaseUriTimeoutsOutput struct{ *pulumi.OutputState }

func (GetDatabaseUriTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUriTimeouts)(nil)).Elem()
}

func (o GetDatabaseUriTimeoutsOutput) ToGetDatabaseUriTimeoutsOutput() GetDatabaseUriTimeoutsOutput {
	return o
}

func (o GetDatabaseUriTimeoutsOutput) ToGetDatabaseUriTimeoutsOutputWithContext(ctx context.Context) GetDatabaseUriTimeoutsOutput {
	return o
}

func (o GetDatabaseUriTimeoutsOutput) ToGetDatabaseUriTimeoutsPtrOutput() GetDatabaseUriTimeoutsPtrOutput {
	return o.ToGetDatabaseUriTimeoutsPtrOutputWithContext(context.Background())
}

func (o GetDatabaseUriTimeoutsOutput) ToGetDatabaseUriTimeoutsPtrOutputWithContext(ctx context.Context) GetDatabaseUriTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetDatabaseUriTimeouts) *GetDatabaseUriTimeouts {
		return &v
	}).(GetDatabaseUriTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o GetDatabaseUriTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabaseUriTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

type GetDatabaseUriTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (GetDatabaseUriTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetDatabaseUriTimeouts)(nil)).Elem()
}

func (o GetDatabaseUriTimeoutsPtrOutput) ToGetDatabaseUriTimeoutsPtrOutput() GetDatabaseUriTimeoutsPtrOutput {
	return o
}

func (o GetDatabaseUriTimeoutsPtrOutput) ToGetDatabaseUriTimeoutsPtrOutputWithContext(ctx context.Context) GetDatabaseUriTimeoutsPtrOutput {
	return o
}

func (o GetDatabaseUriTimeoutsPtrOutput) Elem() GetDatabaseUriTimeoutsOutput {
	return o.ApplyT(func(v *GetDatabaseUriTimeouts) GetDatabaseUriTimeouts {
		if v != nil {
			return *v
		}
		var ret GetDatabaseUriTimeouts
		return ret
	}).(GetDatabaseUriTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o GetDatabaseUriTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetDatabaseUriTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

type GetDomainRecordFilter struct {
	// A regular expression to match the record content.
	ContentRegex *string `pulumi:"contentRegex"`
	// The record ID to match.
	Id *string `pulumi:"id"`
	// The domain record name to match.
	Name *string `pulumi:"name"`
	// The record type to match.
	RecordType *string `pulumi:"recordType"`
}

// GetDomainRecordFilterInput is an input type that accepts GetDomainRecordFilterArgs and GetDomainRecordFilterOutput values.
// You can construct a concrete instance of `GetDomainRecordFilterInput` via:
//
//	GetDomainRecordFilterArgs{...}
type GetDomainRecordFilterInput interface {
	pulumi.Input

	ToGetDomainRecordFilterOutput() GetDomainRecordFilterOutput
	ToGetDomainRecordFilterOutputWithContext(context.Context) GetDomainRecordFilterOutput
}

type GetDomainRecordFilterArgs struct {
	// A regular expression to match the record content.
	ContentRegex pulumi.StringPtrInput `pulumi:"contentRegex"`
	// The record ID to match.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The domain record name to match.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The record type to match.
	RecordType pulumi.StringPtrInput `pulumi:"recordType"`
}

func (GetDomainRecordFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainRecordFilter)(nil)).Elem()
}

func (i GetDomainRecordFilterArgs) ToGetDomainRecordFilterOutput() GetDomainRecordFilterOutput {
	return i.ToGetDomainRecordFilterOutputWithContext(context.Background())
}

func (i GetDomainRecordFilterArgs) ToGetDomainRecordFilterOutputWithContext(ctx context.Context) GetDomainRecordFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainRecordFilterOutput)
}

type GetDomainRecordFilterOutput struct{ *pulumi.OutputState }

func (GetDomainRecordFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainRecordFilter)(nil)).Elem()
}

func (o GetDomainRecordFilterOutput) ToGetDomainRecordFilterOutput() GetDomainRecordFilterOutput {
	return o
}

func (o GetDomainRecordFilterOutput) ToGetDomainRecordFilterOutputWithContext(ctx context.Context) GetDomainRecordFilterOutput {
	return o
}

// A regular expression to match the record content.
func (o GetDomainRecordFilterOutput) ContentRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainRecordFilter) *string { return v.ContentRegex }).(pulumi.StringPtrOutput)
}

// The record ID to match.
func (o GetDomainRecordFilterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainRecordFilter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The domain record name to match.
func (o GetDomainRecordFilterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainRecordFilter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The record type to match.
func (o GetDomainRecordFilterOutput) RecordType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainRecordFilter) *string { return v.RecordType }).(pulumi.StringPtrOutput)
}

type GetDomainRecordRecord struct {
	// Content of the Record
	Content *string `pulumi:"content"`
	// Domain of the Record
	Domain *string `pulumi:"domain"`
	// ID of the Record
	Id *string `pulumi:"id"`
	// Name of the Record
	Name *string `pulumi:"name"`
	// Priority of the Record
	Prio *int `pulumi:"prio"`
	// Type of the Record
	RecordType *string `pulumi:"recordType"`
	// TTL of the Record
	Ttl *int `pulumi:"ttl"`
}

// GetDomainRecordRecordInput is an input type that accepts GetDomainRecordRecordArgs and GetDomainRecordRecordOutput values.
// You can construct a concrete instance of `GetDomainRecordRecordInput` via:
//
//	GetDomainRecordRecordArgs{...}
type GetDomainRecordRecordInput interface {
	pulumi.Input

	ToGetDomainRecordRecordOutput() GetDomainRecordRecordOutput
	ToGetDomainRecordRecordOutputWithContext(context.Context) GetDomainRecordRecordOutput
}

type GetDomainRecordRecordArgs struct {
	// Content of the Record
	Content pulumi.StringPtrInput `pulumi:"content"`
	// Domain of the Record
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// ID of the Record
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the Record
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the Record
	Prio pulumi.IntPtrInput `pulumi:"prio"`
	// Type of the Record
	RecordType pulumi.StringPtrInput `pulumi:"recordType"`
	// TTL of the Record
	Ttl pulumi.IntPtrInput `pulumi:"ttl"`
}

func (GetDomainRecordRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainRecordRecord)(nil)).Elem()
}

func (i GetDomainRecordRecordArgs) ToGetDomainRecordRecordOutput() GetDomainRecordRecordOutput {
	return i.ToGetDomainRecordRecordOutputWithContext(context.Background())
}

func (i GetDomainRecordRecordArgs) ToGetDomainRecordRecordOutputWithContext(ctx context.Context) GetDomainRecordRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainRecordRecordOutput)
}

// GetDomainRecordRecordArrayInput is an input type that accepts GetDomainRecordRecordArray and GetDomainRecordRecordArrayOutput values.
// You can construct a concrete instance of `GetDomainRecordRecordArrayInput` via:
//
//	GetDomainRecordRecordArray{ GetDomainRecordRecordArgs{...} }
type GetDomainRecordRecordArrayInput interface {
	pulumi.Input

	ToGetDomainRecordRecordArrayOutput() GetDomainRecordRecordArrayOutput
	ToGetDomainRecordRecordArrayOutputWithContext(context.Context) GetDomainRecordRecordArrayOutput
}

type GetDomainRecordRecordArray []GetDomainRecordRecordInput

func (GetDomainRecordRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainRecordRecord)(nil)).Elem()
}

func (i GetDomainRecordRecordArray) ToGetDomainRecordRecordArrayOutput() GetDomainRecordRecordArrayOutput {
	return i.ToGetDomainRecordRecordArrayOutputWithContext(context.Background())
}

func (i GetDomainRecordRecordArray) ToGetDomainRecordRecordArrayOutputWithContext(ctx context.Context) GetDomainRecordRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainRecordRecordArrayOutput)
}

type GetDomainRecordRecordOutput struct{ *pulumi.OutputState }

func (GetDomainRecordRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainRecordRecord)(nil)).Elem()
}

func (o GetDomainRecordRecordOutput) ToGetDomainRecordRecordOutput() GetDomainRecordRecordOutput {
	return o
}

func (o GetDomainRecordRecordOutput) ToGetDomainRecordRecordOutputWithContext(ctx context.Context) GetDomainRecordRecordOutput {
	return o
}

// Content of the Record
func (o GetDomainRecordRecordOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainRecordRecord) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// Domain of the Record
func (o GetDomainRecordRecordOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainRecordRecord) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// ID of the Record
func (o GetDomainRecordRecordOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainRecordRecord) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the Record
func (o GetDomainRecordRecordOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainRecordRecord) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the Record
func (o GetDomainRecordRecordOutput) Prio() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDomainRecordRecord) *int { return v.Prio }).(pulumi.IntPtrOutput)
}

// Type of the Record
func (o GetDomainRecordRecordOutput) RecordType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainRecordRecord) *string { return v.RecordType }).(pulumi.StringPtrOutput)
}

// TTL of the Record
func (o GetDomainRecordRecordOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDomainRecordRecord) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

type GetDomainRecordRecordArrayOutput struct{ *pulumi.OutputState }

func (GetDomainRecordRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainRecordRecord)(nil)).Elem()
}

func (o GetDomainRecordRecordArrayOutput) ToGetDomainRecordRecordArrayOutput() GetDomainRecordRecordArrayOutput {
	return o
}

func (o GetDomainRecordRecordArrayOutput) ToGetDomainRecordRecordArrayOutputWithContext(ctx context.Context) GetDomainRecordRecordArrayOutput {
	return o
}

func (o GetDomainRecordRecordArrayOutput) Index(i pulumi.IntInput) GetDomainRecordRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainRecordRecord {
		return vs[0].([]GetDomainRecordRecord)[vs[1].(int)]
	}).(GetDomainRecordRecordOutput)
}

type GetElasticIpHealthcheck struct {
	// The healthcheck interval in seconds.
	Interval int `pulumi:"interval"`
	// The healthcheck mode.
	Mode string `pulumi:"mode"`
	// The healthcheck target port.
	Port int `pulumi:"port"`
	// The number of failed healthcheck attempts before considering the target unhealthy.
	StrikesFail int `pulumi:"strikesFail"`
	// The number of successful healthcheck attempts before considering the target healthy.
	StrikesOk int `pulumi:"strikesOk"`
	// The time in seconds before considering a healthcheck probing failed.
	Timeout int `pulumi:"timeout"`
	// Disable TLS certificate verification for healthcheck in `https` mode.
	TlsSkipVerify bool `pulumi:"tlsSkipVerify"`
	// The healthcheck server name to present with SNI in `https` mode.
	TlsSni string `pulumi:"tlsSni"`
	// The healthcheck URI.
	Uri string `pulumi:"uri"`
}

// GetElasticIpHealthcheckInput is an input type that accepts GetElasticIpHealthcheckArgs and GetElasticIpHealthcheckOutput values.
// You can construct a concrete instance of `GetElasticIpHealthcheckInput` via:
//
//	GetElasticIpHealthcheckArgs{...}
type GetElasticIpHealthcheckInput interface {
	pulumi.Input

	ToGetElasticIpHealthcheckOutput() GetElasticIpHealthcheckOutput
	ToGetElasticIpHealthcheckOutputWithContext(context.Context) GetElasticIpHealthcheckOutput
}

type GetElasticIpHealthcheckArgs struct {
	// The healthcheck interval in seconds.
	Interval pulumi.IntInput `pulumi:"interval"`
	// The healthcheck mode.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The healthcheck target port.
	Port pulumi.IntInput `pulumi:"port"`
	// The number of failed healthcheck attempts before considering the target unhealthy.
	StrikesFail pulumi.IntInput `pulumi:"strikesFail"`
	// The number of successful healthcheck attempts before considering the target healthy.
	StrikesOk pulumi.IntInput `pulumi:"strikesOk"`
	// The time in seconds before considering a healthcheck probing failed.
	Timeout pulumi.IntInput `pulumi:"timeout"`
	// Disable TLS certificate verification for healthcheck in `https` mode.
	TlsSkipVerify pulumi.BoolInput `pulumi:"tlsSkipVerify"`
	// The healthcheck server name to present with SNI in `https` mode.
	TlsSni pulumi.StringInput `pulumi:"tlsSni"`
	// The healthcheck URI.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (GetElasticIpHealthcheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticIpHealthcheck)(nil)).Elem()
}

func (i GetElasticIpHealthcheckArgs) ToGetElasticIpHealthcheckOutput() GetElasticIpHealthcheckOutput {
	return i.ToGetElasticIpHealthcheckOutputWithContext(context.Background())
}

func (i GetElasticIpHealthcheckArgs) ToGetElasticIpHealthcheckOutputWithContext(ctx context.Context) GetElasticIpHealthcheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticIpHealthcheckOutput)
}

// GetElasticIpHealthcheckArrayInput is an input type that accepts GetElasticIpHealthcheckArray and GetElasticIpHealthcheckArrayOutput values.
// You can construct a concrete instance of `GetElasticIpHealthcheckArrayInput` via:
//
//	GetElasticIpHealthcheckArray{ GetElasticIpHealthcheckArgs{...} }
type GetElasticIpHealthcheckArrayInput interface {
	pulumi.Input

	ToGetElasticIpHealthcheckArrayOutput() GetElasticIpHealthcheckArrayOutput
	ToGetElasticIpHealthcheckArrayOutputWithContext(context.Context) GetElasticIpHealthcheckArrayOutput
}

type GetElasticIpHealthcheckArray []GetElasticIpHealthcheckInput

func (GetElasticIpHealthcheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticIpHealthcheck)(nil)).Elem()
}

func (i GetElasticIpHealthcheckArray) ToGetElasticIpHealthcheckArrayOutput() GetElasticIpHealthcheckArrayOutput {
	return i.ToGetElasticIpHealthcheckArrayOutputWithContext(context.Background())
}

func (i GetElasticIpHealthcheckArray) ToGetElasticIpHealthcheckArrayOutputWithContext(ctx context.Context) GetElasticIpHealthcheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticIpHealthcheckArrayOutput)
}

type GetElasticIpHealthcheckOutput struct{ *pulumi.OutputState }

func (GetElasticIpHealthcheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticIpHealthcheck)(nil)).Elem()
}

func (o GetElasticIpHealthcheckOutput) ToGetElasticIpHealthcheckOutput() GetElasticIpHealthcheckOutput {
	return o
}

func (o GetElasticIpHealthcheckOutput) ToGetElasticIpHealthcheckOutputWithContext(ctx context.Context) GetElasticIpHealthcheckOutput {
	return o
}

// The healthcheck interval in seconds.
func (o GetElasticIpHealthcheckOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v GetElasticIpHealthcheck) int { return v.Interval }).(pulumi.IntOutput)
}

// The healthcheck mode.
func (o GetElasticIpHealthcheckOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticIpHealthcheck) string { return v.Mode }).(pulumi.StringOutput)
}

// The healthcheck target port.
func (o GetElasticIpHealthcheckOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetElasticIpHealthcheck) int { return v.Port }).(pulumi.IntOutput)
}

// The number of failed healthcheck attempts before considering the target unhealthy.
func (o GetElasticIpHealthcheckOutput) StrikesFail() pulumi.IntOutput {
	return o.ApplyT(func(v GetElasticIpHealthcheck) int { return v.StrikesFail }).(pulumi.IntOutput)
}

// The number of successful healthcheck attempts before considering the target healthy.
func (o GetElasticIpHealthcheckOutput) StrikesOk() pulumi.IntOutput {
	return o.ApplyT(func(v GetElasticIpHealthcheck) int { return v.StrikesOk }).(pulumi.IntOutput)
}

// The time in seconds before considering a healthcheck probing failed.
func (o GetElasticIpHealthcheckOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetElasticIpHealthcheck) int { return v.Timeout }).(pulumi.IntOutput)
}

// Disable TLS certificate verification for healthcheck in `https` mode.
func (o GetElasticIpHealthcheckOutput) TlsSkipVerify() pulumi.BoolOutput {
	return o.ApplyT(func(v GetElasticIpHealthcheck) bool { return v.TlsSkipVerify }).(pulumi.BoolOutput)
}

// The healthcheck server name to present with SNI in `https` mode.
func (o GetElasticIpHealthcheckOutput) TlsSni() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticIpHealthcheck) string { return v.TlsSni }).(pulumi.StringOutput)
}

// The healthcheck URI.
func (o GetElasticIpHealthcheckOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticIpHealthcheck) string { return v.Uri }).(pulumi.StringOutput)
}

type GetElasticIpHealthcheckArrayOutput struct{ *pulumi.OutputState }

func (GetElasticIpHealthcheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticIpHealthcheck)(nil)).Elem()
}

func (o GetElasticIpHealthcheckArrayOutput) ToGetElasticIpHealthcheckArrayOutput() GetElasticIpHealthcheckArrayOutput {
	return o
}

func (o GetElasticIpHealthcheckArrayOutput) ToGetElasticIpHealthcheckArrayOutputWithContext(ctx context.Context) GetElasticIpHealthcheckArrayOutput {
	return o
}

func (o GetElasticIpHealthcheckArrayOutput) Index(i pulumi.IntInput) GetElasticIpHealthcheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetElasticIpHealthcheck {
		return vs[0].([]GetElasticIpHealthcheck)[vs[1].(int)]
	}).(GetElasticIpHealthcheckOutput)
}

type GetIamApiKeyTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
}

// GetIamApiKeyTimeoutsInput is an input type that accepts GetIamApiKeyTimeoutsArgs and GetIamApiKeyTimeoutsOutput values.
// You can construct a concrete instance of `GetIamApiKeyTimeoutsInput` via:
//
//	GetIamApiKeyTimeoutsArgs{...}
type GetIamApiKeyTimeoutsInput interface {
	pulumi.Input

	ToGetIamApiKeyTimeoutsOutput() GetIamApiKeyTimeoutsOutput
	ToGetIamApiKeyTimeoutsOutputWithContext(context.Context) GetIamApiKeyTimeoutsOutput
}

type GetIamApiKeyTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
}

func (GetIamApiKeyTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamApiKeyTimeouts)(nil)).Elem()
}

func (i GetIamApiKeyTimeoutsArgs) ToGetIamApiKeyTimeoutsOutput() GetIamApiKeyTimeoutsOutput {
	return i.ToGetIamApiKeyTimeoutsOutputWithContext(context.Background())
}

func (i GetIamApiKeyTimeoutsArgs) ToGetIamApiKeyTimeoutsOutputWithContext(ctx context.Context) GetIamApiKeyTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamApiKeyTimeoutsOutput)
}

func (i GetIamApiKeyTimeoutsArgs) ToGetIamApiKeyTimeoutsPtrOutput() GetIamApiKeyTimeoutsPtrOutput {
	return i.ToGetIamApiKeyTimeoutsPtrOutputWithContext(context.Background())
}

func (i GetIamApiKeyTimeoutsArgs) ToGetIamApiKeyTimeoutsPtrOutputWithContext(ctx context.Context) GetIamApiKeyTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamApiKeyTimeoutsOutput).ToGetIamApiKeyTimeoutsPtrOutputWithContext(ctx)
}

// GetIamApiKeyTimeoutsPtrInput is an input type that accepts GetIamApiKeyTimeoutsArgs, GetIamApiKeyTimeoutsPtr and GetIamApiKeyTimeoutsPtrOutput values.
// You can construct a concrete instance of `GetIamApiKeyTimeoutsPtrInput` via:
//
//	        GetIamApiKeyTimeoutsArgs{...}
//
//	or:
//
//	        nil
type GetIamApiKeyTimeoutsPtrInput interface {
	pulumi.Input

	ToGetIamApiKeyTimeoutsPtrOutput() GetIamApiKeyTimeoutsPtrOutput
	ToGetIamApiKeyTimeoutsPtrOutputWithContext(context.Context) GetIamApiKeyTimeoutsPtrOutput
}

type getIamApiKeyTimeoutsPtrType GetIamApiKeyTimeoutsArgs

func GetIamApiKeyTimeoutsPtr(v *GetIamApiKeyTimeoutsArgs) GetIamApiKeyTimeoutsPtrInput {
	return (*getIamApiKeyTimeoutsPtrType)(v)
}

func (*getIamApiKeyTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetIamApiKeyTimeouts)(nil)).Elem()
}

func (i *getIamApiKeyTimeoutsPtrType) ToGetIamApiKeyTimeoutsPtrOutput() GetIamApiKeyTimeoutsPtrOutput {
	return i.ToGetIamApiKeyTimeoutsPtrOutputWithContext(context.Background())
}

func (i *getIamApiKeyTimeoutsPtrType) ToGetIamApiKeyTimeoutsPtrOutputWithContext(ctx context.Context) GetIamApiKeyTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamApiKeyTimeoutsPtrOutput)
}

type GetIamApiKeyTimeoutsOutput struct{ *pulumi.OutputState }

func (GetIamApiKeyTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamApiKeyTimeouts)(nil)).Elem()
}

func (o GetIamApiKeyTimeoutsOutput) ToGetIamApiKeyTimeoutsOutput() GetIamApiKeyTimeoutsOutput {
	return o
}

func (o GetIamApiKeyTimeoutsOutput) ToGetIamApiKeyTimeoutsOutputWithContext(ctx context.Context) GetIamApiKeyTimeoutsOutput {
	return o
}

func (o GetIamApiKeyTimeoutsOutput) ToGetIamApiKeyTimeoutsPtrOutput() GetIamApiKeyTimeoutsPtrOutput {
	return o.ToGetIamApiKeyTimeoutsPtrOutputWithContext(context.Background())
}

func (o GetIamApiKeyTimeoutsOutput) ToGetIamApiKeyTimeoutsPtrOutputWithContext(ctx context.Context) GetIamApiKeyTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetIamApiKeyTimeouts) *GetIamApiKeyTimeouts {
		return &v
	}).(GetIamApiKeyTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o GetIamApiKeyTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIamApiKeyTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

type GetIamApiKeyTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (GetIamApiKeyTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetIamApiKeyTimeouts)(nil)).Elem()
}

func (o GetIamApiKeyTimeoutsPtrOutput) ToGetIamApiKeyTimeoutsPtrOutput() GetIamApiKeyTimeoutsPtrOutput {
	return o
}

func (o GetIamApiKeyTimeoutsPtrOutput) ToGetIamApiKeyTimeoutsPtrOutputWithContext(ctx context.Context) GetIamApiKeyTimeoutsPtrOutput {
	return o
}

func (o GetIamApiKeyTimeoutsPtrOutput) Elem() GetIamApiKeyTimeoutsOutput {
	return o.ApplyT(func(v *GetIamApiKeyTimeouts) GetIamApiKeyTimeouts {
		if v != nil {
			return *v
		}
		var ret GetIamApiKeyTimeouts
		return ret
	}).(GetIamApiKeyTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o GetIamApiKeyTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetIamApiKeyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

type GetIamOrgPolicyServices struct {
	// List of IAM service rules (if type is `rules`).
	Rules []GetIamOrgPolicyServicesRule `pulumi:"rules"`
	// Service type (`rules`, `allow`, or `deny`).
	Type string `pulumi:"type"`
}

// GetIamOrgPolicyServicesInput is an input type that accepts GetIamOrgPolicyServicesArgs and GetIamOrgPolicyServicesOutput values.
// You can construct a concrete instance of `GetIamOrgPolicyServicesInput` via:
//
//	GetIamOrgPolicyServicesArgs{...}
type GetIamOrgPolicyServicesInput interface {
	pulumi.Input

	ToGetIamOrgPolicyServicesOutput() GetIamOrgPolicyServicesOutput
	ToGetIamOrgPolicyServicesOutputWithContext(context.Context) GetIamOrgPolicyServicesOutput
}

type GetIamOrgPolicyServicesArgs struct {
	// List of IAM service rules (if type is `rules`).
	Rules GetIamOrgPolicyServicesRuleArrayInput `pulumi:"rules"`
	// Service type (`rules`, `allow`, or `deny`).
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetIamOrgPolicyServicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamOrgPolicyServices)(nil)).Elem()
}

func (i GetIamOrgPolicyServicesArgs) ToGetIamOrgPolicyServicesOutput() GetIamOrgPolicyServicesOutput {
	return i.ToGetIamOrgPolicyServicesOutputWithContext(context.Background())
}

func (i GetIamOrgPolicyServicesArgs) ToGetIamOrgPolicyServicesOutputWithContext(ctx context.Context) GetIamOrgPolicyServicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamOrgPolicyServicesOutput)
}

// GetIamOrgPolicyServicesMapInput is an input type that accepts GetIamOrgPolicyServicesMap and GetIamOrgPolicyServicesMapOutput values.
// You can construct a concrete instance of `GetIamOrgPolicyServicesMapInput` via:
//
//	GetIamOrgPolicyServicesMap{ "key": GetIamOrgPolicyServicesArgs{...} }
type GetIamOrgPolicyServicesMapInput interface {
	pulumi.Input

	ToGetIamOrgPolicyServicesMapOutput() GetIamOrgPolicyServicesMapOutput
	ToGetIamOrgPolicyServicesMapOutputWithContext(context.Context) GetIamOrgPolicyServicesMapOutput
}

type GetIamOrgPolicyServicesMap map[string]GetIamOrgPolicyServicesInput

func (GetIamOrgPolicyServicesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetIamOrgPolicyServices)(nil)).Elem()
}

func (i GetIamOrgPolicyServicesMap) ToGetIamOrgPolicyServicesMapOutput() GetIamOrgPolicyServicesMapOutput {
	return i.ToGetIamOrgPolicyServicesMapOutputWithContext(context.Background())
}

func (i GetIamOrgPolicyServicesMap) ToGetIamOrgPolicyServicesMapOutputWithContext(ctx context.Context) GetIamOrgPolicyServicesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamOrgPolicyServicesMapOutput)
}

type GetIamOrgPolicyServicesOutput struct{ *pulumi.OutputState }

func (GetIamOrgPolicyServicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamOrgPolicyServices)(nil)).Elem()
}

func (o GetIamOrgPolicyServicesOutput) ToGetIamOrgPolicyServicesOutput() GetIamOrgPolicyServicesOutput {
	return o
}

func (o GetIamOrgPolicyServicesOutput) ToGetIamOrgPolicyServicesOutputWithContext(ctx context.Context) GetIamOrgPolicyServicesOutput {
	return o
}

// List of IAM service rules (if type is `rules`).
func (o GetIamOrgPolicyServicesOutput) Rules() GetIamOrgPolicyServicesRuleArrayOutput {
	return o.ApplyT(func(v GetIamOrgPolicyServices) []GetIamOrgPolicyServicesRule { return v.Rules }).(GetIamOrgPolicyServicesRuleArrayOutput)
}

// Service type (`rules`, `allow`, or `deny`).
func (o GetIamOrgPolicyServicesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamOrgPolicyServices) string { return v.Type }).(pulumi.StringOutput)
}

type GetIamOrgPolicyServicesMapOutput struct{ *pulumi.OutputState }

func (GetIamOrgPolicyServicesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetIamOrgPolicyServices)(nil)).Elem()
}

func (o GetIamOrgPolicyServicesMapOutput) ToGetIamOrgPolicyServicesMapOutput() GetIamOrgPolicyServicesMapOutput {
	return o
}

func (o GetIamOrgPolicyServicesMapOutput) ToGetIamOrgPolicyServicesMapOutputWithContext(ctx context.Context) GetIamOrgPolicyServicesMapOutput {
	return o
}

func (o GetIamOrgPolicyServicesMapOutput) MapIndex(k pulumi.StringInput) GetIamOrgPolicyServicesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetIamOrgPolicyServices {
		return vs[0].(map[string]GetIamOrgPolicyServices)[vs[1].(string)]
	}).(GetIamOrgPolicyServicesOutput)
}

type GetIamOrgPolicyServicesRule struct {
	// IAM policy rule action (`allow` or `deny`).
	Action string `pulumi:"action"`
	// IAM policy rule expression.
	Expression string `pulumi:"expression"`
	// Deprecated: This field is no longer suported.
	Resources []string `pulumi:"resources"`
}

// GetIamOrgPolicyServicesRuleInput is an input type that accepts GetIamOrgPolicyServicesRuleArgs and GetIamOrgPolicyServicesRuleOutput values.
// You can construct a concrete instance of `GetIamOrgPolicyServicesRuleInput` via:
//
//	GetIamOrgPolicyServicesRuleArgs{...}
type GetIamOrgPolicyServicesRuleInput interface {
	pulumi.Input

	ToGetIamOrgPolicyServicesRuleOutput() GetIamOrgPolicyServicesRuleOutput
	ToGetIamOrgPolicyServicesRuleOutputWithContext(context.Context) GetIamOrgPolicyServicesRuleOutput
}

type GetIamOrgPolicyServicesRuleArgs struct {
	// IAM policy rule action (`allow` or `deny`).
	Action pulumi.StringInput `pulumi:"action"`
	// IAM policy rule expression.
	Expression pulumi.StringInput `pulumi:"expression"`
	// Deprecated: This field is no longer suported.
	Resources pulumi.StringArrayInput `pulumi:"resources"`
}

func (GetIamOrgPolicyServicesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamOrgPolicyServicesRule)(nil)).Elem()
}

func (i GetIamOrgPolicyServicesRuleArgs) ToGetIamOrgPolicyServicesRuleOutput() GetIamOrgPolicyServicesRuleOutput {
	return i.ToGetIamOrgPolicyServicesRuleOutputWithContext(context.Background())
}

func (i GetIamOrgPolicyServicesRuleArgs) ToGetIamOrgPolicyServicesRuleOutputWithContext(ctx context.Context) GetIamOrgPolicyServicesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamOrgPolicyServicesRuleOutput)
}

// GetIamOrgPolicyServicesRuleArrayInput is an input type that accepts GetIamOrgPolicyServicesRuleArray and GetIamOrgPolicyServicesRuleArrayOutput values.
// You can construct a concrete instance of `GetIamOrgPolicyServicesRuleArrayInput` via:
//
//	GetIamOrgPolicyServicesRuleArray{ GetIamOrgPolicyServicesRuleArgs{...} }
type GetIamOrgPolicyServicesRuleArrayInput interface {
	pulumi.Input

	ToGetIamOrgPolicyServicesRuleArrayOutput() GetIamOrgPolicyServicesRuleArrayOutput
	ToGetIamOrgPolicyServicesRuleArrayOutputWithContext(context.Context) GetIamOrgPolicyServicesRuleArrayOutput
}

type GetIamOrgPolicyServicesRuleArray []GetIamOrgPolicyServicesRuleInput

func (GetIamOrgPolicyServicesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIamOrgPolicyServicesRule)(nil)).Elem()
}

func (i GetIamOrgPolicyServicesRuleArray) ToGetIamOrgPolicyServicesRuleArrayOutput() GetIamOrgPolicyServicesRuleArrayOutput {
	return i.ToGetIamOrgPolicyServicesRuleArrayOutputWithContext(context.Background())
}

func (i GetIamOrgPolicyServicesRuleArray) ToGetIamOrgPolicyServicesRuleArrayOutputWithContext(ctx context.Context) GetIamOrgPolicyServicesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamOrgPolicyServicesRuleArrayOutput)
}

type GetIamOrgPolicyServicesRuleOutput struct{ *pulumi.OutputState }

func (GetIamOrgPolicyServicesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamOrgPolicyServicesRule)(nil)).Elem()
}

func (o GetIamOrgPolicyServicesRuleOutput) ToGetIamOrgPolicyServicesRuleOutput() GetIamOrgPolicyServicesRuleOutput {
	return o
}

func (o GetIamOrgPolicyServicesRuleOutput) ToGetIamOrgPolicyServicesRuleOutputWithContext(ctx context.Context) GetIamOrgPolicyServicesRuleOutput {
	return o
}

// IAM policy rule action (`allow` or `deny`).
func (o GetIamOrgPolicyServicesRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamOrgPolicyServicesRule) string { return v.Action }).(pulumi.StringOutput)
}

// IAM policy rule expression.
func (o GetIamOrgPolicyServicesRuleOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamOrgPolicyServicesRule) string { return v.Expression }).(pulumi.StringOutput)
}

// Deprecated: This field is no longer suported.
func (o GetIamOrgPolicyServicesRuleOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIamOrgPolicyServicesRule) []string { return v.Resources }).(pulumi.StringArrayOutput)
}

type GetIamOrgPolicyServicesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetIamOrgPolicyServicesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIamOrgPolicyServicesRule)(nil)).Elem()
}

func (o GetIamOrgPolicyServicesRuleArrayOutput) ToGetIamOrgPolicyServicesRuleArrayOutput() GetIamOrgPolicyServicesRuleArrayOutput {
	return o
}

func (o GetIamOrgPolicyServicesRuleArrayOutput) ToGetIamOrgPolicyServicesRuleArrayOutputWithContext(ctx context.Context) GetIamOrgPolicyServicesRuleArrayOutput {
	return o
}

func (o GetIamOrgPolicyServicesRuleArrayOutput) Index(i pulumi.IntInput) GetIamOrgPolicyServicesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIamOrgPolicyServicesRule {
		return vs[0].([]GetIamOrgPolicyServicesRule)[vs[1].(int)]
	}).(GetIamOrgPolicyServicesRuleOutput)
}

type GetIamOrgPolicyTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
}

// GetIamOrgPolicyTimeoutsInput is an input type that accepts GetIamOrgPolicyTimeoutsArgs and GetIamOrgPolicyTimeoutsOutput values.
// You can construct a concrete instance of `GetIamOrgPolicyTimeoutsInput` via:
//
//	GetIamOrgPolicyTimeoutsArgs{...}
type GetIamOrgPolicyTimeoutsInput interface {
	pulumi.Input

	ToGetIamOrgPolicyTimeoutsOutput() GetIamOrgPolicyTimeoutsOutput
	ToGetIamOrgPolicyTimeoutsOutputWithContext(context.Context) GetIamOrgPolicyTimeoutsOutput
}

type GetIamOrgPolicyTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
}

func (GetIamOrgPolicyTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamOrgPolicyTimeouts)(nil)).Elem()
}

func (i GetIamOrgPolicyTimeoutsArgs) ToGetIamOrgPolicyTimeoutsOutput() GetIamOrgPolicyTimeoutsOutput {
	return i.ToGetIamOrgPolicyTimeoutsOutputWithContext(context.Background())
}

func (i GetIamOrgPolicyTimeoutsArgs) ToGetIamOrgPolicyTimeoutsOutputWithContext(ctx context.Context) GetIamOrgPolicyTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamOrgPolicyTimeoutsOutput)
}

func (i GetIamOrgPolicyTimeoutsArgs) ToGetIamOrgPolicyTimeoutsPtrOutput() GetIamOrgPolicyTimeoutsPtrOutput {
	return i.ToGetIamOrgPolicyTimeoutsPtrOutputWithContext(context.Background())
}

func (i GetIamOrgPolicyTimeoutsArgs) ToGetIamOrgPolicyTimeoutsPtrOutputWithContext(ctx context.Context) GetIamOrgPolicyTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamOrgPolicyTimeoutsOutput).ToGetIamOrgPolicyTimeoutsPtrOutputWithContext(ctx)
}

// GetIamOrgPolicyTimeoutsPtrInput is an input type that accepts GetIamOrgPolicyTimeoutsArgs, GetIamOrgPolicyTimeoutsPtr and GetIamOrgPolicyTimeoutsPtrOutput values.
// You can construct a concrete instance of `GetIamOrgPolicyTimeoutsPtrInput` via:
//
//	        GetIamOrgPolicyTimeoutsArgs{...}
//
//	or:
//
//	        nil
type GetIamOrgPolicyTimeoutsPtrInput interface {
	pulumi.Input

	ToGetIamOrgPolicyTimeoutsPtrOutput() GetIamOrgPolicyTimeoutsPtrOutput
	ToGetIamOrgPolicyTimeoutsPtrOutputWithContext(context.Context) GetIamOrgPolicyTimeoutsPtrOutput
}

type getIamOrgPolicyTimeoutsPtrType GetIamOrgPolicyTimeoutsArgs

func GetIamOrgPolicyTimeoutsPtr(v *GetIamOrgPolicyTimeoutsArgs) GetIamOrgPolicyTimeoutsPtrInput {
	return (*getIamOrgPolicyTimeoutsPtrType)(v)
}

func (*getIamOrgPolicyTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetIamOrgPolicyTimeouts)(nil)).Elem()
}

func (i *getIamOrgPolicyTimeoutsPtrType) ToGetIamOrgPolicyTimeoutsPtrOutput() GetIamOrgPolicyTimeoutsPtrOutput {
	return i.ToGetIamOrgPolicyTimeoutsPtrOutputWithContext(context.Background())
}

func (i *getIamOrgPolicyTimeoutsPtrType) ToGetIamOrgPolicyTimeoutsPtrOutputWithContext(ctx context.Context) GetIamOrgPolicyTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamOrgPolicyTimeoutsPtrOutput)
}

type GetIamOrgPolicyTimeoutsOutput struct{ *pulumi.OutputState }

func (GetIamOrgPolicyTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamOrgPolicyTimeouts)(nil)).Elem()
}

func (o GetIamOrgPolicyTimeoutsOutput) ToGetIamOrgPolicyTimeoutsOutput() GetIamOrgPolicyTimeoutsOutput {
	return o
}

func (o GetIamOrgPolicyTimeoutsOutput) ToGetIamOrgPolicyTimeoutsOutputWithContext(ctx context.Context) GetIamOrgPolicyTimeoutsOutput {
	return o
}

func (o GetIamOrgPolicyTimeoutsOutput) ToGetIamOrgPolicyTimeoutsPtrOutput() GetIamOrgPolicyTimeoutsPtrOutput {
	return o.ToGetIamOrgPolicyTimeoutsPtrOutputWithContext(context.Background())
}

func (o GetIamOrgPolicyTimeoutsOutput) ToGetIamOrgPolicyTimeoutsPtrOutputWithContext(ctx context.Context) GetIamOrgPolicyTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetIamOrgPolicyTimeouts) *GetIamOrgPolicyTimeouts {
		return &v
	}).(GetIamOrgPolicyTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o GetIamOrgPolicyTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIamOrgPolicyTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

type GetIamOrgPolicyTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (GetIamOrgPolicyTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetIamOrgPolicyTimeouts)(nil)).Elem()
}

func (o GetIamOrgPolicyTimeoutsPtrOutput) ToGetIamOrgPolicyTimeoutsPtrOutput() GetIamOrgPolicyTimeoutsPtrOutput {
	return o
}

func (o GetIamOrgPolicyTimeoutsPtrOutput) ToGetIamOrgPolicyTimeoutsPtrOutputWithContext(ctx context.Context) GetIamOrgPolicyTimeoutsPtrOutput {
	return o
}

func (o GetIamOrgPolicyTimeoutsPtrOutput) Elem() GetIamOrgPolicyTimeoutsOutput {
	return o.ApplyT(func(v *GetIamOrgPolicyTimeouts) GetIamOrgPolicyTimeouts {
		if v != nil {
			return *v
		}
		var ret GetIamOrgPolicyTimeouts
		return ret
	}).(GetIamOrgPolicyTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o GetIamOrgPolicyTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetIamOrgPolicyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

type GetIamRolePolicy struct {
	// Default service strategy (`allow` or `deny`).
	DefaultServiceStrategy string `pulumi:"defaultServiceStrategy"`
	// IAM policy services.
	Services map[string]GetIamRolePolicyServices `pulumi:"services"`
}

// GetIamRolePolicyInput is an input type that accepts GetIamRolePolicyArgs and GetIamRolePolicyOutput values.
// You can construct a concrete instance of `GetIamRolePolicyInput` via:
//
//	GetIamRolePolicyArgs{...}
type GetIamRolePolicyInput interface {
	pulumi.Input

	ToGetIamRolePolicyOutput() GetIamRolePolicyOutput
	ToGetIamRolePolicyOutputWithContext(context.Context) GetIamRolePolicyOutput
}

type GetIamRolePolicyArgs struct {
	// Default service strategy (`allow` or `deny`).
	DefaultServiceStrategy pulumi.StringInput `pulumi:"defaultServiceStrategy"`
	// IAM policy services.
	Services GetIamRolePolicyServicesMapInput `pulumi:"services"`
}

func (GetIamRolePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamRolePolicy)(nil)).Elem()
}

func (i GetIamRolePolicyArgs) ToGetIamRolePolicyOutput() GetIamRolePolicyOutput {
	return i.ToGetIamRolePolicyOutputWithContext(context.Background())
}

func (i GetIamRolePolicyArgs) ToGetIamRolePolicyOutputWithContext(ctx context.Context) GetIamRolePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamRolePolicyOutput)
}

type GetIamRolePolicyOutput struct{ *pulumi.OutputState }

func (GetIamRolePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamRolePolicy)(nil)).Elem()
}

func (o GetIamRolePolicyOutput) ToGetIamRolePolicyOutput() GetIamRolePolicyOutput {
	return o
}

func (o GetIamRolePolicyOutput) ToGetIamRolePolicyOutputWithContext(ctx context.Context) GetIamRolePolicyOutput {
	return o
}

// Default service strategy (`allow` or `deny`).
func (o GetIamRolePolicyOutput) DefaultServiceStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamRolePolicy) string { return v.DefaultServiceStrategy }).(pulumi.StringOutput)
}

// IAM policy services.
func (o GetIamRolePolicyOutput) Services() GetIamRolePolicyServicesMapOutput {
	return o.ApplyT(func(v GetIamRolePolicy) map[string]GetIamRolePolicyServices { return v.Services }).(GetIamRolePolicyServicesMapOutput)
}

type GetIamRolePolicyServices struct {
	// List of IAM service rules (if type is `rules`).
	Rules []GetIamRolePolicyServicesRule `pulumi:"rules"`
	// Service type (`rules`, `allow`, or `deny`).
	Type string `pulumi:"type"`
}

// GetIamRolePolicyServicesInput is an input type that accepts GetIamRolePolicyServicesArgs and GetIamRolePolicyServicesOutput values.
// You can construct a concrete instance of `GetIamRolePolicyServicesInput` via:
//
//	GetIamRolePolicyServicesArgs{...}
type GetIamRolePolicyServicesInput interface {
	pulumi.Input

	ToGetIamRolePolicyServicesOutput() GetIamRolePolicyServicesOutput
	ToGetIamRolePolicyServicesOutputWithContext(context.Context) GetIamRolePolicyServicesOutput
}

type GetIamRolePolicyServicesArgs struct {
	// List of IAM service rules (if type is `rules`).
	Rules GetIamRolePolicyServicesRuleArrayInput `pulumi:"rules"`
	// Service type (`rules`, `allow`, or `deny`).
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetIamRolePolicyServicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamRolePolicyServices)(nil)).Elem()
}

func (i GetIamRolePolicyServicesArgs) ToGetIamRolePolicyServicesOutput() GetIamRolePolicyServicesOutput {
	return i.ToGetIamRolePolicyServicesOutputWithContext(context.Background())
}

func (i GetIamRolePolicyServicesArgs) ToGetIamRolePolicyServicesOutputWithContext(ctx context.Context) GetIamRolePolicyServicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamRolePolicyServicesOutput)
}

// GetIamRolePolicyServicesMapInput is an input type that accepts GetIamRolePolicyServicesMap and GetIamRolePolicyServicesMapOutput values.
// You can construct a concrete instance of `GetIamRolePolicyServicesMapInput` via:
//
//	GetIamRolePolicyServicesMap{ "key": GetIamRolePolicyServicesArgs{...} }
type GetIamRolePolicyServicesMapInput interface {
	pulumi.Input

	ToGetIamRolePolicyServicesMapOutput() GetIamRolePolicyServicesMapOutput
	ToGetIamRolePolicyServicesMapOutputWithContext(context.Context) GetIamRolePolicyServicesMapOutput
}

type GetIamRolePolicyServicesMap map[string]GetIamRolePolicyServicesInput

func (GetIamRolePolicyServicesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetIamRolePolicyServices)(nil)).Elem()
}

func (i GetIamRolePolicyServicesMap) ToGetIamRolePolicyServicesMapOutput() GetIamRolePolicyServicesMapOutput {
	return i.ToGetIamRolePolicyServicesMapOutputWithContext(context.Background())
}

func (i GetIamRolePolicyServicesMap) ToGetIamRolePolicyServicesMapOutputWithContext(ctx context.Context) GetIamRolePolicyServicesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamRolePolicyServicesMapOutput)
}

type GetIamRolePolicyServicesOutput struct{ *pulumi.OutputState }

func (GetIamRolePolicyServicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamRolePolicyServices)(nil)).Elem()
}

func (o GetIamRolePolicyServicesOutput) ToGetIamRolePolicyServicesOutput() GetIamRolePolicyServicesOutput {
	return o
}

func (o GetIamRolePolicyServicesOutput) ToGetIamRolePolicyServicesOutputWithContext(ctx context.Context) GetIamRolePolicyServicesOutput {
	return o
}

// List of IAM service rules (if type is `rules`).
func (o GetIamRolePolicyServicesOutput) Rules() GetIamRolePolicyServicesRuleArrayOutput {
	return o.ApplyT(func(v GetIamRolePolicyServices) []GetIamRolePolicyServicesRule { return v.Rules }).(GetIamRolePolicyServicesRuleArrayOutput)
}

// Service type (`rules`, `allow`, or `deny`).
func (o GetIamRolePolicyServicesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamRolePolicyServices) string { return v.Type }).(pulumi.StringOutput)
}

type GetIamRolePolicyServicesMapOutput struct{ *pulumi.OutputState }

func (GetIamRolePolicyServicesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetIamRolePolicyServices)(nil)).Elem()
}

func (o GetIamRolePolicyServicesMapOutput) ToGetIamRolePolicyServicesMapOutput() GetIamRolePolicyServicesMapOutput {
	return o
}

func (o GetIamRolePolicyServicesMapOutput) ToGetIamRolePolicyServicesMapOutputWithContext(ctx context.Context) GetIamRolePolicyServicesMapOutput {
	return o
}

func (o GetIamRolePolicyServicesMapOutput) MapIndex(k pulumi.StringInput) GetIamRolePolicyServicesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetIamRolePolicyServices {
		return vs[0].(map[string]GetIamRolePolicyServices)[vs[1].(string)]
	}).(GetIamRolePolicyServicesOutput)
}

type GetIamRolePolicyServicesRule struct {
	// IAM policy rule action (`allow` or `deny`).
	Action string `pulumi:"action"`
	// IAM policy rule expression.
	Expression string `pulumi:"expression"`
	// Deprecated: This field is no longer suported.
	Resources []string `pulumi:"resources"`
}

// GetIamRolePolicyServicesRuleInput is an input type that accepts GetIamRolePolicyServicesRuleArgs and GetIamRolePolicyServicesRuleOutput values.
// You can construct a concrete instance of `GetIamRolePolicyServicesRuleInput` via:
//
//	GetIamRolePolicyServicesRuleArgs{...}
type GetIamRolePolicyServicesRuleInput interface {
	pulumi.Input

	ToGetIamRolePolicyServicesRuleOutput() GetIamRolePolicyServicesRuleOutput
	ToGetIamRolePolicyServicesRuleOutputWithContext(context.Context) GetIamRolePolicyServicesRuleOutput
}

type GetIamRolePolicyServicesRuleArgs struct {
	// IAM policy rule action (`allow` or `deny`).
	Action pulumi.StringInput `pulumi:"action"`
	// IAM policy rule expression.
	Expression pulumi.StringInput `pulumi:"expression"`
	// Deprecated: This field is no longer suported.
	Resources pulumi.StringArrayInput `pulumi:"resources"`
}

func (GetIamRolePolicyServicesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamRolePolicyServicesRule)(nil)).Elem()
}

func (i GetIamRolePolicyServicesRuleArgs) ToGetIamRolePolicyServicesRuleOutput() GetIamRolePolicyServicesRuleOutput {
	return i.ToGetIamRolePolicyServicesRuleOutputWithContext(context.Background())
}

func (i GetIamRolePolicyServicesRuleArgs) ToGetIamRolePolicyServicesRuleOutputWithContext(ctx context.Context) GetIamRolePolicyServicesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamRolePolicyServicesRuleOutput)
}

// GetIamRolePolicyServicesRuleArrayInput is an input type that accepts GetIamRolePolicyServicesRuleArray and GetIamRolePolicyServicesRuleArrayOutput values.
// You can construct a concrete instance of `GetIamRolePolicyServicesRuleArrayInput` via:
//
//	GetIamRolePolicyServicesRuleArray{ GetIamRolePolicyServicesRuleArgs{...} }
type GetIamRolePolicyServicesRuleArrayInput interface {
	pulumi.Input

	ToGetIamRolePolicyServicesRuleArrayOutput() GetIamRolePolicyServicesRuleArrayOutput
	ToGetIamRolePolicyServicesRuleArrayOutputWithContext(context.Context) GetIamRolePolicyServicesRuleArrayOutput
}

type GetIamRolePolicyServicesRuleArray []GetIamRolePolicyServicesRuleInput

func (GetIamRolePolicyServicesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIamRolePolicyServicesRule)(nil)).Elem()
}

func (i GetIamRolePolicyServicesRuleArray) ToGetIamRolePolicyServicesRuleArrayOutput() GetIamRolePolicyServicesRuleArrayOutput {
	return i.ToGetIamRolePolicyServicesRuleArrayOutputWithContext(context.Background())
}

func (i GetIamRolePolicyServicesRuleArray) ToGetIamRolePolicyServicesRuleArrayOutputWithContext(ctx context.Context) GetIamRolePolicyServicesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamRolePolicyServicesRuleArrayOutput)
}

type GetIamRolePolicyServicesRuleOutput struct{ *pulumi.OutputState }

func (GetIamRolePolicyServicesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamRolePolicyServicesRule)(nil)).Elem()
}

func (o GetIamRolePolicyServicesRuleOutput) ToGetIamRolePolicyServicesRuleOutput() GetIamRolePolicyServicesRuleOutput {
	return o
}

func (o GetIamRolePolicyServicesRuleOutput) ToGetIamRolePolicyServicesRuleOutputWithContext(ctx context.Context) GetIamRolePolicyServicesRuleOutput {
	return o
}

// IAM policy rule action (`allow` or `deny`).
func (o GetIamRolePolicyServicesRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamRolePolicyServicesRule) string { return v.Action }).(pulumi.StringOutput)
}

// IAM policy rule expression.
func (o GetIamRolePolicyServicesRuleOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamRolePolicyServicesRule) string { return v.Expression }).(pulumi.StringOutput)
}

// Deprecated: This field is no longer suported.
func (o GetIamRolePolicyServicesRuleOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIamRolePolicyServicesRule) []string { return v.Resources }).(pulumi.StringArrayOutput)
}

type GetIamRolePolicyServicesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetIamRolePolicyServicesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIamRolePolicyServicesRule)(nil)).Elem()
}

func (o GetIamRolePolicyServicesRuleArrayOutput) ToGetIamRolePolicyServicesRuleArrayOutput() GetIamRolePolicyServicesRuleArrayOutput {
	return o
}

func (o GetIamRolePolicyServicesRuleArrayOutput) ToGetIamRolePolicyServicesRuleArrayOutputWithContext(ctx context.Context) GetIamRolePolicyServicesRuleArrayOutput {
	return o
}

func (o GetIamRolePolicyServicesRuleArrayOutput) Index(i pulumi.IntInput) GetIamRolePolicyServicesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIamRolePolicyServicesRule {
		return vs[0].([]GetIamRolePolicyServicesRule)[vs[1].(int)]
	}).(GetIamRolePolicyServicesRuleOutput)
}

type GetIamRoleTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
}

// GetIamRoleTimeoutsInput is an input type that accepts GetIamRoleTimeoutsArgs and GetIamRoleTimeoutsOutput values.
// You can construct a concrete instance of `GetIamRoleTimeoutsInput` via:
//
//	GetIamRoleTimeoutsArgs{...}
type GetIamRoleTimeoutsInput interface {
	pulumi.Input

	ToGetIamRoleTimeoutsOutput() GetIamRoleTimeoutsOutput
	ToGetIamRoleTimeoutsOutputWithContext(context.Context) GetIamRoleTimeoutsOutput
}

type GetIamRoleTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
}

func (GetIamRoleTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamRoleTimeouts)(nil)).Elem()
}

func (i GetIamRoleTimeoutsArgs) ToGetIamRoleTimeoutsOutput() GetIamRoleTimeoutsOutput {
	return i.ToGetIamRoleTimeoutsOutputWithContext(context.Background())
}

func (i GetIamRoleTimeoutsArgs) ToGetIamRoleTimeoutsOutputWithContext(ctx context.Context) GetIamRoleTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamRoleTimeoutsOutput)
}

func (i GetIamRoleTimeoutsArgs) ToGetIamRoleTimeoutsPtrOutput() GetIamRoleTimeoutsPtrOutput {
	return i.ToGetIamRoleTimeoutsPtrOutputWithContext(context.Background())
}

func (i GetIamRoleTimeoutsArgs) ToGetIamRoleTimeoutsPtrOutputWithContext(ctx context.Context) GetIamRoleTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamRoleTimeoutsOutput).ToGetIamRoleTimeoutsPtrOutputWithContext(ctx)
}

// GetIamRoleTimeoutsPtrInput is an input type that accepts GetIamRoleTimeoutsArgs, GetIamRoleTimeoutsPtr and GetIamRoleTimeoutsPtrOutput values.
// You can construct a concrete instance of `GetIamRoleTimeoutsPtrInput` via:
//
//	        GetIamRoleTimeoutsArgs{...}
//
//	or:
//
//	        nil
type GetIamRoleTimeoutsPtrInput interface {
	pulumi.Input

	ToGetIamRoleTimeoutsPtrOutput() GetIamRoleTimeoutsPtrOutput
	ToGetIamRoleTimeoutsPtrOutputWithContext(context.Context) GetIamRoleTimeoutsPtrOutput
}

type getIamRoleTimeoutsPtrType GetIamRoleTimeoutsArgs

func GetIamRoleTimeoutsPtr(v *GetIamRoleTimeoutsArgs) GetIamRoleTimeoutsPtrInput {
	return (*getIamRoleTimeoutsPtrType)(v)
}

func (*getIamRoleTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetIamRoleTimeouts)(nil)).Elem()
}

func (i *getIamRoleTimeoutsPtrType) ToGetIamRoleTimeoutsPtrOutput() GetIamRoleTimeoutsPtrOutput {
	return i.ToGetIamRoleTimeoutsPtrOutputWithContext(context.Background())
}

func (i *getIamRoleTimeoutsPtrType) ToGetIamRoleTimeoutsPtrOutputWithContext(ctx context.Context) GetIamRoleTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamRoleTimeoutsPtrOutput)
}

type GetIamRoleTimeoutsOutput struct{ *pulumi.OutputState }

func (GetIamRoleTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamRoleTimeouts)(nil)).Elem()
}

func (o GetIamRoleTimeoutsOutput) ToGetIamRoleTimeoutsOutput() GetIamRoleTimeoutsOutput {
	return o
}

func (o GetIamRoleTimeoutsOutput) ToGetIamRoleTimeoutsOutputWithContext(ctx context.Context) GetIamRoleTimeoutsOutput {
	return o
}

func (o GetIamRoleTimeoutsOutput) ToGetIamRoleTimeoutsPtrOutput() GetIamRoleTimeoutsPtrOutput {
	return o.ToGetIamRoleTimeoutsPtrOutputWithContext(context.Background())
}

func (o GetIamRoleTimeoutsOutput) ToGetIamRoleTimeoutsPtrOutputWithContext(ctx context.Context) GetIamRoleTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetIamRoleTimeouts) *GetIamRoleTimeouts {
		return &v
	}).(GetIamRoleTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o GetIamRoleTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIamRoleTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

type GetIamRoleTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (GetIamRoleTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetIamRoleTimeouts)(nil)).Elem()
}

func (o GetIamRoleTimeoutsPtrOutput) ToGetIamRoleTimeoutsPtrOutput() GetIamRoleTimeoutsPtrOutput {
	return o
}

func (o GetIamRoleTimeoutsPtrOutput) ToGetIamRoleTimeoutsPtrOutputWithContext(ctx context.Context) GetIamRoleTimeoutsPtrOutput {
	return o
}

func (o GetIamRoleTimeoutsPtrOutput) Elem() GetIamRoleTimeoutsOutput {
	return o.ApplyT(func(v *GetIamRoleTimeouts) GetIamRoleTimeouts {
		if v != nil {
			return *v
		}
		var ret GetIamRoleTimeouts
		return ret
	}).(GetIamRoleTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o GetIamRoleTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetIamRoleTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

type GetInstancePoolInstance struct {
	// The compute instance ID.
	Id *string `pulumi:"id"`
	// The instance (main network interface) IPv6 address.
	Ipv6Address string `pulumi:"ipv6Address"`
	// The instance name.
	Name *string `pulumi:"name"`
	// The instance (main network interface) IPv4 address.
	PublicIpAddress string `pulumi:"publicIpAddress"`
}

// GetInstancePoolInstanceInput is an input type that accepts GetInstancePoolInstanceArgs and GetInstancePoolInstanceOutput values.
// You can construct a concrete instance of `GetInstancePoolInstanceInput` via:
//
//	GetInstancePoolInstanceArgs{...}
type GetInstancePoolInstanceInput interface {
	pulumi.Input

	ToGetInstancePoolInstanceOutput() GetInstancePoolInstanceOutput
	ToGetInstancePoolInstanceOutputWithContext(context.Context) GetInstancePoolInstanceOutput
}

type GetInstancePoolInstanceArgs struct {
	// The compute instance ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The instance (main network interface) IPv6 address.
	Ipv6Address pulumi.StringInput `pulumi:"ipv6Address"`
	// The instance name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The instance (main network interface) IPv4 address.
	PublicIpAddress pulumi.StringInput `pulumi:"publicIpAddress"`
}

func (GetInstancePoolInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancePoolInstance)(nil)).Elem()
}

func (i GetInstancePoolInstanceArgs) ToGetInstancePoolInstanceOutput() GetInstancePoolInstanceOutput {
	return i.ToGetInstancePoolInstanceOutputWithContext(context.Background())
}

func (i GetInstancePoolInstanceArgs) ToGetInstancePoolInstanceOutputWithContext(ctx context.Context) GetInstancePoolInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancePoolInstanceOutput)
}

// GetInstancePoolInstanceArrayInput is an input type that accepts GetInstancePoolInstanceArray and GetInstancePoolInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancePoolInstanceArrayInput` via:
//
//	GetInstancePoolInstanceArray{ GetInstancePoolInstanceArgs{...} }
type GetInstancePoolInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancePoolInstanceArrayOutput() GetInstancePoolInstanceArrayOutput
	ToGetInstancePoolInstanceArrayOutputWithContext(context.Context) GetInstancePoolInstanceArrayOutput
}

type GetInstancePoolInstanceArray []GetInstancePoolInstanceInput

func (GetInstancePoolInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancePoolInstance)(nil)).Elem()
}

func (i GetInstancePoolInstanceArray) ToGetInstancePoolInstanceArrayOutput() GetInstancePoolInstanceArrayOutput {
	return i.ToGetInstancePoolInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancePoolInstanceArray) ToGetInstancePoolInstanceArrayOutputWithContext(ctx context.Context) GetInstancePoolInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancePoolInstanceArrayOutput)
}

type GetInstancePoolInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancePoolInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancePoolInstance)(nil)).Elem()
}

func (o GetInstancePoolInstanceOutput) ToGetInstancePoolInstanceOutput() GetInstancePoolInstanceOutput {
	return o
}

func (o GetInstancePoolInstanceOutput) ToGetInstancePoolInstanceOutputWithContext(ctx context.Context) GetInstancePoolInstanceOutput {
	return o
}

// The compute instance ID.
func (o GetInstancePoolInstanceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancePoolInstance) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The instance (main network interface) IPv6 address.
func (o GetInstancePoolInstanceOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePoolInstance) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

// The instance name.
func (o GetInstancePoolInstanceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancePoolInstance) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The instance (main network interface) IPv4 address.
func (o GetInstancePoolInstanceOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePoolInstance) string { return v.PublicIpAddress }).(pulumi.StringOutput)
}

type GetInstancePoolInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancePoolInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancePoolInstance)(nil)).Elem()
}

func (o GetInstancePoolInstanceArrayOutput) ToGetInstancePoolInstanceArrayOutput() GetInstancePoolInstanceArrayOutput {
	return o
}

func (o GetInstancePoolInstanceArrayOutput) ToGetInstancePoolInstanceArrayOutputWithContext(ctx context.Context) GetInstancePoolInstanceArrayOutput {
	return o
}

func (o GetInstancePoolInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancePoolInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancePoolInstance {
		return vs[0].([]GetInstancePoolInstance)[vs[1].(int)]
	}).(GetInstancePoolInstanceOutput)
}

type GetInstancePoolListPool struct {
	// The list of attached AntiAffinityGroup (IDs). Use antiAffinityGroupIds instead.
	//
	// Deprecated: Use antiAffinityGroupIds instead.
	AffinityGroupIds []string `pulumi:"affinityGroupIds"`
	// The list of attached AntiAffinityGroup (IDs).
	AntiAffinityGroupIds []string `pulumi:"antiAffinityGroupIds"`
	// The deploy target ID.
	DeployTargetId string `pulumi:"deployTargetId"`
	// The instance pool description.
	Description string `pulumi:"description"`
	// The managed instances disk size.
	DiskSize int `pulumi:"diskSize"`
	// The list of attached ElasticIp (IDs).
	ElasticIpIds []string `pulumi:"elasticIpIds"`
	// The instance pool ID to match (conflicts with `name`).
	Id *string `pulumi:"id"`
	// The string used to prefix the managed instances name.
	InstancePrefix string `pulumi:"instancePrefix"`
	// The managed instances type.
	InstanceType string `pulumi:"instanceType"`
	// The list of managed instances. Structure is documented below.
	Instances []GetInstancePoolListPoolInstance `pulumi:"instances"`
	// Whether IPv6 is enabled on managed instances.
	Ipv6 bool `pulumi:"ipv6"`
	// The SshKey (name) authorized on the managed instances.
	KeyPair string `pulumi:"keyPair"`
	// A map of key/value labels.
	Labels map[string]string `pulumi:"labels"`
	// Minimum number of running Instances.
	MinAvailable int `pulumi:"minAvailable"`
	// The pool name to match (conflicts with `id`).
	Name *string `pulumi:"name"`
	// The list of attached PrivateNetwork (IDs).
	NetworkIds []string `pulumi:"networkIds"`
	// The list of attached SecurityGroup (IDs).
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The number managed instances.
	Size int `pulumi:"size"`
	// The pool state.
	State string `pulumi:"state"`
	// The managed instances getTemplate ID.
	TemplateId string `pulumi:"templateId"`
	// [cloud-init](http://cloudinit.readthedocs.io/en/latest/) configuration.
	UserData string `pulumi:"userData"`
	// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
	Zone string `pulumi:"zone"`
}

// GetInstancePoolListPoolInput is an input type that accepts GetInstancePoolListPoolArgs and GetInstancePoolListPoolOutput values.
// You can construct a concrete instance of `GetInstancePoolListPoolInput` via:
//
//	GetInstancePoolListPoolArgs{...}
type GetInstancePoolListPoolInput interface {
	pulumi.Input

	ToGetInstancePoolListPoolOutput() GetInstancePoolListPoolOutput
	ToGetInstancePoolListPoolOutputWithContext(context.Context) GetInstancePoolListPoolOutput
}

type GetInstancePoolListPoolArgs struct {
	// The list of attached AntiAffinityGroup (IDs). Use antiAffinityGroupIds instead.
	//
	// Deprecated: Use antiAffinityGroupIds instead.
	AffinityGroupIds pulumi.StringArrayInput `pulumi:"affinityGroupIds"`
	// The list of attached AntiAffinityGroup (IDs).
	AntiAffinityGroupIds pulumi.StringArrayInput `pulumi:"antiAffinityGroupIds"`
	// The deploy target ID.
	DeployTargetId pulumi.StringInput `pulumi:"deployTargetId"`
	// The instance pool description.
	Description pulumi.StringInput `pulumi:"description"`
	// The managed instances disk size.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// The list of attached ElasticIp (IDs).
	ElasticIpIds pulumi.StringArrayInput `pulumi:"elasticIpIds"`
	// The instance pool ID to match (conflicts with `name`).
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The string used to prefix the managed instances name.
	InstancePrefix pulumi.StringInput `pulumi:"instancePrefix"`
	// The managed instances type.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The list of managed instances. Structure is documented below.
	Instances GetInstancePoolListPoolInstanceArrayInput `pulumi:"instances"`
	// Whether IPv6 is enabled on managed instances.
	Ipv6 pulumi.BoolInput `pulumi:"ipv6"`
	// The SshKey (name) authorized on the managed instances.
	KeyPair pulumi.StringInput `pulumi:"keyPair"`
	// A map of key/value labels.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Minimum number of running Instances.
	MinAvailable pulumi.IntInput `pulumi:"minAvailable"`
	// The pool name to match (conflicts with `id`).
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The list of attached PrivateNetwork (IDs).
	NetworkIds pulumi.StringArrayInput `pulumi:"networkIds"`
	// The list of attached SecurityGroup (IDs).
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The number managed instances.
	Size pulumi.IntInput `pulumi:"size"`
	// The pool state.
	State pulumi.StringInput `pulumi:"state"`
	// The managed instances getTemplate ID.
	TemplateId pulumi.StringInput `pulumi:"templateId"`
	// [cloud-init](http://cloudinit.readthedocs.io/en/latest/) configuration.
	UserData pulumi.StringInput `pulumi:"userData"`
	// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetInstancePoolListPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancePoolListPool)(nil)).Elem()
}

func (i GetInstancePoolListPoolArgs) ToGetInstancePoolListPoolOutput() GetInstancePoolListPoolOutput {
	return i.ToGetInstancePoolListPoolOutputWithContext(context.Background())
}

func (i GetInstancePoolListPoolArgs) ToGetInstancePoolListPoolOutputWithContext(ctx context.Context) GetInstancePoolListPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancePoolListPoolOutput)
}

// GetInstancePoolListPoolArrayInput is an input type that accepts GetInstancePoolListPoolArray and GetInstancePoolListPoolArrayOutput values.
// You can construct a concrete instance of `GetInstancePoolListPoolArrayInput` via:
//
//	GetInstancePoolListPoolArray{ GetInstancePoolListPoolArgs{...} }
type GetInstancePoolListPoolArrayInput interface {
	pulumi.Input

	ToGetInstancePoolListPoolArrayOutput() GetInstancePoolListPoolArrayOutput
	ToGetInstancePoolListPoolArrayOutputWithContext(context.Context) GetInstancePoolListPoolArrayOutput
}

type GetInstancePoolListPoolArray []GetInstancePoolListPoolInput

func (GetInstancePoolListPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancePoolListPool)(nil)).Elem()
}

func (i GetInstancePoolListPoolArray) ToGetInstancePoolListPoolArrayOutput() GetInstancePoolListPoolArrayOutput {
	return i.ToGetInstancePoolListPoolArrayOutputWithContext(context.Background())
}

func (i GetInstancePoolListPoolArray) ToGetInstancePoolListPoolArrayOutputWithContext(ctx context.Context) GetInstancePoolListPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancePoolListPoolArrayOutput)
}

type GetInstancePoolListPoolOutput struct{ *pulumi.OutputState }

func (GetInstancePoolListPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancePoolListPool)(nil)).Elem()
}

func (o GetInstancePoolListPoolOutput) ToGetInstancePoolListPoolOutput() GetInstancePoolListPoolOutput {
	return o
}

func (o GetInstancePoolListPoolOutput) ToGetInstancePoolListPoolOutputWithContext(ctx context.Context) GetInstancePoolListPoolOutput {
	return o
}

// The list of attached AntiAffinityGroup (IDs). Use antiAffinityGroupIds instead.
//
// Deprecated: Use antiAffinityGroupIds instead.
func (o GetInstancePoolListPoolOutput) AffinityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancePoolListPool) []string { return v.AffinityGroupIds }).(pulumi.StringArrayOutput)
}

// The list of attached AntiAffinityGroup (IDs).
func (o GetInstancePoolListPoolOutput) AntiAffinityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancePoolListPool) []string { return v.AntiAffinityGroupIds }).(pulumi.StringArrayOutput)
}

// The deploy target ID.
func (o GetInstancePoolListPoolOutput) DeployTargetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePoolListPool) string { return v.DeployTargetId }).(pulumi.StringOutput)
}

// The instance pool description.
func (o GetInstancePoolListPoolOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePoolListPool) string { return v.Description }).(pulumi.StringOutput)
}

// The managed instances disk size.
func (o GetInstancePoolListPoolOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancePoolListPool) int { return v.DiskSize }).(pulumi.IntOutput)
}

// The list of attached ElasticIp (IDs).
func (o GetInstancePoolListPoolOutput) ElasticIpIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancePoolListPool) []string { return v.ElasticIpIds }).(pulumi.StringArrayOutput)
}

// The instance pool ID to match (conflicts with `name`).
func (o GetInstancePoolListPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancePoolListPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The string used to prefix the managed instances name.
func (o GetInstancePoolListPoolOutput) InstancePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePoolListPool) string { return v.InstancePrefix }).(pulumi.StringOutput)
}

// The managed instances type.
func (o GetInstancePoolListPoolOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePoolListPool) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The list of managed instances. Structure is documented below.
func (o GetInstancePoolListPoolOutput) Instances() GetInstancePoolListPoolInstanceArrayOutput {
	return o.ApplyT(func(v GetInstancePoolListPool) []GetInstancePoolListPoolInstance { return v.Instances }).(GetInstancePoolListPoolInstanceArrayOutput)
}

// Whether IPv6 is enabled on managed instances.
func (o GetInstancePoolListPoolOutput) Ipv6() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancePoolListPool) bool { return v.Ipv6 }).(pulumi.BoolOutput)
}

// The SshKey (name) authorized on the managed instances.
func (o GetInstancePoolListPoolOutput) KeyPair() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePoolListPool) string { return v.KeyPair }).(pulumi.StringOutput)
}

// A map of key/value labels.
func (o GetInstancePoolListPoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetInstancePoolListPool) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Minimum number of running Instances.
func (o GetInstancePoolListPoolOutput) MinAvailable() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancePoolListPool) int { return v.MinAvailable }).(pulumi.IntOutput)
}

// The pool name to match (conflicts with `id`).
func (o GetInstancePoolListPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancePoolListPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The list of attached PrivateNetwork (IDs).
func (o GetInstancePoolListPoolOutput) NetworkIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancePoolListPool) []string { return v.NetworkIds }).(pulumi.StringArrayOutput)
}

// The list of attached SecurityGroup (IDs).
func (o GetInstancePoolListPoolOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancePoolListPool) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The number managed instances.
func (o GetInstancePoolListPoolOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancePoolListPool) int { return v.Size }).(pulumi.IntOutput)
}

// The pool state.
func (o GetInstancePoolListPoolOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePoolListPool) string { return v.State }).(pulumi.StringOutput)
}

// The managed instances getTemplate ID.
func (o GetInstancePoolListPoolOutput) TemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePoolListPool) string { return v.TemplateId }).(pulumi.StringOutput)
}

// [cloud-init](http://cloudinit.readthedocs.io/en/latest/) configuration.
func (o GetInstancePoolListPoolOutput) UserData() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePoolListPool) string { return v.UserData }).(pulumi.StringOutput)
}

// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
func (o GetInstancePoolListPoolOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePoolListPool) string { return v.Zone }).(pulumi.StringOutput)
}

type GetInstancePoolListPoolArrayOutput struct{ *pulumi.OutputState }

func (GetInstancePoolListPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancePoolListPool)(nil)).Elem()
}

func (o GetInstancePoolListPoolArrayOutput) ToGetInstancePoolListPoolArrayOutput() GetInstancePoolListPoolArrayOutput {
	return o
}

func (o GetInstancePoolListPoolArrayOutput) ToGetInstancePoolListPoolArrayOutputWithContext(ctx context.Context) GetInstancePoolListPoolArrayOutput {
	return o
}

func (o GetInstancePoolListPoolArrayOutput) Index(i pulumi.IntInput) GetInstancePoolListPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancePoolListPool {
		return vs[0].([]GetInstancePoolListPool)[vs[1].(int)]
	}).(GetInstancePoolListPoolOutput)
}

type GetInstancePoolListPoolInstance struct {
	// The compute instance ID.
	Id *string `pulumi:"id"`
	// The instance (main network interface) IPv6 address.
	Ipv6Address string `pulumi:"ipv6Address"`
	// The instance name.
	Name *string `pulumi:"name"`
	// The instance (main network interface) IPv4 address.
	PublicIpAddress string `pulumi:"publicIpAddress"`
}

// GetInstancePoolListPoolInstanceInput is an input type that accepts GetInstancePoolListPoolInstanceArgs and GetInstancePoolListPoolInstanceOutput values.
// You can construct a concrete instance of `GetInstancePoolListPoolInstanceInput` via:
//
//	GetInstancePoolListPoolInstanceArgs{...}
type GetInstancePoolListPoolInstanceInput interface {
	pulumi.Input

	ToGetInstancePoolListPoolInstanceOutput() GetInstancePoolListPoolInstanceOutput
	ToGetInstancePoolListPoolInstanceOutputWithContext(context.Context) GetInstancePoolListPoolInstanceOutput
}

type GetInstancePoolListPoolInstanceArgs struct {
	// The compute instance ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The instance (main network interface) IPv6 address.
	Ipv6Address pulumi.StringInput `pulumi:"ipv6Address"`
	// The instance name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The instance (main network interface) IPv4 address.
	PublicIpAddress pulumi.StringInput `pulumi:"publicIpAddress"`
}

func (GetInstancePoolListPoolInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancePoolListPoolInstance)(nil)).Elem()
}

func (i GetInstancePoolListPoolInstanceArgs) ToGetInstancePoolListPoolInstanceOutput() GetInstancePoolListPoolInstanceOutput {
	return i.ToGetInstancePoolListPoolInstanceOutputWithContext(context.Background())
}

func (i GetInstancePoolListPoolInstanceArgs) ToGetInstancePoolListPoolInstanceOutputWithContext(ctx context.Context) GetInstancePoolListPoolInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancePoolListPoolInstanceOutput)
}

// GetInstancePoolListPoolInstanceArrayInput is an input type that accepts GetInstancePoolListPoolInstanceArray and GetInstancePoolListPoolInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancePoolListPoolInstanceArrayInput` via:
//
//	GetInstancePoolListPoolInstanceArray{ GetInstancePoolListPoolInstanceArgs{...} }
type GetInstancePoolListPoolInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancePoolListPoolInstanceArrayOutput() GetInstancePoolListPoolInstanceArrayOutput
	ToGetInstancePoolListPoolInstanceArrayOutputWithContext(context.Context) GetInstancePoolListPoolInstanceArrayOutput
}

type GetInstancePoolListPoolInstanceArray []GetInstancePoolListPoolInstanceInput

func (GetInstancePoolListPoolInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancePoolListPoolInstance)(nil)).Elem()
}

func (i GetInstancePoolListPoolInstanceArray) ToGetInstancePoolListPoolInstanceArrayOutput() GetInstancePoolListPoolInstanceArrayOutput {
	return i.ToGetInstancePoolListPoolInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancePoolListPoolInstanceArray) ToGetInstancePoolListPoolInstanceArrayOutputWithContext(ctx context.Context) GetInstancePoolListPoolInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancePoolListPoolInstanceArrayOutput)
}

type GetInstancePoolListPoolInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancePoolListPoolInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancePoolListPoolInstance)(nil)).Elem()
}

func (o GetInstancePoolListPoolInstanceOutput) ToGetInstancePoolListPoolInstanceOutput() GetInstancePoolListPoolInstanceOutput {
	return o
}

func (o GetInstancePoolListPoolInstanceOutput) ToGetInstancePoolListPoolInstanceOutputWithContext(ctx context.Context) GetInstancePoolListPoolInstanceOutput {
	return o
}

// The compute instance ID.
func (o GetInstancePoolListPoolInstanceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancePoolListPoolInstance) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The instance (main network interface) IPv6 address.
func (o GetInstancePoolListPoolInstanceOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePoolListPoolInstance) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

// The instance name.
func (o GetInstancePoolListPoolInstanceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancePoolListPoolInstance) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The instance (main network interface) IPv4 address.
func (o GetInstancePoolListPoolInstanceOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePoolListPoolInstance) string { return v.PublicIpAddress }).(pulumi.StringOutput)
}

type GetInstancePoolListPoolInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancePoolListPoolInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancePoolListPoolInstance)(nil)).Elem()
}

func (o GetInstancePoolListPoolInstanceArrayOutput) ToGetInstancePoolListPoolInstanceArrayOutput() GetInstancePoolListPoolInstanceArrayOutput {
	return o
}

func (o GetInstancePoolListPoolInstanceArrayOutput) ToGetInstancePoolListPoolInstanceArrayOutputWithContext(ctx context.Context) GetInstancePoolListPoolInstanceArrayOutput {
	return o
}

func (o GetInstancePoolListPoolInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancePoolListPoolInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancePoolListPoolInstance {
		return vs[0].([]GetInstancePoolListPoolInstance)[vs[1].(int)]
	}).(GetInstancePoolListPoolInstanceOutput)
}

type GetNlbServiceListService struct {
	// NLB service description.
	Description string                              `pulumi:"description"`
	Healthcheck GetNlbServiceListServiceHealthcheck `pulumi:"healthcheck"`
	// NLB service ID.
	Id string `pulumi:"id"`
	// The exoscale*instance*pool (ID) to forward traffic to.
	InstancePoolId string `pulumi:"instancePoolId"`
	// NLB Service name.
	Name string `pulumi:"name"`
	// Port exposed on the NLB's public IP.
	Port int `pulumi:"port"`
	// Network traffic protocol.
	Protocol string `pulumi:"protocol"`
	// NLB Service State.
	State string `pulumi:"state"`
	// The strategy (`round-robin`|`source-hash`).
	Strategy string `pulumi:"strategy"`
	// Port on which the network traffic will be forwarded to on the receiving instance.
	TargetPort int `pulumi:"targetPort"`
}

// GetNlbServiceListServiceInput is an input type that accepts GetNlbServiceListServiceArgs and GetNlbServiceListServiceOutput values.
// You can construct a concrete instance of `GetNlbServiceListServiceInput` via:
//
//	GetNlbServiceListServiceArgs{...}
type GetNlbServiceListServiceInput interface {
	pulumi.Input

	ToGetNlbServiceListServiceOutput() GetNlbServiceListServiceOutput
	ToGetNlbServiceListServiceOutputWithContext(context.Context) GetNlbServiceListServiceOutput
}

type GetNlbServiceListServiceArgs struct {
	// NLB service description.
	Description pulumi.StringInput                       `pulumi:"description"`
	Healthcheck GetNlbServiceListServiceHealthcheckInput `pulumi:"healthcheck"`
	// NLB service ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The exoscale*instance*pool (ID) to forward traffic to.
	InstancePoolId pulumi.StringInput `pulumi:"instancePoolId"`
	// NLB Service name.
	Name pulumi.StringInput `pulumi:"name"`
	// Port exposed on the NLB's public IP.
	Port pulumi.IntInput `pulumi:"port"`
	// Network traffic protocol.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// NLB Service State.
	State pulumi.StringInput `pulumi:"state"`
	// The strategy (`round-robin`|`source-hash`).
	Strategy pulumi.StringInput `pulumi:"strategy"`
	// Port on which the network traffic will be forwarded to on the receiving instance.
	TargetPort pulumi.IntInput `pulumi:"targetPort"`
}

func (GetNlbServiceListServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNlbServiceListService)(nil)).Elem()
}

func (i GetNlbServiceListServiceArgs) ToGetNlbServiceListServiceOutput() GetNlbServiceListServiceOutput {
	return i.ToGetNlbServiceListServiceOutputWithContext(context.Background())
}

func (i GetNlbServiceListServiceArgs) ToGetNlbServiceListServiceOutputWithContext(ctx context.Context) GetNlbServiceListServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNlbServiceListServiceOutput)
}

// GetNlbServiceListServiceArrayInput is an input type that accepts GetNlbServiceListServiceArray and GetNlbServiceListServiceArrayOutput values.
// You can construct a concrete instance of `GetNlbServiceListServiceArrayInput` via:
//
//	GetNlbServiceListServiceArray{ GetNlbServiceListServiceArgs{...} }
type GetNlbServiceListServiceArrayInput interface {
	pulumi.Input

	ToGetNlbServiceListServiceArrayOutput() GetNlbServiceListServiceArrayOutput
	ToGetNlbServiceListServiceArrayOutputWithContext(context.Context) GetNlbServiceListServiceArrayOutput
}

type GetNlbServiceListServiceArray []GetNlbServiceListServiceInput

func (GetNlbServiceListServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNlbServiceListService)(nil)).Elem()
}

func (i GetNlbServiceListServiceArray) ToGetNlbServiceListServiceArrayOutput() GetNlbServiceListServiceArrayOutput {
	return i.ToGetNlbServiceListServiceArrayOutputWithContext(context.Background())
}

func (i GetNlbServiceListServiceArray) ToGetNlbServiceListServiceArrayOutputWithContext(ctx context.Context) GetNlbServiceListServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNlbServiceListServiceArrayOutput)
}

type GetNlbServiceListServiceOutput struct{ *pulumi.OutputState }

func (GetNlbServiceListServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNlbServiceListService)(nil)).Elem()
}

func (o GetNlbServiceListServiceOutput) ToGetNlbServiceListServiceOutput() GetNlbServiceListServiceOutput {
	return o
}

func (o GetNlbServiceListServiceOutput) ToGetNlbServiceListServiceOutputWithContext(ctx context.Context) GetNlbServiceListServiceOutput {
	return o
}

// NLB service description.
func (o GetNlbServiceListServiceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNlbServiceListService) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetNlbServiceListServiceOutput) Healthcheck() GetNlbServiceListServiceHealthcheckOutput {
	return o.ApplyT(func(v GetNlbServiceListService) GetNlbServiceListServiceHealthcheck { return v.Healthcheck }).(GetNlbServiceListServiceHealthcheckOutput)
}

// NLB service ID.
func (o GetNlbServiceListServiceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNlbServiceListService) string { return v.Id }).(pulumi.StringOutput)
}

// The exoscale*instance*pool (ID) to forward traffic to.
func (o GetNlbServiceListServiceOutput) InstancePoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNlbServiceListService) string { return v.InstancePoolId }).(pulumi.StringOutput)
}

// NLB Service name.
func (o GetNlbServiceListServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNlbServiceListService) string { return v.Name }).(pulumi.StringOutput)
}

// Port exposed on the NLB's public IP.
func (o GetNlbServiceListServiceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetNlbServiceListService) int { return v.Port }).(pulumi.IntOutput)
}

// Network traffic protocol.
func (o GetNlbServiceListServiceOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetNlbServiceListService) string { return v.Protocol }).(pulumi.StringOutput)
}

// NLB Service State.
func (o GetNlbServiceListServiceOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetNlbServiceListService) string { return v.State }).(pulumi.StringOutput)
}

// The strategy (`round-robin`|`source-hash`).
func (o GetNlbServiceListServiceOutput) Strategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetNlbServiceListService) string { return v.Strategy }).(pulumi.StringOutput)
}

// Port on which the network traffic will be forwarded to on the receiving instance.
func (o GetNlbServiceListServiceOutput) TargetPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetNlbServiceListService) int { return v.TargetPort }).(pulumi.IntOutput)
}

type GetNlbServiceListServiceArrayOutput struct{ *pulumi.OutputState }

func (GetNlbServiceListServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNlbServiceListService)(nil)).Elem()
}

func (o GetNlbServiceListServiceArrayOutput) ToGetNlbServiceListServiceArrayOutput() GetNlbServiceListServiceArrayOutput {
	return o
}

func (o GetNlbServiceListServiceArrayOutput) ToGetNlbServiceListServiceArrayOutputWithContext(ctx context.Context) GetNlbServiceListServiceArrayOutput {
	return o
}

func (o GetNlbServiceListServiceArrayOutput) Index(i pulumi.IntInput) GetNlbServiceListServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNlbServiceListService {
		return vs[0].([]GetNlbServiceListService)[vs[1].(int)]
	}).(GetNlbServiceListServiceOutput)
}

type GetNlbServiceListServiceHealthcheck struct {
	Interval int    `pulumi:"interval"`
	Mode     string `pulumi:"mode"`
	Port     int    `pulumi:"port"`
	Retries  int    `pulumi:"retries"`
	Timeout  int    `pulumi:"timeout"`
	TlsSni   string `pulumi:"tlsSni"`
	Uri      string `pulumi:"uri"`
}

// GetNlbServiceListServiceHealthcheckInput is an input type that accepts GetNlbServiceListServiceHealthcheckArgs and GetNlbServiceListServiceHealthcheckOutput values.
// You can construct a concrete instance of `GetNlbServiceListServiceHealthcheckInput` via:
//
//	GetNlbServiceListServiceHealthcheckArgs{...}
type GetNlbServiceListServiceHealthcheckInput interface {
	pulumi.Input

	ToGetNlbServiceListServiceHealthcheckOutput() GetNlbServiceListServiceHealthcheckOutput
	ToGetNlbServiceListServiceHealthcheckOutputWithContext(context.Context) GetNlbServiceListServiceHealthcheckOutput
}

type GetNlbServiceListServiceHealthcheckArgs struct {
	Interval pulumi.IntInput    `pulumi:"interval"`
	Mode     pulumi.StringInput `pulumi:"mode"`
	Port     pulumi.IntInput    `pulumi:"port"`
	Retries  pulumi.IntInput    `pulumi:"retries"`
	Timeout  pulumi.IntInput    `pulumi:"timeout"`
	TlsSni   pulumi.StringInput `pulumi:"tlsSni"`
	Uri      pulumi.StringInput `pulumi:"uri"`
}

func (GetNlbServiceListServiceHealthcheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNlbServiceListServiceHealthcheck)(nil)).Elem()
}

func (i GetNlbServiceListServiceHealthcheckArgs) ToGetNlbServiceListServiceHealthcheckOutput() GetNlbServiceListServiceHealthcheckOutput {
	return i.ToGetNlbServiceListServiceHealthcheckOutputWithContext(context.Background())
}

func (i GetNlbServiceListServiceHealthcheckArgs) ToGetNlbServiceListServiceHealthcheckOutputWithContext(ctx context.Context) GetNlbServiceListServiceHealthcheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNlbServiceListServiceHealthcheckOutput)
}

type GetNlbServiceListServiceHealthcheckOutput struct{ *pulumi.OutputState }

func (GetNlbServiceListServiceHealthcheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNlbServiceListServiceHealthcheck)(nil)).Elem()
}

func (o GetNlbServiceListServiceHealthcheckOutput) ToGetNlbServiceListServiceHealthcheckOutput() GetNlbServiceListServiceHealthcheckOutput {
	return o
}

func (o GetNlbServiceListServiceHealthcheckOutput) ToGetNlbServiceListServiceHealthcheckOutputWithContext(ctx context.Context) GetNlbServiceListServiceHealthcheckOutput {
	return o
}

func (o GetNlbServiceListServiceHealthcheckOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v GetNlbServiceListServiceHealthcheck) int { return v.Interval }).(pulumi.IntOutput)
}

func (o GetNlbServiceListServiceHealthcheckOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetNlbServiceListServiceHealthcheck) string { return v.Mode }).(pulumi.StringOutput)
}

func (o GetNlbServiceListServiceHealthcheckOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetNlbServiceListServiceHealthcheck) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetNlbServiceListServiceHealthcheckOutput) Retries() pulumi.IntOutput {
	return o.ApplyT(func(v GetNlbServiceListServiceHealthcheck) int { return v.Retries }).(pulumi.IntOutput)
}

func (o GetNlbServiceListServiceHealthcheckOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetNlbServiceListServiceHealthcheck) int { return v.Timeout }).(pulumi.IntOutput)
}

func (o GetNlbServiceListServiceHealthcheckOutput) TlsSni() pulumi.StringOutput {
	return o.ApplyT(func(v GetNlbServiceListServiceHealthcheck) string { return v.TlsSni }).(pulumi.StringOutput)
}

func (o GetNlbServiceListServiceHealthcheckOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetNlbServiceListServiceHealthcheck) string { return v.Uri }).(pulumi.StringOutput)
}

type GetNlbServiceListTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
}

// GetNlbServiceListTimeoutsInput is an input type that accepts GetNlbServiceListTimeoutsArgs and GetNlbServiceListTimeoutsOutput values.
// You can construct a concrete instance of `GetNlbServiceListTimeoutsInput` via:
//
//	GetNlbServiceListTimeoutsArgs{...}
type GetNlbServiceListTimeoutsInput interface {
	pulumi.Input

	ToGetNlbServiceListTimeoutsOutput() GetNlbServiceListTimeoutsOutput
	ToGetNlbServiceListTimeoutsOutputWithContext(context.Context) GetNlbServiceListTimeoutsOutput
}

type GetNlbServiceListTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
}

func (GetNlbServiceListTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNlbServiceListTimeouts)(nil)).Elem()
}

func (i GetNlbServiceListTimeoutsArgs) ToGetNlbServiceListTimeoutsOutput() GetNlbServiceListTimeoutsOutput {
	return i.ToGetNlbServiceListTimeoutsOutputWithContext(context.Background())
}

func (i GetNlbServiceListTimeoutsArgs) ToGetNlbServiceListTimeoutsOutputWithContext(ctx context.Context) GetNlbServiceListTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNlbServiceListTimeoutsOutput)
}

func (i GetNlbServiceListTimeoutsArgs) ToGetNlbServiceListTimeoutsPtrOutput() GetNlbServiceListTimeoutsPtrOutput {
	return i.ToGetNlbServiceListTimeoutsPtrOutputWithContext(context.Background())
}

func (i GetNlbServiceListTimeoutsArgs) ToGetNlbServiceListTimeoutsPtrOutputWithContext(ctx context.Context) GetNlbServiceListTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNlbServiceListTimeoutsOutput).ToGetNlbServiceListTimeoutsPtrOutputWithContext(ctx)
}

// GetNlbServiceListTimeoutsPtrInput is an input type that accepts GetNlbServiceListTimeoutsArgs, GetNlbServiceListTimeoutsPtr and GetNlbServiceListTimeoutsPtrOutput values.
// You can construct a concrete instance of `GetNlbServiceListTimeoutsPtrInput` via:
//
//	        GetNlbServiceListTimeoutsArgs{...}
//
//	or:
//
//	        nil
type GetNlbServiceListTimeoutsPtrInput interface {
	pulumi.Input

	ToGetNlbServiceListTimeoutsPtrOutput() GetNlbServiceListTimeoutsPtrOutput
	ToGetNlbServiceListTimeoutsPtrOutputWithContext(context.Context) GetNlbServiceListTimeoutsPtrOutput
}

type getNlbServiceListTimeoutsPtrType GetNlbServiceListTimeoutsArgs

func GetNlbServiceListTimeoutsPtr(v *GetNlbServiceListTimeoutsArgs) GetNlbServiceListTimeoutsPtrInput {
	return (*getNlbServiceListTimeoutsPtrType)(v)
}

func (*getNlbServiceListTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetNlbServiceListTimeouts)(nil)).Elem()
}

func (i *getNlbServiceListTimeoutsPtrType) ToGetNlbServiceListTimeoutsPtrOutput() GetNlbServiceListTimeoutsPtrOutput {
	return i.ToGetNlbServiceListTimeoutsPtrOutputWithContext(context.Background())
}

func (i *getNlbServiceListTimeoutsPtrType) ToGetNlbServiceListTimeoutsPtrOutputWithContext(ctx context.Context) GetNlbServiceListTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNlbServiceListTimeoutsPtrOutput)
}

type GetNlbServiceListTimeoutsOutput struct{ *pulumi.OutputState }

func (GetNlbServiceListTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNlbServiceListTimeouts)(nil)).Elem()
}

func (o GetNlbServiceListTimeoutsOutput) ToGetNlbServiceListTimeoutsOutput() GetNlbServiceListTimeoutsOutput {
	return o
}

func (o GetNlbServiceListTimeoutsOutput) ToGetNlbServiceListTimeoutsOutputWithContext(ctx context.Context) GetNlbServiceListTimeoutsOutput {
	return o
}

func (o GetNlbServiceListTimeoutsOutput) ToGetNlbServiceListTimeoutsPtrOutput() GetNlbServiceListTimeoutsPtrOutput {
	return o.ToGetNlbServiceListTimeoutsPtrOutputWithContext(context.Background())
}

func (o GetNlbServiceListTimeoutsOutput) ToGetNlbServiceListTimeoutsPtrOutputWithContext(ctx context.Context) GetNlbServiceListTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetNlbServiceListTimeouts) *GetNlbServiceListTimeouts {
		return &v
	}).(GetNlbServiceListTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o GetNlbServiceListTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNlbServiceListTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

type GetNlbServiceListTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (GetNlbServiceListTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetNlbServiceListTimeouts)(nil)).Elem()
}

func (o GetNlbServiceListTimeoutsPtrOutput) ToGetNlbServiceListTimeoutsPtrOutput() GetNlbServiceListTimeoutsPtrOutput {
	return o
}

func (o GetNlbServiceListTimeoutsPtrOutput) ToGetNlbServiceListTimeoutsPtrOutputWithContext(ctx context.Context) GetNlbServiceListTimeoutsPtrOutput {
	return o
}

func (o GetNlbServiceListTimeoutsPtrOutput) Elem() GetNlbServiceListTimeoutsOutput {
	return o.ApplyT(func(v *GetNlbServiceListTimeouts) GetNlbServiceListTimeouts {
		if v != nil {
			return *v
		}
		var ret GetNlbServiceListTimeouts
		return ret
	}).(GetNlbServiceListTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o GetNlbServiceListTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetNlbServiceListTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

type GetSksClusterAudit struct {
	// The optional bearer token to include in the request header
	BearerToken *string `pulumi:"bearerToken"`
	// Whether to run the APIServer with the configured Kubernetes Audit
	Enabled *bool `pulumi:"enabled"`
	// The cluster API endpoint.
	Endpoint *string `pulumi:"endpoint"`
	// The Initial Backoff to wait before sending data to the remote server (default '10s')
	InitialBackoff *string `pulumi:"initialBackoff"`
}

// GetSksClusterAuditInput is an input type that accepts GetSksClusterAuditArgs and GetSksClusterAuditOutput values.
// You can construct a concrete instance of `GetSksClusterAuditInput` via:
//
//	GetSksClusterAuditArgs{...}
type GetSksClusterAuditInput interface {
	pulumi.Input

	ToGetSksClusterAuditOutput() GetSksClusterAuditOutput
	ToGetSksClusterAuditOutputWithContext(context.Context) GetSksClusterAuditOutput
}

type GetSksClusterAuditArgs struct {
	// The optional bearer token to include in the request header
	BearerToken pulumi.StringPtrInput `pulumi:"bearerToken"`
	// Whether to run the APIServer with the configured Kubernetes Audit
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The cluster API endpoint.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// The Initial Backoff to wait before sending data to the remote server (default '10s')
	InitialBackoff pulumi.StringPtrInput `pulumi:"initialBackoff"`
}

func (GetSksClusterAuditArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSksClusterAudit)(nil)).Elem()
}

func (i GetSksClusterAuditArgs) ToGetSksClusterAuditOutput() GetSksClusterAuditOutput {
	return i.ToGetSksClusterAuditOutputWithContext(context.Background())
}

func (i GetSksClusterAuditArgs) ToGetSksClusterAuditOutputWithContext(ctx context.Context) GetSksClusterAuditOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSksClusterAuditOutput)
}

func (i GetSksClusterAuditArgs) ToGetSksClusterAuditPtrOutput() GetSksClusterAuditPtrOutput {
	return i.ToGetSksClusterAuditPtrOutputWithContext(context.Background())
}

func (i GetSksClusterAuditArgs) ToGetSksClusterAuditPtrOutputWithContext(ctx context.Context) GetSksClusterAuditPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSksClusterAuditOutput).ToGetSksClusterAuditPtrOutputWithContext(ctx)
}

// GetSksClusterAuditPtrInput is an input type that accepts GetSksClusterAuditArgs, GetSksClusterAuditPtr and GetSksClusterAuditPtrOutput values.
// You can construct a concrete instance of `GetSksClusterAuditPtrInput` via:
//
//	        GetSksClusterAuditArgs{...}
//
//	or:
//
//	        nil
type GetSksClusterAuditPtrInput interface {
	pulumi.Input

	ToGetSksClusterAuditPtrOutput() GetSksClusterAuditPtrOutput
	ToGetSksClusterAuditPtrOutputWithContext(context.Context) GetSksClusterAuditPtrOutput
}

type getSksClusterAuditPtrType GetSksClusterAuditArgs

func GetSksClusterAuditPtr(v *GetSksClusterAuditArgs) GetSksClusterAuditPtrInput {
	return (*getSksClusterAuditPtrType)(v)
}

func (*getSksClusterAuditPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSksClusterAudit)(nil)).Elem()
}

func (i *getSksClusterAuditPtrType) ToGetSksClusterAuditPtrOutput() GetSksClusterAuditPtrOutput {
	return i.ToGetSksClusterAuditPtrOutputWithContext(context.Background())
}

func (i *getSksClusterAuditPtrType) ToGetSksClusterAuditPtrOutputWithContext(ctx context.Context) GetSksClusterAuditPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSksClusterAuditPtrOutput)
}

type GetSksClusterAuditOutput struct{ *pulumi.OutputState }

func (GetSksClusterAuditOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSksClusterAudit)(nil)).Elem()
}

func (o GetSksClusterAuditOutput) ToGetSksClusterAuditOutput() GetSksClusterAuditOutput {
	return o
}

func (o GetSksClusterAuditOutput) ToGetSksClusterAuditOutputWithContext(ctx context.Context) GetSksClusterAuditOutput {
	return o
}

func (o GetSksClusterAuditOutput) ToGetSksClusterAuditPtrOutput() GetSksClusterAuditPtrOutput {
	return o.ToGetSksClusterAuditPtrOutputWithContext(context.Background())
}

func (o GetSksClusterAuditOutput) ToGetSksClusterAuditPtrOutputWithContext(ctx context.Context) GetSksClusterAuditPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSksClusterAudit) *GetSksClusterAudit {
		return &v
	}).(GetSksClusterAuditPtrOutput)
}

// The optional bearer token to include in the request header
func (o GetSksClusterAuditOutput) BearerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterAudit) *string { return v.BearerToken }).(pulumi.StringPtrOutput)
}

// Whether to run the APIServer with the configured Kubernetes Audit
func (o GetSksClusterAuditOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSksClusterAudit) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The cluster API endpoint.
func (o GetSksClusterAuditOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterAudit) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// The Initial Backoff to wait before sending data to the remote server (default '10s')
func (o GetSksClusterAuditOutput) InitialBackoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterAudit) *string { return v.InitialBackoff }).(pulumi.StringPtrOutput)
}

type GetSksClusterAuditPtrOutput struct{ *pulumi.OutputState }

func (GetSksClusterAuditPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSksClusterAudit)(nil)).Elem()
}

func (o GetSksClusterAuditPtrOutput) ToGetSksClusterAuditPtrOutput() GetSksClusterAuditPtrOutput {
	return o
}

func (o GetSksClusterAuditPtrOutput) ToGetSksClusterAuditPtrOutputWithContext(ctx context.Context) GetSksClusterAuditPtrOutput {
	return o
}

func (o GetSksClusterAuditPtrOutput) Elem() GetSksClusterAuditOutput {
	return o.ApplyT(func(v *GetSksClusterAudit) GetSksClusterAudit {
		if v != nil {
			return *v
		}
		var ret GetSksClusterAudit
		return ret
	}).(GetSksClusterAuditOutput)
}

// The optional bearer token to include in the request header
func (o GetSksClusterAuditPtrOutput) BearerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSksClusterAudit) *string {
		if v == nil {
			return nil
		}
		return v.BearerToken
	}).(pulumi.StringPtrOutput)
}

// Whether to run the APIServer with the configured Kubernetes Audit
func (o GetSksClusterAuditPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetSksClusterAudit) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The cluster API endpoint.
func (o GetSksClusterAuditPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSksClusterAudit) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// The Initial Backoff to wait before sending data to the remote server (default '10s')
func (o GetSksClusterAuditPtrOutput) InitialBackoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSksClusterAudit) *string {
		if v == nil {
			return nil
		}
		return v.InitialBackoff
	}).(pulumi.StringPtrOutput)
}

type GetSksClusterListCluster struct {
	// Deprecated: This attribute has been replaced by `exoscaleCcm`/`metricsServer` attributes, it will be removed in a future release.
	Addons []string `pulumi:"addons"`
	// The CA certificate (in PEM format) for TLS communications between the control plane and the aggregation layer (e.g. `metrics-server`).
	AggregationCa string `pulumi:"aggregationCa"`
	// Parameters for Kubernetes Audit configuration (may only be enabled at creation time)
	Audit *GetSksClusterListClusterAudit `pulumi:"audit"`
	// Enable automatic upgrading of the control plane version.
	AutoUpgrade *bool `pulumi:"autoUpgrade"`
	// The CNI plugin that is to be used. Available options are "calico" or "cilium". Defaults to "calico". Setting empty string will result in a cluster with no CNI.
	Cni *string `pulumi:"cni"`
	// The CA certificate (in PEM format) for TLS communications between control plane components.
	ControlPlaneCa string `pulumi:"controlPlaneCa"`
	// The cluster creation date.
	CreatedAt string `pulumi:"createdAt"`
	// A free-form text describing the cluster.
	Description *string `pulumi:"description"`
	// Indicates whether to deploy the Kubernetes network proxy. (may only be set at creation time)
	EnableKubeProxy bool `pulumi:"enableKubeProxy"`
	// The cluster API endpoint.
	Endpoint string `pulumi:"endpoint"`
	// Deploy the Exoscale [Cloud Controller Manager](https://github.com/exoscale/exoscale-cloud-controller-manager/) in the control plane (boolean; default: `true`; may only be set at creation time).
	ExoscaleCcm *bool `pulumi:"exoscaleCcm"`
	// Deploy the Exoscale [Container Storage Interface](https://github.com/exoscale/exoscale-csi-driver/) on worker nodes (boolean; default: `false`; requires the CCM to be enabled).
	ExoscaleCsi *bool `pulumi:"exoscaleCsi"`
	// Feature gates options for the cluster.
	FeatureGates []string `pulumi:"featureGates"`
	Id           *string  `pulumi:"id"`
	// The CA certificate (in PEM format) for TLS communications between kubelets and the control plane.
	KubeletCa string `pulumi:"kubeletCa"`
	// A map of key/value labels.
	Labels map[string]string `pulumi:"labels"`
	// Deploy the [Kubernetes Metrics Server](https://github.com/kubernetes-sigs/metrics-server/) in the control plane (boolean; default: `true`; may only be set at creation time).
	MetricsServer *bool   `pulumi:"metricsServer"`
	Name          *string `pulumi:"name"`
	// The list of SksNodepool (IDs) attached to the cluster.
	Nodepools []string `pulumi:"nodepools"`
	// An OpenID Connect configuration to provide to the Kubernetes API server (may only be set at creation time). Structure is documented below.
	Oidc GetSksClusterListClusterOidc `pulumi:"oidc"`
	// The service level of the control plane (`pro` or `starter`; default: `pro`; may only be set at creation time).
	ServiceLevel *string `pulumi:"serviceLevel"`
	// The cluster state.
	State string `pulumi:"state"`
	// The version of the control plane (default: latest version available from the API; see `exo compute sks versions` for reference; may only be set at creation time).
	Version string `pulumi:"version"`
	Zone    string `pulumi:"zone"`
}

// GetSksClusterListClusterInput is an input type that accepts GetSksClusterListClusterArgs and GetSksClusterListClusterOutput values.
// You can construct a concrete instance of `GetSksClusterListClusterInput` via:
//
//	GetSksClusterListClusterArgs{...}
type GetSksClusterListClusterInput interface {
	pulumi.Input

	ToGetSksClusterListClusterOutput() GetSksClusterListClusterOutput
	ToGetSksClusterListClusterOutputWithContext(context.Context) GetSksClusterListClusterOutput
}

type GetSksClusterListClusterArgs struct {
	// Deprecated: This attribute has been replaced by `exoscaleCcm`/`metricsServer` attributes, it will be removed in a future release.
	Addons pulumi.StringArrayInput `pulumi:"addons"`
	// The CA certificate (in PEM format) for TLS communications between the control plane and the aggregation layer (e.g. `metrics-server`).
	AggregationCa pulumi.StringInput `pulumi:"aggregationCa"`
	// Parameters for Kubernetes Audit configuration (may only be enabled at creation time)
	Audit GetSksClusterListClusterAuditPtrInput `pulumi:"audit"`
	// Enable automatic upgrading of the control plane version.
	AutoUpgrade pulumi.BoolPtrInput `pulumi:"autoUpgrade"`
	// The CNI plugin that is to be used. Available options are "calico" or "cilium". Defaults to "calico". Setting empty string will result in a cluster with no CNI.
	Cni pulumi.StringPtrInput `pulumi:"cni"`
	// The CA certificate (in PEM format) for TLS communications between control plane components.
	ControlPlaneCa pulumi.StringInput `pulumi:"controlPlaneCa"`
	// The cluster creation date.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// A free-form text describing the cluster.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates whether to deploy the Kubernetes network proxy. (may only be set at creation time)
	EnableKubeProxy pulumi.BoolInput `pulumi:"enableKubeProxy"`
	// The cluster API endpoint.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// Deploy the Exoscale [Cloud Controller Manager](https://github.com/exoscale/exoscale-cloud-controller-manager/) in the control plane (boolean; default: `true`; may only be set at creation time).
	ExoscaleCcm pulumi.BoolPtrInput `pulumi:"exoscaleCcm"`
	// Deploy the Exoscale [Container Storage Interface](https://github.com/exoscale/exoscale-csi-driver/) on worker nodes (boolean; default: `false`; requires the CCM to be enabled).
	ExoscaleCsi pulumi.BoolPtrInput `pulumi:"exoscaleCsi"`
	// Feature gates options for the cluster.
	FeatureGates pulumi.StringArrayInput `pulumi:"featureGates"`
	Id           pulumi.StringPtrInput   `pulumi:"id"`
	// The CA certificate (in PEM format) for TLS communications between kubelets and the control plane.
	KubeletCa pulumi.StringInput `pulumi:"kubeletCa"`
	// A map of key/value labels.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Deploy the [Kubernetes Metrics Server](https://github.com/kubernetes-sigs/metrics-server/) in the control plane (boolean; default: `true`; may only be set at creation time).
	MetricsServer pulumi.BoolPtrInput   `pulumi:"metricsServer"`
	Name          pulumi.StringPtrInput `pulumi:"name"`
	// The list of SksNodepool (IDs) attached to the cluster.
	Nodepools pulumi.StringArrayInput `pulumi:"nodepools"`
	// An OpenID Connect configuration to provide to the Kubernetes API server (may only be set at creation time). Structure is documented below.
	Oidc GetSksClusterListClusterOidcInput `pulumi:"oidc"`
	// The service level of the control plane (`pro` or `starter`; default: `pro`; may only be set at creation time).
	ServiceLevel pulumi.StringPtrInput `pulumi:"serviceLevel"`
	// The cluster state.
	State pulumi.StringInput `pulumi:"state"`
	// The version of the control plane (default: latest version available from the API; see `exo compute sks versions` for reference; may only be set at creation time).
	Version pulumi.StringInput `pulumi:"version"`
	Zone    pulumi.StringInput `pulumi:"zone"`
}

func (GetSksClusterListClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSksClusterListCluster)(nil)).Elem()
}

func (i GetSksClusterListClusterArgs) ToGetSksClusterListClusterOutput() GetSksClusterListClusterOutput {
	return i.ToGetSksClusterListClusterOutputWithContext(context.Background())
}

func (i GetSksClusterListClusterArgs) ToGetSksClusterListClusterOutputWithContext(ctx context.Context) GetSksClusterListClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSksClusterListClusterOutput)
}

// GetSksClusterListClusterArrayInput is an input type that accepts GetSksClusterListClusterArray and GetSksClusterListClusterArrayOutput values.
// You can construct a concrete instance of `GetSksClusterListClusterArrayInput` via:
//
//	GetSksClusterListClusterArray{ GetSksClusterListClusterArgs{...} }
type GetSksClusterListClusterArrayInput interface {
	pulumi.Input

	ToGetSksClusterListClusterArrayOutput() GetSksClusterListClusterArrayOutput
	ToGetSksClusterListClusterArrayOutputWithContext(context.Context) GetSksClusterListClusterArrayOutput
}

type GetSksClusterListClusterArray []GetSksClusterListClusterInput

func (GetSksClusterListClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSksClusterListCluster)(nil)).Elem()
}

func (i GetSksClusterListClusterArray) ToGetSksClusterListClusterArrayOutput() GetSksClusterListClusterArrayOutput {
	return i.ToGetSksClusterListClusterArrayOutputWithContext(context.Background())
}

func (i GetSksClusterListClusterArray) ToGetSksClusterListClusterArrayOutputWithContext(ctx context.Context) GetSksClusterListClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSksClusterListClusterArrayOutput)
}

type GetSksClusterListClusterOutput struct{ *pulumi.OutputState }

func (GetSksClusterListClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSksClusterListCluster)(nil)).Elem()
}

func (o GetSksClusterListClusterOutput) ToGetSksClusterListClusterOutput() GetSksClusterListClusterOutput {
	return o
}

func (o GetSksClusterListClusterOutput) ToGetSksClusterListClusterOutputWithContext(ctx context.Context) GetSksClusterListClusterOutput {
	return o
}

// Deprecated: This attribute has been replaced by `exoscaleCcm`/`metricsServer` attributes, it will be removed in a future release.
func (o GetSksClusterListClusterOutput) Addons() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) []string { return v.Addons }).(pulumi.StringArrayOutput)
}

// The CA certificate (in PEM format) for TLS communications between the control plane and the aggregation layer (e.g. `metrics-server`).
func (o GetSksClusterListClusterOutput) AggregationCa() pulumi.StringOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) string { return v.AggregationCa }).(pulumi.StringOutput)
}

// Parameters for Kubernetes Audit configuration (may only be enabled at creation time)
func (o GetSksClusterListClusterOutput) Audit() GetSksClusterListClusterAuditPtrOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) *GetSksClusterListClusterAudit { return v.Audit }).(GetSksClusterListClusterAuditPtrOutput)
}

// Enable automatic upgrading of the control plane version.
func (o GetSksClusterListClusterOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) *bool { return v.AutoUpgrade }).(pulumi.BoolPtrOutput)
}

// The CNI plugin that is to be used. Available options are "calico" or "cilium". Defaults to "calico". Setting empty string will result in a cluster with no CNI.
func (o GetSksClusterListClusterOutput) Cni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) *string { return v.Cni }).(pulumi.StringPtrOutput)
}

// The CA certificate (in PEM format) for TLS communications between control plane components.
func (o GetSksClusterListClusterOutput) ControlPlaneCa() pulumi.StringOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) string { return v.ControlPlaneCa }).(pulumi.StringOutput)
}

// The cluster creation date.
func (o GetSksClusterListClusterOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// A free-form text describing the cluster.
func (o GetSksClusterListClusterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether to deploy the Kubernetes network proxy. (may only be set at creation time)
func (o GetSksClusterListClusterOutput) EnableKubeProxy() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) bool { return v.EnableKubeProxy }).(pulumi.BoolOutput)
}

// The cluster API endpoint.
func (o GetSksClusterListClusterOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) string { return v.Endpoint }).(pulumi.StringOutput)
}

// Deploy the Exoscale [Cloud Controller Manager](https://github.com/exoscale/exoscale-cloud-controller-manager/) in the control plane (boolean; default: `true`; may only be set at creation time).
func (o GetSksClusterListClusterOutput) ExoscaleCcm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) *bool { return v.ExoscaleCcm }).(pulumi.BoolPtrOutput)
}

// Deploy the Exoscale [Container Storage Interface](https://github.com/exoscale/exoscale-csi-driver/) on worker nodes (boolean; default: `false`; requires the CCM to be enabled).
func (o GetSksClusterListClusterOutput) ExoscaleCsi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) *bool { return v.ExoscaleCsi }).(pulumi.BoolPtrOutput)
}

// Feature gates options for the cluster.
func (o GetSksClusterListClusterOutput) FeatureGates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) []string { return v.FeatureGates }).(pulumi.StringArrayOutput)
}

func (o GetSksClusterListClusterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The CA certificate (in PEM format) for TLS communications between kubelets and the control plane.
func (o GetSksClusterListClusterOutput) KubeletCa() pulumi.StringOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) string { return v.KubeletCa }).(pulumi.StringOutput)
}

// A map of key/value labels.
func (o GetSksClusterListClusterOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Deploy the [Kubernetes Metrics Server](https://github.com/kubernetes-sigs/metrics-server/) in the control plane (boolean; default: `true`; may only be set at creation time).
func (o GetSksClusterListClusterOutput) MetricsServer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) *bool { return v.MetricsServer }).(pulumi.BoolPtrOutput)
}

func (o GetSksClusterListClusterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The list of SksNodepool (IDs) attached to the cluster.
func (o GetSksClusterListClusterOutput) Nodepools() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) []string { return v.Nodepools }).(pulumi.StringArrayOutput)
}

// An OpenID Connect configuration to provide to the Kubernetes API server (may only be set at creation time). Structure is documented below.
func (o GetSksClusterListClusterOutput) Oidc() GetSksClusterListClusterOidcOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) GetSksClusterListClusterOidc { return v.Oidc }).(GetSksClusterListClusterOidcOutput)
}

// The service level of the control plane (`pro` or `starter`; default: `pro`; may only be set at creation time).
func (o GetSksClusterListClusterOutput) ServiceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) *string { return v.ServiceLevel }).(pulumi.StringPtrOutput)
}

// The cluster state.
func (o GetSksClusterListClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) string { return v.State }).(pulumi.StringOutput)
}

// The version of the control plane (default: latest version available from the API; see `exo compute sks versions` for reference; may only be set at creation time).
func (o GetSksClusterListClusterOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) string { return v.Version }).(pulumi.StringOutput)
}

func (o GetSksClusterListClusterOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetSksClusterListCluster) string { return v.Zone }).(pulumi.StringOutput)
}

type GetSksClusterListClusterArrayOutput struct{ *pulumi.OutputState }

func (GetSksClusterListClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSksClusterListCluster)(nil)).Elem()
}

func (o GetSksClusterListClusterArrayOutput) ToGetSksClusterListClusterArrayOutput() GetSksClusterListClusterArrayOutput {
	return o
}

func (o GetSksClusterListClusterArrayOutput) ToGetSksClusterListClusterArrayOutputWithContext(ctx context.Context) GetSksClusterListClusterArrayOutput {
	return o
}

func (o GetSksClusterListClusterArrayOutput) Index(i pulumi.IntInput) GetSksClusterListClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSksClusterListCluster {
		return vs[0].([]GetSksClusterListCluster)[vs[1].(int)]
	}).(GetSksClusterListClusterOutput)
}

type GetSksClusterListClusterAudit struct {
	// The optional bearer token to include in the request header
	BearerToken *string `pulumi:"bearerToken"`
	// Whether to run the APIServer with the configured Kubernetes Audit
	Enabled *bool `pulumi:"enabled"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	Endpoint *string `pulumi:"endpoint"`
	// The Initial Backoff to wait before sending data to the remote server (default '10s')
	InitialBackoff *string `pulumi:"initialBackoff"`
}

// GetSksClusterListClusterAuditInput is an input type that accepts GetSksClusterListClusterAuditArgs and GetSksClusterListClusterAuditOutput values.
// You can construct a concrete instance of `GetSksClusterListClusterAuditInput` via:
//
//	GetSksClusterListClusterAuditArgs{...}
type GetSksClusterListClusterAuditInput interface {
	pulumi.Input

	ToGetSksClusterListClusterAuditOutput() GetSksClusterListClusterAuditOutput
	ToGetSksClusterListClusterAuditOutputWithContext(context.Context) GetSksClusterListClusterAuditOutput
}

type GetSksClusterListClusterAuditArgs struct {
	// The optional bearer token to include in the request header
	BearerToken pulumi.StringPtrInput `pulumi:"bearerToken"`
	// Whether to run the APIServer with the configured Kubernetes Audit
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// The Initial Backoff to wait before sending data to the remote server (default '10s')
	InitialBackoff pulumi.StringPtrInput `pulumi:"initialBackoff"`
}

func (GetSksClusterListClusterAuditArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSksClusterListClusterAudit)(nil)).Elem()
}

func (i GetSksClusterListClusterAuditArgs) ToGetSksClusterListClusterAuditOutput() GetSksClusterListClusterAuditOutput {
	return i.ToGetSksClusterListClusterAuditOutputWithContext(context.Background())
}

func (i GetSksClusterListClusterAuditArgs) ToGetSksClusterListClusterAuditOutputWithContext(ctx context.Context) GetSksClusterListClusterAuditOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSksClusterListClusterAuditOutput)
}

func (i GetSksClusterListClusterAuditArgs) ToGetSksClusterListClusterAuditPtrOutput() GetSksClusterListClusterAuditPtrOutput {
	return i.ToGetSksClusterListClusterAuditPtrOutputWithContext(context.Background())
}

func (i GetSksClusterListClusterAuditArgs) ToGetSksClusterListClusterAuditPtrOutputWithContext(ctx context.Context) GetSksClusterListClusterAuditPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSksClusterListClusterAuditOutput).ToGetSksClusterListClusterAuditPtrOutputWithContext(ctx)
}

// GetSksClusterListClusterAuditPtrInput is an input type that accepts GetSksClusterListClusterAuditArgs, GetSksClusterListClusterAuditPtr and GetSksClusterListClusterAuditPtrOutput values.
// You can construct a concrete instance of `GetSksClusterListClusterAuditPtrInput` via:
//
//	        GetSksClusterListClusterAuditArgs{...}
//
//	or:
//
//	        nil
type GetSksClusterListClusterAuditPtrInput interface {
	pulumi.Input

	ToGetSksClusterListClusterAuditPtrOutput() GetSksClusterListClusterAuditPtrOutput
	ToGetSksClusterListClusterAuditPtrOutputWithContext(context.Context) GetSksClusterListClusterAuditPtrOutput
}

type getSksClusterListClusterAuditPtrType GetSksClusterListClusterAuditArgs

func GetSksClusterListClusterAuditPtr(v *GetSksClusterListClusterAuditArgs) GetSksClusterListClusterAuditPtrInput {
	return (*getSksClusterListClusterAuditPtrType)(v)
}

func (*getSksClusterListClusterAuditPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSksClusterListClusterAudit)(nil)).Elem()
}

func (i *getSksClusterListClusterAuditPtrType) ToGetSksClusterListClusterAuditPtrOutput() GetSksClusterListClusterAuditPtrOutput {
	return i.ToGetSksClusterListClusterAuditPtrOutputWithContext(context.Background())
}

func (i *getSksClusterListClusterAuditPtrType) ToGetSksClusterListClusterAuditPtrOutputWithContext(ctx context.Context) GetSksClusterListClusterAuditPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSksClusterListClusterAuditPtrOutput)
}

type GetSksClusterListClusterAuditOutput struct{ *pulumi.OutputState }

func (GetSksClusterListClusterAuditOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSksClusterListClusterAudit)(nil)).Elem()
}

func (o GetSksClusterListClusterAuditOutput) ToGetSksClusterListClusterAuditOutput() GetSksClusterListClusterAuditOutput {
	return o
}

func (o GetSksClusterListClusterAuditOutput) ToGetSksClusterListClusterAuditOutputWithContext(ctx context.Context) GetSksClusterListClusterAuditOutput {
	return o
}

func (o GetSksClusterListClusterAuditOutput) ToGetSksClusterListClusterAuditPtrOutput() GetSksClusterListClusterAuditPtrOutput {
	return o.ToGetSksClusterListClusterAuditPtrOutputWithContext(context.Background())
}

func (o GetSksClusterListClusterAuditOutput) ToGetSksClusterListClusterAuditPtrOutputWithContext(ctx context.Context) GetSksClusterListClusterAuditPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSksClusterListClusterAudit) *GetSksClusterListClusterAudit {
		return &v
	}).(GetSksClusterListClusterAuditPtrOutput)
}

// The optional bearer token to include in the request header
func (o GetSksClusterListClusterAuditOutput) BearerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListClusterAudit) *string { return v.BearerToken }).(pulumi.StringPtrOutput)
}

// Whether to run the APIServer with the configured Kubernetes Audit
func (o GetSksClusterListClusterAuditOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSksClusterListClusterAudit) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
func (o GetSksClusterListClusterAuditOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListClusterAudit) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// The Initial Backoff to wait before sending data to the remote server (default '10s')
func (o GetSksClusterListClusterAuditOutput) InitialBackoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListClusterAudit) *string { return v.InitialBackoff }).(pulumi.StringPtrOutput)
}

type GetSksClusterListClusterAuditPtrOutput struct{ *pulumi.OutputState }

func (GetSksClusterListClusterAuditPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSksClusterListClusterAudit)(nil)).Elem()
}

func (o GetSksClusterListClusterAuditPtrOutput) ToGetSksClusterListClusterAuditPtrOutput() GetSksClusterListClusterAuditPtrOutput {
	return o
}

func (o GetSksClusterListClusterAuditPtrOutput) ToGetSksClusterListClusterAuditPtrOutputWithContext(ctx context.Context) GetSksClusterListClusterAuditPtrOutput {
	return o
}

func (o GetSksClusterListClusterAuditPtrOutput) Elem() GetSksClusterListClusterAuditOutput {
	return o.ApplyT(func(v *GetSksClusterListClusterAudit) GetSksClusterListClusterAudit {
		if v != nil {
			return *v
		}
		var ret GetSksClusterListClusterAudit
		return ret
	}).(GetSksClusterListClusterAuditOutput)
}

// The optional bearer token to include in the request header
func (o GetSksClusterListClusterAuditPtrOutput) BearerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSksClusterListClusterAudit) *string {
		if v == nil {
			return nil
		}
		return v.BearerToken
	}).(pulumi.StringPtrOutput)
}

// Whether to run the APIServer with the configured Kubernetes Audit
func (o GetSksClusterListClusterAuditPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetSksClusterListClusterAudit) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
func (o GetSksClusterListClusterAuditPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSksClusterListClusterAudit) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// The Initial Backoff to wait before sending data to the remote server (default '10s')
func (o GetSksClusterListClusterAuditPtrOutput) InitialBackoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSksClusterListClusterAudit) *string {
		if v == nil {
			return nil
		}
		return v.InitialBackoff
	}).(pulumi.StringPtrOutput)
}

type GetSksClusterListClusterOidc struct {
	// The OpenID client ID.
	ClientId string `pulumi:"clientId"`
	// An OpenID JWT claim to use as the user's group.
	GroupsClaim *string `pulumi:"groupsClaim"`
	// An OpenID prefix prepended to group claims.
	GroupsPrefix *string `pulumi:"groupsPrefix"`
	// The OpenID provider URL.
	IssuerUrl string `pulumi:"issuerUrl"`
	// A map of key/value pairs that describes a required claim in the OpenID Token.
	RequiredClaim map[string]string `pulumi:"requiredClaim"`
	// An OpenID JWT claim to use as the user name.
	UsernameClaim *string `pulumi:"usernameClaim"`
	// An OpenID prefix prepended to username claims.
	UsernamePrefix *string `pulumi:"usernamePrefix"`
}

// GetSksClusterListClusterOidcInput is an input type that accepts GetSksClusterListClusterOidcArgs and GetSksClusterListClusterOidcOutput values.
// You can construct a concrete instance of `GetSksClusterListClusterOidcInput` via:
//
//	GetSksClusterListClusterOidcArgs{...}
type GetSksClusterListClusterOidcInput interface {
	pulumi.Input

	ToGetSksClusterListClusterOidcOutput() GetSksClusterListClusterOidcOutput
	ToGetSksClusterListClusterOidcOutputWithContext(context.Context) GetSksClusterListClusterOidcOutput
}

type GetSksClusterListClusterOidcArgs struct {
	// The OpenID client ID.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// An OpenID JWT claim to use as the user's group.
	GroupsClaim pulumi.StringPtrInput `pulumi:"groupsClaim"`
	// An OpenID prefix prepended to group claims.
	GroupsPrefix pulumi.StringPtrInput `pulumi:"groupsPrefix"`
	// The OpenID provider URL.
	IssuerUrl pulumi.StringInput `pulumi:"issuerUrl"`
	// A map of key/value pairs that describes a required claim in the OpenID Token.
	RequiredClaim pulumi.StringMapInput `pulumi:"requiredClaim"`
	// An OpenID JWT claim to use as the user name.
	UsernameClaim pulumi.StringPtrInput `pulumi:"usernameClaim"`
	// An OpenID prefix prepended to username claims.
	UsernamePrefix pulumi.StringPtrInput `pulumi:"usernamePrefix"`
}

func (GetSksClusterListClusterOidcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSksClusterListClusterOidc)(nil)).Elem()
}

func (i GetSksClusterListClusterOidcArgs) ToGetSksClusterListClusterOidcOutput() GetSksClusterListClusterOidcOutput {
	return i.ToGetSksClusterListClusterOidcOutputWithContext(context.Background())
}

func (i GetSksClusterListClusterOidcArgs) ToGetSksClusterListClusterOidcOutputWithContext(ctx context.Context) GetSksClusterListClusterOidcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSksClusterListClusterOidcOutput)
}

type GetSksClusterListClusterOidcOutput struct{ *pulumi.OutputState }

func (GetSksClusterListClusterOidcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSksClusterListClusterOidc)(nil)).Elem()
}

func (o GetSksClusterListClusterOidcOutput) ToGetSksClusterListClusterOidcOutput() GetSksClusterListClusterOidcOutput {
	return o
}

func (o GetSksClusterListClusterOidcOutput) ToGetSksClusterListClusterOidcOutputWithContext(ctx context.Context) GetSksClusterListClusterOidcOutput {
	return o
}

// The OpenID client ID.
func (o GetSksClusterListClusterOidcOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSksClusterListClusterOidc) string { return v.ClientId }).(pulumi.StringOutput)
}

// An OpenID JWT claim to use as the user's group.
func (o GetSksClusterListClusterOidcOutput) GroupsClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListClusterOidc) *string { return v.GroupsClaim }).(pulumi.StringPtrOutput)
}

// An OpenID prefix prepended to group claims.
func (o GetSksClusterListClusterOidcOutput) GroupsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListClusterOidc) *string { return v.GroupsPrefix }).(pulumi.StringPtrOutput)
}

// The OpenID provider URL.
func (o GetSksClusterListClusterOidcOutput) IssuerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetSksClusterListClusterOidc) string { return v.IssuerUrl }).(pulumi.StringOutput)
}

// A map of key/value pairs that describes a required claim in the OpenID Token.
func (o GetSksClusterListClusterOidcOutput) RequiredClaim() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSksClusterListClusterOidc) map[string]string { return v.RequiredClaim }).(pulumi.StringMapOutput)
}

// An OpenID JWT claim to use as the user name.
func (o GetSksClusterListClusterOidcOutput) UsernameClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListClusterOidc) *string { return v.UsernameClaim }).(pulumi.StringPtrOutput)
}

// An OpenID prefix prepended to username claims.
func (o GetSksClusterListClusterOidcOutput) UsernamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListClusterOidc) *string { return v.UsernamePrefix }).(pulumi.StringPtrOutput)
}

type GetSksClusterOidc struct {
	// The OpenID client ID.
	ClientId string `pulumi:"clientId"`
	// An OpenID JWT claim to use as the user's group.
	GroupsClaim *string `pulumi:"groupsClaim"`
	// An OpenID prefix prepended to group claims.
	GroupsPrefix *string `pulumi:"groupsPrefix"`
	// The OpenID provider URL.
	IssuerUrl string `pulumi:"issuerUrl"`
	// A map of key/value pairs that describes a required claim in the OpenID Token.
	RequiredClaim map[string]string `pulumi:"requiredClaim"`
	// An OpenID JWT claim to use as the user name.
	UsernameClaim *string `pulumi:"usernameClaim"`
	// An OpenID prefix prepended to username claims.
	UsernamePrefix *string `pulumi:"usernamePrefix"`
}

// GetSksClusterOidcInput is an input type that accepts GetSksClusterOidcArgs and GetSksClusterOidcOutput values.
// You can construct a concrete instance of `GetSksClusterOidcInput` via:
//
//	GetSksClusterOidcArgs{...}
type GetSksClusterOidcInput interface {
	pulumi.Input

	ToGetSksClusterOidcOutput() GetSksClusterOidcOutput
	ToGetSksClusterOidcOutputWithContext(context.Context) GetSksClusterOidcOutput
}

type GetSksClusterOidcArgs struct {
	// The OpenID client ID.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// An OpenID JWT claim to use as the user's group.
	GroupsClaim pulumi.StringPtrInput `pulumi:"groupsClaim"`
	// An OpenID prefix prepended to group claims.
	GroupsPrefix pulumi.StringPtrInput `pulumi:"groupsPrefix"`
	// The OpenID provider URL.
	IssuerUrl pulumi.StringInput `pulumi:"issuerUrl"`
	// A map of key/value pairs that describes a required claim in the OpenID Token.
	RequiredClaim pulumi.StringMapInput `pulumi:"requiredClaim"`
	// An OpenID JWT claim to use as the user name.
	UsernameClaim pulumi.StringPtrInput `pulumi:"usernameClaim"`
	// An OpenID prefix prepended to username claims.
	UsernamePrefix pulumi.StringPtrInput `pulumi:"usernamePrefix"`
}

func (GetSksClusterOidcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSksClusterOidc)(nil)).Elem()
}

func (i GetSksClusterOidcArgs) ToGetSksClusterOidcOutput() GetSksClusterOidcOutput {
	return i.ToGetSksClusterOidcOutputWithContext(context.Background())
}

func (i GetSksClusterOidcArgs) ToGetSksClusterOidcOutputWithContext(ctx context.Context) GetSksClusterOidcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSksClusterOidcOutput)
}

func (i GetSksClusterOidcArgs) ToGetSksClusterOidcPtrOutput() GetSksClusterOidcPtrOutput {
	return i.ToGetSksClusterOidcPtrOutputWithContext(context.Background())
}

func (i GetSksClusterOidcArgs) ToGetSksClusterOidcPtrOutputWithContext(ctx context.Context) GetSksClusterOidcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSksClusterOidcOutput).ToGetSksClusterOidcPtrOutputWithContext(ctx)
}

// GetSksClusterOidcPtrInput is an input type that accepts GetSksClusterOidcArgs, GetSksClusterOidcPtr and GetSksClusterOidcPtrOutput values.
// You can construct a concrete instance of `GetSksClusterOidcPtrInput` via:
//
//	        GetSksClusterOidcArgs{...}
//
//	or:
//
//	        nil
type GetSksClusterOidcPtrInput interface {
	pulumi.Input

	ToGetSksClusterOidcPtrOutput() GetSksClusterOidcPtrOutput
	ToGetSksClusterOidcPtrOutputWithContext(context.Context) GetSksClusterOidcPtrOutput
}

type getSksClusterOidcPtrType GetSksClusterOidcArgs

func GetSksClusterOidcPtr(v *GetSksClusterOidcArgs) GetSksClusterOidcPtrInput {
	return (*getSksClusterOidcPtrType)(v)
}

func (*getSksClusterOidcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSksClusterOidc)(nil)).Elem()
}

func (i *getSksClusterOidcPtrType) ToGetSksClusterOidcPtrOutput() GetSksClusterOidcPtrOutput {
	return i.ToGetSksClusterOidcPtrOutputWithContext(context.Background())
}

func (i *getSksClusterOidcPtrType) ToGetSksClusterOidcPtrOutputWithContext(ctx context.Context) GetSksClusterOidcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSksClusterOidcPtrOutput)
}

type GetSksClusterOidcOutput struct{ *pulumi.OutputState }

func (GetSksClusterOidcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSksClusterOidc)(nil)).Elem()
}

func (o GetSksClusterOidcOutput) ToGetSksClusterOidcOutput() GetSksClusterOidcOutput {
	return o
}

func (o GetSksClusterOidcOutput) ToGetSksClusterOidcOutputWithContext(ctx context.Context) GetSksClusterOidcOutput {
	return o
}

func (o GetSksClusterOidcOutput) ToGetSksClusterOidcPtrOutput() GetSksClusterOidcPtrOutput {
	return o.ToGetSksClusterOidcPtrOutputWithContext(context.Background())
}

func (o GetSksClusterOidcOutput) ToGetSksClusterOidcPtrOutputWithContext(ctx context.Context) GetSksClusterOidcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSksClusterOidc) *GetSksClusterOidc {
		return &v
	}).(GetSksClusterOidcPtrOutput)
}

// The OpenID client ID.
func (o GetSksClusterOidcOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSksClusterOidc) string { return v.ClientId }).(pulumi.StringOutput)
}

// An OpenID JWT claim to use as the user's group.
func (o GetSksClusterOidcOutput) GroupsClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterOidc) *string { return v.GroupsClaim }).(pulumi.StringPtrOutput)
}

// An OpenID prefix prepended to group claims.
func (o GetSksClusterOidcOutput) GroupsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterOidc) *string { return v.GroupsPrefix }).(pulumi.StringPtrOutput)
}

// The OpenID provider URL.
func (o GetSksClusterOidcOutput) IssuerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetSksClusterOidc) string { return v.IssuerUrl }).(pulumi.StringOutput)
}

// A map of key/value pairs that describes a required claim in the OpenID Token.
func (o GetSksClusterOidcOutput) RequiredClaim() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSksClusterOidc) map[string]string { return v.RequiredClaim }).(pulumi.StringMapOutput)
}

// An OpenID JWT claim to use as the user name.
func (o GetSksClusterOidcOutput) UsernameClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterOidc) *string { return v.UsernameClaim }).(pulumi.StringPtrOutput)
}

// An OpenID prefix prepended to username claims.
func (o GetSksClusterOidcOutput) UsernamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterOidc) *string { return v.UsernamePrefix }).(pulumi.StringPtrOutput)
}

type GetSksClusterOidcPtrOutput struct{ *pulumi.OutputState }

func (GetSksClusterOidcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSksClusterOidc)(nil)).Elem()
}

func (o GetSksClusterOidcPtrOutput) ToGetSksClusterOidcPtrOutput() GetSksClusterOidcPtrOutput {
	return o
}

func (o GetSksClusterOidcPtrOutput) ToGetSksClusterOidcPtrOutputWithContext(ctx context.Context) GetSksClusterOidcPtrOutput {
	return o
}

func (o GetSksClusterOidcPtrOutput) Elem() GetSksClusterOidcOutput {
	return o.ApplyT(func(v *GetSksClusterOidc) GetSksClusterOidc {
		if v != nil {
			return *v
		}
		var ret GetSksClusterOidc
		return ret
	}).(GetSksClusterOidcOutput)
}

// The OpenID client ID.
func (o GetSksClusterOidcPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSksClusterOidc) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// An OpenID JWT claim to use as the user's group.
func (o GetSksClusterOidcPtrOutput) GroupsClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSksClusterOidc) *string {
		if v == nil {
			return nil
		}
		return v.GroupsClaim
	}).(pulumi.StringPtrOutput)
}

// An OpenID prefix prepended to group claims.
func (o GetSksClusterOidcPtrOutput) GroupsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSksClusterOidc) *string {
		if v == nil {
			return nil
		}
		return v.GroupsPrefix
	}).(pulumi.StringPtrOutput)
}

// The OpenID provider URL.
func (o GetSksClusterOidcPtrOutput) IssuerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSksClusterOidc) *string {
		if v == nil {
			return nil
		}
		return &v.IssuerUrl
	}).(pulumi.StringPtrOutput)
}

// A map of key/value pairs that describes a required claim in the OpenID Token.
func (o GetSksClusterOidcPtrOutput) RequiredClaim() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GetSksClusterOidc) map[string]string {
		if v == nil {
			return nil
		}
		return v.RequiredClaim
	}).(pulumi.StringMapOutput)
}

// An OpenID JWT claim to use as the user name.
func (o GetSksClusterOidcPtrOutput) UsernameClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSksClusterOidc) *string {
		if v == nil {
			return nil
		}
		return v.UsernameClaim
	}).(pulumi.StringPtrOutput)
}

// An OpenID prefix prepended to username claims.
func (o GetSksClusterOidcPtrOutput) UsernamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSksClusterOidc) *string {
		if v == nil {
			return nil
		}
		return v.UsernamePrefix
	}).(pulumi.StringPtrOutput)
}

type GetSksNodepoolKubeletImageGc struct {
	// The percent of disk usage after which image garbage collection is always run
	HighThreshold *int `pulumi:"highThreshold"`
	// The percent of disk usage before which image garbage collection is never run
	LowThreshold *int `pulumi:"lowThreshold"`
	// The minimum age for an unused image before it is garbage collected (k8s duration format, eg. 1h)
	MinAge *string `pulumi:"minAge"`
}

// GetSksNodepoolKubeletImageGcInput is an input type that accepts GetSksNodepoolKubeletImageGcArgs and GetSksNodepoolKubeletImageGcOutput values.
// You can construct a concrete instance of `GetSksNodepoolKubeletImageGcInput` via:
//
//	GetSksNodepoolKubeletImageGcArgs{...}
type GetSksNodepoolKubeletImageGcInput interface {
	pulumi.Input

	ToGetSksNodepoolKubeletImageGcOutput() GetSksNodepoolKubeletImageGcOutput
	ToGetSksNodepoolKubeletImageGcOutputWithContext(context.Context) GetSksNodepoolKubeletImageGcOutput
}

type GetSksNodepoolKubeletImageGcArgs struct {
	// The percent of disk usage after which image garbage collection is always run
	HighThreshold pulumi.IntPtrInput `pulumi:"highThreshold"`
	// The percent of disk usage before which image garbage collection is never run
	LowThreshold pulumi.IntPtrInput `pulumi:"lowThreshold"`
	// The minimum age for an unused image before it is garbage collected (k8s duration format, eg. 1h)
	MinAge pulumi.StringPtrInput `pulumi:"minAge"`
}

func (GetSksNodepoolKubeletImageGcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSksNodepoolKubeletImageGc)(nil)).Elem()
}

func (i GetSksNodepoolKubeletImageGcArgs) ToGetSksNodepoolKubeletImageGcOutput() GetSksNodepoolKubeletImageGcOutput {
	return i.ToGetSksNodepoolKubeletImageGcOutputWithContext(context.Background())
}

func (i GetSksNodepoolKubeletImageGcArgs) ToGetSksNodepoolKubeletImageGcOutputWithContext(ctx context.Context) GetSksNodepoolKubeletImageGcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSksNodepoolKubeletImageGcOutput)
}

// GetSksNodepoolKubeletImageGcArrayInput is an input type that accepts GetSksNodepoolKubeletImageGcArray and GetSksNodepoolKubeletImageGcArrayOutput values.
// You can construct a concrete instance of `GetSksNodepoolKubeletImageGcArrayInput` via:
//
//	GetSksNodepoolKubeletImageGcArray{ GetSksNodepoolKubeletImageGcArgs{...} }
type GetSksNodepoolKubeletImageGcArrayInput interface {
	pulumi.Input

	ToGetSksNodepoolKubeletImageGcArrayOutput() GetSksNodepoolKubeletImageGcArrayOutput
	ToGetSksNodepoolKubeletImageGcArrayOutputWithContext(context.Context) GetSksNodepoolKubeletImageGcArrayOutput
}

type GetSksNodepoolKubeletImageGcArray []GetSksNodepoolKubeletImageGcInput

func (GetSksNodepoolKubeletImageGcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSksNodepoolKubeletImageGc)(nil)).Elem()
}

func (i GetSksNodepoolKubeletImageGcArray) ToGetSksNodepoolKubeletImageGcArrayOutput() GetSksNodepoolKubeletImageGcArrayOutput {
	return i.ToGetSksNodepoolKubeletImageGcArrayOutputWithContext(context.Background())
}

func (i GetSksNodepoolKubeletImageGcArray) ToGetSksNodepoolKubeletImageGcArrayOutputWithContext(ctx context.Context) GetSksNodepoolKubeletImageGcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSksNodepoolKubeletImageGcArrayOutput)
}

type GetSksNodepoolKubeletImageGcOutput struct{ *pulumi.OutputState }

func (GetSksNodepoolKubeletImageGcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSksNodepoolKubeletImageGc)(nil)).Elem()
}

func (o GetSksNodepoolKubeletImageGcOutput) ToGetSksNodepoolKubeletImageGcOutput() GetSksNodepoolKubeletImageGcOutput {
	return o
}

func (o GetSksNodepoolKubeletImageGcOutput) ToGetSksNodepoolKubeletImageGcOutputWithContext(ctx context.Context) GetSksNodepoolKubeletImageGcOutput {
	return o
}

// The percent of disk usage after which image garbage collection is always run
func (o GetSksNodepoolKubeletImageGcOutput) HighThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSksNodepoolKubeletImageGc) *int { return v.HighThreshold }).(pulumi.IntPtrOutput)
}

// The percent of disk usage before which image garbage collection is never run
func (o GetSksNodepoolKubeletImageGcOutput) LowThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSksNodepoolKubeletImageGc) *int { return v.LowThreshold }).(pulumi.IntPtrOutput)
}

// The minimum age for an unused image before it is garbage collected (k8s duration format, eg. 1h)
func (o GetSksNodepoolKubeletImageGcOutput) MinAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksNodepoolKubeletImageGc) *string { return v.MinAge }).(pulumi.StringPtrOutput)
}

type GetSksNodepoolKubeletImageGcArrayOutput struct{ *pulumi.OutputState }

func (GetSksNodepoolKubeletImageGcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSksNodepoolKubeletImageGc)(nil)).Elem()
}

func (o GetSksNodepoolKubeletImageGcArrayOutput) ToGetSksNodepoolKubeletImageGcArrayOutput() GetSksNodepoolKubeletImageGcArrayOutput {
	return o
}

func (o GetSksNodepoolKubeletImageGcArrayOutput) ToGetSksNodepoolKubeletImageGcArrayOutputWithContext(ctx context.Context) GetSksNodepoolKubeletImageGcArrayOutput {
	return o
}

func (o GetSksNodepoolKubeletImageGcArrayOutput) Index(i pulumi.IntInput) GetSksNodepoolKubeletImageGcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSksNodepoolKubeletImageGc {
		return vs[0].([]GetSksNodepoolKubeletImageGc)[vs[1].(int)]
	}).(GetSksNodepoolKubeletImageGcOutput)
}

type GetSksNodepoolListNodepool struct {
	// A list of AntiAffinityGroup (IDs) to be attached to the managed instances.
	AntiAffinityGroupIds []string `pulumi:"antiAffinityGroupIds"`
	ClusterId            string   `pulumi:"clusterId"`
	// The pool creation date.
	CreatedAt string `pulumi:"createdAt"`
	// A deploy target ID.
	DeployTargetId *string `pulumi:"deployTargetId"`
	// A free-form text describing the pool.
	Description *string `pulumi:"description"`
	// The managed instances disk size (GiB; default: `50`).
	DiskSize *int    `pulumi:"diskSize"`
	Id       *string `pulumi:"id"`
	// The underlying InstancePool ID.
	InstancePoolId string `pulumi:"instancePoolId"`
	// The string used to prefix the managed instances name (default `pool`).
	InstancePrefix *string `pulumi:"instancePrefix"`
	// The managed compute instances type (`<family>.<size>`, e.g. `standard.medium`; use the [Exoscale CLI](https://github.com/exoscale/cli/) - `exo compute instance-type list` - for the list of available types).
	InstanceType *string `pulumi:"instanceType"`
	// Enable IPV6 for the nodepool nodes
	Ipv6 *bool `pulumi:"ipv6"`
	// Configuration for this nodepool's kubelet image garbage collector
	KubeletImageGcs []GetSksNodepoolListNodepoolKubeletImageGc `pulumi:"kubeletImageGcs"`
	// A map of key/value labels.
	Labels map[string]string `pulumi:"labels"`
	Name   *string           `pulumi:"name"`
	// A list of PrivateNetwork (IDs) to be attached to the managed instances.
	PrivateNetworkIds []string `pulumi:"privateNetworkIds"`
	// A list of SecurityGroup (IDs) to be attached to the managed instances.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	Size             *int     `pulumi:"size"`
	// The current pool state.
	State string `pulumi:"state"`
	// Create nodes with non-standard partitioning for persistent storage (requires min 100G of disk space) (may only be set at creation time).
	StorageLvm *bool `pulumi:"storageLvm"`
	// A map of key/value Kubernetes [taints](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) ('taints = { <key> = "<value>:<effect>" }').
	Taints map[string]string `pulumi:"taints"`
	// The managed instances template ID.
	TemplateId string `pulumi:"templateId"`
	// The managed instances version.
	Version string `pulumi:"version"`
	Zone    string `pulumi:"zone"`
}

// GetSksNodepoolListNodepoolInput is an input type that accepts GetSksNodepoolListNodepoolArgs and GetSksNodepoolListNodepoolOutput values.
// You can construct a concrete instance of `GetSksNodepoolListNodepoolInput` via:
//
//	GetSksNodepoolListNodepoolArgs{...}
type GetSksNodepoolListNodepoolInput interface {
	pulumi.Input

	ToGetSksNodepoolListNodepoolOutput() GetSksNodepoolListNodepoolOutput
	ToGetSksNodepoolListNodepoolOutputWithContext(context.Context) GetSksNodepoolListNodepoolOutput
}

type GetSksNodepoolListNodepoolArgs struct {
	// A list of AntiAffinityGroup (IDs) to be attached to the managed instances.
	AntiAffinityGroupIds pulumi.StringArrayInput `pulumi:"antiAffinityGroupIds"`
	ClusterId            pulumi.StringInput      `pulumi:"clusterId"`
	// The pool creation date.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// A deploy target ID.
	DeployTargetId pulumi.StringPtrInput `pulumi:"deployTargetId"`
	// A free-form text describing the pool.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The managed instances disk size (GiB; default: `50`).
	DiskSize pulumi.IntPtrInput    `pulumi:"diskSize"`
	Id       pulumi.StringPtrInput `pulumi:"id"`
	// The underlying InstancePool ID.
	InstancePoolId pulumi.StringInput `pulumi:"instancePoolId"`
	// The string used to prefix the managed instances name (default `pool`).
	InstancePrefix pulumi.StringPtrInput `pulumi:"instancePrefix"`
	// The managed compute instances type (`<family>.<size>`, e.g. `standard.medium`; use the [Exoscale CLI](https://github.com/exoscale/cli/) - `exo compute instance-type list` - for the list of available types).
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// Enable IPV6 for the nodepool nodes
	Ipv6 pulumi.BoolPtrInput `pulumi:"ipv6"`
	// Configuration for this nodepool's kubelet image garbage collector
	KubeletImageGcs GetSksNodepoolListNodepoolKubeletImageGcArrayInput `pulumi:"kubeletImageGcs"`
	// A map of key/value labels.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	Name   pulumi.StringPtrInput `pulumi:"name"`
	// A list of PrivateNetwork (IDs) to be attached to the managed instances.
	PrivateNetworkIds pulumi.StringArrayInput `pulumi:"privateNetworkIds"`
	// A list of SecurityGroup (IDs) to be attached to the managed instances.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	Size             pulumi.IntPtrInput      `pulumi:"size"`
	// The current pool state.
	State pulumi.StringInput `pulumi:"state"`
	// Create nodes with non-standard partitioning for persistent storage (requires min 100G of disk space) (may only be set at creation time).
	StorageLvm pulumi.BoolPtrInput `pulumi:"storageLvm"`
	// A map of key/value Kubernetes [taints](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) ('taints = { <key> = "<value>:<effect>" }').
	Taints pulumi.StringMapInput `pulumi:"taints"`
	// The managed instances template ID.
	TemplateId pulumi.StringInput `pulumi:"templateId"`
	// The managed instances version.
	Version pulumi.StringInput `pulumi:"version"`
	Zone    pulumi.StringInput `pulumi:"zone"`
}

func (GetSksNodepoolListNodepoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSksNodepoolListNodepool)(nil)).Elem()
}

func (i GetSksNodepoolListNodepoolArgs) ToGetSksNodepoolListNodepoolOutput() GetSksNodepoolListNodepoolOutput {
	return i.ToGetSksNodepoolListNodepoolOutputWithContext(context.Background())
}

func (i GetSksNodepoolListNodepoolArgs) ToGetSksNodepoolListNodepoolOutputWithContext(ctx context.Context) GetSksNodepoolListNodepoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSksNodepoolListNodepoolOutput)
}

// GetSksNodepoolListNodepoolArrayInput is an input type that accepts GetSksNodepoolListNodepoolArray and GetSksNodepoolListNodepoolArrayOutput values.
// You can construct a concrete instance of `GetSksNodepoolListNodepoolArrayInput` via:
//
//	GetSksNodepoolListNodepoolArray{ GetSksNodepoolListNodepoolArgs{...} }
type GetSksNodepoolListNodepoolArrayInput interface {
	pulumi.Input

	ToGetSksNodepoolListNodepoolArrayOutput() GetSksNodepoolListNodepoolArrayOutput
	ToGetSksNodepoolListNodepoolArrayOutputWithContext(context.Context) GetSksNodepoolListNodepoolArrayOutput
}

type GetSksNodepoolListNodepoolArray []GetSksNodepoolListNodepoolInput

func (GetSksNodepoolListNodepoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSksNodepoolListNodepool)(nil)).Elem()
}

func (i GetSksNodepoolListNodepoolArray) ToGetSksNodepoolListNodepoolArrayOutput() GetSksNodepoolListNodepoolArrayOutput {
	return i.ToGetSksNodepoolListNodepoolArrayOutputWithContext(context.Background())
}

func (i GetSksNodepoolListNodepoolArray) ToGetSksNodepoolListNodepoolArrayOutputWithContext(ctx context.Context) GetSksNodepoolListNodepoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSksNodepoolListNodepoolArrayOutput)
}

type GetSksNodepoolListNodepoolOutput struct{ *pulumi.OutputState }

func (GetSksNodepoolListNodepoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSksNodepoolListNodepool)(nil)).Elem()
}

func (o GetSksNodepoolListNodepoolOutput) ToGetSksNodepoolListNodepoolOutput() GetSksNodepoolListNodepoolOutput {
	return o
}

func (o GetSksNodepoolListNodepoolOutput) ToGetSksNodepoolListNodepoolOutputWithContext(ctx context.Context) GetSksNodepoolListNodepoolOutput {
	return o
}

// A list of AntiAffinityGroup (IDs) to be attached to the managed instances.
func (o GetSksNodepoolListNodepoolOutput) AntiAffinityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepool) []string { return v.AntiAffinityGroupIds }).(pulumi.StringArrayOutput)
}

func (o GetSksNodepoolListNodepoolOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepool) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The pool creation date.
func (o GetSksNodepoolListNodepoolOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepool) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// A deploy target ID.
func (o GetSksNodepoolListNodepoolOutput) DeployTargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepool) *string { return v.DeployTargetId }).(pulumi.StringPtrOutput)
}

// A free-form text describing the pool.
func (o GetSksNodepoolListNodepoolOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepool) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The managed instances disk size (GiB; default: `50`).
func (o GetSksNodepoolListNodepoolOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepool) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

func (o GetSksNodepoolListNodepoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The underlying InstancePool ID.
func (o GetSksNodepoolListNodepoolOutput) InstancePoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepool) string { return v.InstancePoolId }).(pulumi.StringOutput)
}

// The string used to prefix the managed instances name (default `pool`).
func (o GetSksNodepoolListNodepoolOutput) InstancePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepool) *string { return v.InstancePrefix }).(pulumi.StringPtrOutput)
}

// The managed compute instances type (`<family>.<size>`, e.g. `standard.medium`; use the [Exoscale CLI](https://github.com/exoscale/cli/) - `exo compute instance-type list` - for the list of available types).
func (o GetSksNodepoolListNodepoolOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepool) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Enable IPV6 for the nodepool nodes
func (o GetSksNodepoolListNodepoolOutput) Ipv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepool) *bool { return v.Ipv6 }).(pulumi.BoolPtrOutput)
}

// Configuration for this nodepool's kubelet image garbage collector
func (o GetSksNodepoolListNodepoolOutput) KubeletImageGcs() GetSksNodepoolListNodepoolKubeletImageGcArrayOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepool) []GetSksNodepoolListNodepoolKubeletImageGc {
		return v.KubeletImageGcs
	}).(GetSksNodepoolListNodepoolKubeletImageGcArrayOutput)
}

// A map of key/value labels.
func (o GetSksNodepoolListNodepoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepool) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o GetSksNodepoolListNodepoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A list of PrivateNetwork (IDs) to be attached to the managed instances.
func (o GetSksNodepoolListNodepoolOutput) PrivateNetworkIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepool) []string { return v.PrivateNetworkIds }).(pulumi.StringArrayOutput)
}

// A list of SecurityGroup (IDs) to be attached to the managed instances.
func (o GetSksNodepoolListNodepoolOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepool) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o GetSksNodepoolListNodepoolOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepool) *int { return v.Size }).(pulumi.IntPtrOutput)
}

// The current pool state.
func (o GetSksNodepoolListNodepoolOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepool) string { return v.State }).(pulumi.StringOutput)
}

// Create nodes with non-standard partitioning for persistent storage (requires min 100G of disk space) (may only be set at creation time).
func (o GetSksNodepoolListNodepoolOutput) StorageLvm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepool) *bool { return v.StorageLvm }).(pulumi.BoolPtrOutput)
}

// A map of key/value Kubernetes [taints](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) ('taints = { <key> = "<value>:<effect>" }').
func (o GetSksNodepoolListNodepoolOutput) Taints() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepool) map[string]string { return v.Taints }).(pulumi.StringMapOutput)
}

// The managed instances template ID.
func (o GetSksNodepoolListNodepoolOutput) TemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepool) string { return v.TemplateId }).(pulumi.StringOutput)
}

// The managed instances version.
func (o GetSksNodepoolListNodepoolOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepool) string { return v.Version }).(pulumi.StringOutput)
}

func (o GetSksNodepoolListNodepoolOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepool) string { return v.Zone }).(pulumi.StringOutput)
}

type GetSksNodepoolListNodepoolArrayOutput struct{ *pulumi.OutputState }

func (GetSksNodepoolListNodepoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSksNodepoolListNodepool)(nil)).Elem()
}

func (o GetSksNodepoolListNodepoolArrayOutput) ToGetSksNodepoolListNodepoolArrayOutput() GetSksNodepoolListNodepoolArrayOutput {
	return o
}

func (o GetSksNodepoolListNodepoolArrayOutput) ToGetSksNodepoolListNodepoolArrayOutputWithContext(ctx context.Context) GetSksNodepoolListNodepoolArrayOutput {
	return o
}

func (o GetSksNodepoolListNodepoolArrayOutput) Index(i pulumi.IntInput) GetSksNodepoolListNodepoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSksNodepoolListNodepool {
		return vs[0].([]GetSksNodepoolListNodepool)[vs[1].(int)]
	}).(GetSksNodepoolListNodepoolOutput)
}

type GetSksNodepoolListNodepoolKubeletImageGc struct {
	// The percent of disk usage after which image garbage collection is always run
	HighThreshold *int `pulumi:"highThreshold"`
	// The percent of disk usage before which image garbage collection is never run
	LowThreshold *int `pulumi:"lowThreshold"`
	// The minimum age for an unused image before it is garbage collected (k8s duration format, eg. 1h)
	MinAge *string `pulumi:"minAge"`
}

// GetSksNodepoolListNodepoolKubeletImageGcInput is an input type that accepts GetSksNodepoolListNodepoolKubeletImageGcArgs and GetSksNodepoolListNodepoolKubeletImageGcOutput values.
// You can construct a concrete instance of `GetSksNodepoolListNodepoolKubeletImageGcInput` via:
//
//	GetSksNodepoolListNodepoolKubeletImageGcArgs{...}
type GetSksNodepoolListNodepoolKubeletImageGcInput interface {
	pulumi.Input

	ToGetSksNodepoolListNodepoolKubeletImageGcOutput() GetSksNodepoolListNodepoolKubeletImageGcOutput
	ToGetSksNodepoolListNodepoolKubeletImageGcOutputWithContext(context.Context) GetSksNodepoolListNodepoolKubeletImageGcOutput
}

type GetSksNodepoolListNodepoolKubeletImageGcArgs struct {
	// The percent of disk usage after which image garbage collection is always run
	HighThreshold pulumi.IntPtrInput `pulumi:"highThreshold"`
	// The percent of disk usage before which image garbage collection is never run
	LowThreshold pulumi.IntPtrInput `pulumi:"lowThreshold"`
	// The minimum age for an unused image before it is garbage collected (k8s duration format, eg. 1h)
	MinAge pulumi.StringPtrInput `pulumi:"minAge"`
}

func (GetSksNodepoolListNodepoolKubeletImageGcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSksNodepoolListNodepoolKubeletImageGc)(nil)).Elem()
}

func (i GetSksNodepoolListNodepoolKubeletImageGcArgs) ToGetSksNodepoolListNodepoolKubeletImageGcOutput() GetSksNodepoolListNodepoolKubeletImageGcOutput {
	return i.ToGetSksNodepoolListNodepoolKubeletImageGcOutputWithContext(context.Background())
}

func (i GetSksNodepoolListNodepoolKubeletImageGcArgs) ToGetSksNodepoolListNodepoolKubeletImageGcOutputWithContext(ctx context.Context) GetSksNodepoolListNodepoolKubeletImageGcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSksNodepoolListNodepoolKubeletImageGcOutput)
}

// GetSksNodepoolListNodepoolKubeletImageGcArrayInput is an input type that accepts GetSksNodepoolListNodepoolKubeletImageGcArray and GetSksNodepoolListNodepoolKubeletImageGcArrayOutput values.
// You can construct a concrete instance of `GetSksNodepoolListNodepoolKubeletImageGcArrayInput` via:
//
//	GetSksNodepoolListNodepoolKubeletImageGcArray{ GetSksNodepoolListNodepoolKubeletImageGcArgs{...} }
type GetSksNodepoolListNodepoolKubeletImageGcArrayInput interface {
	pulumi.Input

	ToGetSksNodepoolListNodepoolKubeletImageGcArrayOutput() GetSksNodepoolListNodepoolKubeletImageGcArrayOutput
	ToGetSksNodepoolListNodepoolKubeletImageGcArrayOutputWithContext(context.Context) GetSksNodepoolListNodepoolKubeletImageGcArrayOutput
}

type GetSksNodepoolListNodepoolKubeletImageGcArray []GetSksNodepoolListNodepoolKubeletImageGcInput

func (GetSksNodepoolListNodepoolKubeletImageGcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSksNodepoolListNodepoolKubeletImageGc)(nil)).Elem()
}

func (i GetSksNodepoolListNodepoolKubeletImageGcArray) ToGetSksNodepoolListNodepoolKubeletImageGcArrayOutput() GetSksNodepoolListNodepoolKubeletImageGcArrayOutput {
	return i.ToGetSksNodepoolListNodepoolKubeletImageGcArrayOutputWithContext(context.Background())
}

func (i GetSksNodepoolListNodepoolKubeletImageGcArray) ToGetSksNodepoolListNodepoolKubeletImageGcArrayOutputWithContext(ctx context.Context) GetSksNodepoolListNodepoolKubeletImageGcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSksNodepoolListNodepoolKubeletImageGcArrayOutput)
}

type GetSksNodepoolListNodepoolKubeletImageGcOutput struct{ *pulumi.OutputState }

func (GetSksNodepoolListNodepoolKubeletImageGcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSksNodepoolListNodepoolKubeletImageGc)(nil)).Elem()
}

func (o GetSksNodepoolListNodepoolKubeletImageGcOutput) ToGetSksNodepoolListNodepoolKubeletImageGcOutput() GetSksNodepoolListNodepoolKubeletImageGcOutput {
	return o
}

func (o GetSksNodepoolListNodepoolKubeletImageGcOutput) ToGetSksNodepoolListNodepoolKubeletImageGcOutputWithContext(ctx context.Context) GetSksNodepoolListNodepoolKubeletImageGcOutput {
	return o
}

// The percent of disk usage after which image garbage collection is always run
func (o GetSksNodepoolListNodepoolKubeletImageGcOutput) HighThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepoolKubeletImageGc) *int { return v.HighThreshold }).(pulumi.IntPtrOutput)
}

// The percent of disk usage before which image garbage collection is never run
func (o GetSksNodepoolListNodepoolKubeletImageGcOutput) LowThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepoolKubeletImageGc) *int { return v.LowThreshold }).(pulumi.IntPtrOutput)
}

// The minimum age for an unused image before it is garbage collected (k8s duration format, eg. 1h)
func (o GetSksNodepoolListNodepoolKubeletImageGcOutput) MinAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksNodepoolListNodepoolKubeletImageGc) *string { return v.MinAge }).(pulumi.StringPtrOutput)
}

type GetSksNodepoolListNodepoolKubeletImageGcArrayOutput struct{ *pulumi.OutputState }

func (GetSksNodepoolListNodepoolKubeletImageGcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSksNodepoolListNodepoolKubeletImageGc)(nil)).Elem()
}

func (o GetSksNodepoolListNodepoolKubeletImageGcArrayOutput) ToGetSksNodepoolListNodepoolKubeletImageGcArrayOutput() GetSksNodepoolListNodepoolKubeletImageGcArrayOutput {
	return o
}

func (o GetSksNodepoolListNodepoolKubeletImageGcArrayOutput) ToGetSksNodepoolListNodepoolKubeletImageGcArrayOutputWithContext(ctx context.Context) GetSksNodepoolListNodepoolKubeletImageGcArrayOutput {
	return o
}

func (o GetSksNodepoolListNodepoolKubeletImageGcArrayOutput) Index(i pulumi.IntInput) GetSksNodepoolListNodepoolKubeletImageGcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSksNodepoolListNodepoolKubeletImageGc {
		return vs[0].([]GetSksNodepoolListNodepoolKubeletImageGc)[vs[1].(int)]
	}).(GetSksNodepoolListNodepoolKubeletImageGcOutput)
}

type GetSosBucketPolicyTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
}

// GetSosBucketPolicyTimeoutsInput is an input type that accepts GetSosBucketPolicyTimeoutsArgs and GetSosBucketPolicyTimeoutsOutput values.
// You can construct a concrete instance of `GetSosBucketPolicyTimeoutsInput` via:
//
//	GetSosBucketPolicyTimeoutsArgs{...}
type GetSosBucketPolicyTimeoutsInput interface {
	pulumi.Input

	ToGetSosBucketPolicyTimeoutsOutput() GetSosBucketPolicyTimeoutsOutput
	ToGetSosBucketPolicyTimeoutsOutputWithContext(context.Context) GetSosBucketPolicyTimeoutsOutput
}

type GetSosBucketPolicyTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
}

func (GetSosBucketPolicyTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSosBucketPolicyTimeouts)(nil)).Elem()
}

func (i GetSosBucketPolicyTimeoutsArgs) ToGetSosBucketPolicyTimeoutsOutput() GetSosBucketPolicyTimeoutsOutput {
	return i.ToGetSosBucketPolicyTimeoutsOutputWithContext(context.Background())
}

func (i GetSosBucketPolicyTimeoutsArgs) ToGetSosBucketPolicyTimeoutsOutputWithContext(ctx context.Context) GetSosBucketPolicyTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSosBucketPolicyTimeoutsOutput)
}

func (i GetSosBucketPolicyTimeoutsArgs) ToGetSosBucketPolicyTimeoutsPtrOutput() GetSosBucketPolicyTimeoutsPtrOutput {
	return i.ToGetSosBucketPolicyTimeoutsPtrOutputWithContext(context.Background())
}

func (i GetSosBucketPolicyTimeoutsArgs) ToGetSosBucketPolicyTimeoutsPtrOutputWithContext(ctx context.Context) GetSosBucketPolicyTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSosBucketPolicyTimeoutsOutput).ToGetSosBucketPolicyTimeoutsPtrOutputWithContext(ctx)
}

// GetSosBucketPolicyTimeoutsPtrInput is an input type that accepts GetSosBucketPolicyTimeoutsArgs, GetSosBucketPolicyTimeoutsPtr and GetSosBucketPolicyTimeoutsPtrOutput values.
// You can construct a concrete instance of `GetSosBucketPolicyTimeoutsPtrInput` via:
//
//	        GetSosBucketPolicyTimeoutsArgs{...}
//
//	or:
//
//	        nil
type GetSosBucketPolicyTimeoutsPtrInput interface {
	pulumi.Input

	ToGetSosBucketPolicyTimeoutsPtrOutput() GetSosBucketPolicyTimeoutsPtrOutput
	ToGetSosBucketPolicyTimeoutsPtrOutputWithContext(context.Context) GetSosBucketPolicyTimeoutsPtrOutput
}

type getSosBucketPolicyTimeoutsPtrType GetSosBucketPolicyTimeoutsArgs

func GetSosBucketPolicyTimeoutsPtr(v *GetSosBucketPolicyTimeoutsArgs) GetSosBucketPolicyTimeoutsPtrInput {
	return (*getSosBucketPolicyTimeoutsPtrType)(v)
}

func (*getSosBucketPolicyTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSosBucketPolicyTimeouts)(nil)).Elem()
}

func (i *getSosBucketPolicyTimeoutsPtrType) ToGetSosBucketPolicyTimeoutsPtrOutput() GetSosBucketPolicyTimeoutsPtrOutput {
	return i.ToGetSosBucketPolicyTimeoutsPtrOutputWithContext(context.Background())
}

func (i *getSosBucketPolicyTimeoutsPtrType) ToGetSosBucketPolicyTimeoutsPtrOutputWithContext(ctx context.Context) GetSosBucketPolicyTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSosBucketPolicyTimeoutsPtrOutput)
}

type GetSosBucketPolicyTimeoutsOutput struct{ *pulumi.OutputState }

func (GetSosBucketPolicyTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSosBucketPolicyTimeouts)(nil)).Elem()
}

func (o GetSosBucketPolicyTimeoutsOutput) ToGetSosBucketPolicyTimeoutsOutput() GetSosBucketPolicyTimeoutsOutput {
	return o
}

func (o GetSosBucketPolicyTimeoutsOutput) ToGetSosBucketPolicyTimeoutsOutputWithContext(ctx context.Context) GetSosBucketPolicyTimeoutsOutput {
	return o
}

func (o GetSosBucketPolicyTimeoutsOutput) ToGetSosBucketPolicyTimeoutsPtrOutput() GetSosBucketPolicyTimeoutsPtrOutput {
	return o.ToGetSosBucketPolicyTimeoutsPtrOutputWithContext(context.Background())
}

func (o GetSosBucketPolicyTimeoutsOutput) ToGetSosBucketPolicyTimeoutsPtrOutputWithContext(ctx context.Context) GetSosBucketPolicyTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSosBucketPolicyTimeouts) *GetSosBucketPolicyTimeouts {
		return &v
	}).(GetSosBucketPolicyTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o GetSosBucketPolicyTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSosBucketPolicyTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

type GetSosBucketPolicyTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (GetSosBucketPolicyTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSosBucketPolicyTimeouts)(nil)).Elem()
}

func (o GetSosBucketPolicyTimeoutsPtrOutput) ToGetSosBucketPolicyTimeoutsPtrOutput() GetSosBucketPolicyTimeoutsPtrOutput {
	return o
}

func (o GetSosBucketPolicyTimeoutsPtrOutput) ToGetSosBucketPolicyTimeoutsPtrOutputWithContext(ctx context.Context) GetSosBucketPolicyTimeoutsPtrOutput {
	return o
}

func (o GetSosBucketPolicyTimeoutsPtrOutput) Elem() GetSosBucketPolicyTimeoutsOutput {
	return o.ApplyT(func(v *GetSosBucketPolicyTimeouts) GetSosBucketPolicyTimeouts {
		if v != nil {
			return *v
		}
		var ret GetSosBucketPolicyTimeouts
		return ret
	}).(GetSosBucketPolicyTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o GetSosBucketPolicyTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSosBucketPolicyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BlockStorageVolumeSnapshotTargetInput)(nil)).Elem(), BlockStorageVolumeSnapshotTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockStorageVolumeSnapshotTargetPtrInput)(nil)).Elem(), BlockStorageVolumeSnapshotTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockStorageVolumeSnapshotTimeoutsInput)(nil)).Elem(), BlockStorageVolumeSnapshotTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockStorageVolumeSnapshotTimeoutsPtrInput)(nil)).Elem(), BlockStorageVolumeSnapshotTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockStorageVolumeSnapshotVolumeInput)(nil)).Elem(), BlockStorageVolumeSnapshotVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockStorageVolumeSnapshotVolumePtrInput)(nil)).Elem(), BlockStorageVolumeSnapshotVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockStorageVolumeTimeoutsInput)(nil)).Elem(), BlockStorageVolumeTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockStorageVolumeTimeoutsPtrInput)(nil)).Elem(), BlockStorageVolumeTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceNetworkInterfaceInput)(nil)).Elem(), ComputeInstanceNetworkInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceNetworkInterfaceArrayInput)(nil)).Elem(), ComputeInstanceNetworkInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseGrafanaInput)(nil)).Elem(), DatabaseGrafanaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseGrafanaPtrInput)(nil)).Elem(), DatabaseGrafanaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseKafkaInput)(nil)).Elem(), DatabaseKafkaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseKafkaPtrInput)(nil)).Elem(), DatabaseKafkaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseMysqlInput)(nil)).Elem(), DatabaseMysqlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseMysqlPtrInput)(nil)).Elem(), DatabaseMysqlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseOpensearchInput)(nil)).Elem(), DatabaseOpensearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseOpensearchPtrInput)(nil)).Elem(), DatabaseOpensearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseOpensearchDashboardsInput)(nil)).Elem(), DatabaseOpensearchDashboardsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseOpensearchDashboardsPtrInput)(nil)).Elem(), DatabaseOpensearchDashboardsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseOpensearchIndexPatternInput)(nil)).Elem(), DatabaseOpensearchIndexPatternArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseOpensearchIndexPatternArrayInput)(nil)).Elem(), DatabaseOpensearchIndexPatternArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseOpensearchIndexTemplateInput)(nil)).Elem(), DatabaseOpensearchIndexTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseOpensearchIndexTemplatePtrInput)(nil)).Elem(), DatabaseOpensearchIndexTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabasePgInput)(nil)).Elem(), DatabasePgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabasePgPtrInput)(nil)).Elem(), DatabasePgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseTimeoutsInput)(nil)).Elem(), DatabaseTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseTimeoutsPtrInput)(nil)).Elem(), DatabaseTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseValkeyInput)(nil)).Elem(), DatabaseValkeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseValkeyPtrInput)(nil)).Elem(), DatabaseValkeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasGrafanaInput)(nil)).Elem(), DbaasGrafanaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasGrafanaPtrInput)(nil)).Elem(), DbaasGrafanaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasKafkaInput)(nil)).Elem(), DbaasKafkaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasKafkaPtrInput)(nil)).Elem(), DbaasKafkaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasKafkaUserTimeoutsInput)(nil)).Elem(), DbaasKafkaUserTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasKafkaUserTimeoutsPtrInput)(nil)).Elem(), DbaasKafkaUserTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasMysqlInput)(nil)).Elem(), DbaasMysqlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasMysqlPtrInput)(nil)).Elem(), DbaasMysqlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasMysqlDatabaseTimeoutsInput)(nil)).Elem(), DbaasMysqlDatabaseTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasMysqlDatabaseTimeoutsPtrInput)(nil)).Elem(), DbaasMysqlDatabaseTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasMysqlUserTimeoutsInput)(nil)).Elem(), DbaasMysqlUserTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasMysqlUserTimeoutsPtrInput)(nil)).Elem(), DbaasMysqlUserTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasOpensearchInput)(nil)).Elem(), DbaasOpensearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasOpensearchPtrInput)(nil)).Elem(), DbaasOpensearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasOpensearchDashboardsInput)(nil)).Elem(), DbaasOpensearchDashboardsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasOpensearchDashboardsPtrInput)(nil)).Elem(), DbaasOpensearchDashboardsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasOpensearchIndexPatternInput)(nil)).Elem(), DbaasOpensearchIndexPatternArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasOpensearchIndexPatternArrayInput)(nil)).Elem(), DbaasOpensearchIndexPatternArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasOpensearchIndexTemplateInput)(nil)).Elem(), DbaasOpensearchIndexTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasOpensearchIndexTemplatePtrInput)(nil)).Elem(), DbaasOpensearchIndexTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasOpensearchUserTimeoutsInput)(nil)).Elem(), DbaasOpensearchUserTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasOpensearchUserTimeoutsPtrInput)(nil)).Elem(), DbaasOpensearchUserTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasPgInput)(nil)).Elem(), DbaasPgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasPgPtrInput)(nil)).Elem(), DbaasPgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasPgDatabaseTimeoutsInput)(nil)).Elem(), DbaasPgDatabaseTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasPgDatabaseTimeoutsPtrInput)(nil)).Elem(), DbaasPgDatabaseTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasPgUserTimeoutsInput)(nil)).Elem(), DbaasPgUserTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasPgUserTimeoutsPtrInput)(nil)).Elem(), DbaasPgUserTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasTimeoutsInput)(nil)).Elem(), DbaasTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasTimeoutsPtrInput)(nil)).Elem(), DbaasTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasValkeyInput)(nil)).Elem(), DbaasValkeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasValkeyPtrInput)(nil)).Elem(), DbaasValkeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticIpHealthcheckInput)(nil)).Elem(), ElasticIpHealthcheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticIpHealthcheckPtrInput)(nil)).Elem(), ElasticIpHealthcheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamApiKeyTimeoutsInput)(nil)).Elem(), IamApiKeyTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamApiKeyTimeoutsPtrInput)(nil)).Elem(), IamApiKeyTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamOrgPolicyServicesInput)(nil)).Elem(), IamOrgPolicyServicesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamOrgPolicyServicesMapInput)(nil)).Elem(), IamOrgPolicyServicesMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamOrgPolicyServicesRuleInput)(nil)).Elem(), IamOrgPolicyServicesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamOrgPolicyServicesRuleArrayInput)(nil)).Elem(), IamOrgPolicyServicesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamOrgPolicyTimeoutsInput)(nil)).Elem(), IamOrgPolicyTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamOrgPolicyTimeoutsPtrInput)(nil)).Elem(), IamOrgPolicyTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamRolePolicyInput)(nil)).Elem(), IamRolePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamRolePolicyPtrInput)(nil)).Elem(), IamRolePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamRolePolicyServicesInput)(nil)).Elem(), IamRolePolicyServicesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamRolePolicyServicesMapInput)(nil)).Elem(), IamRolePolicyServicesMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamRolePolicyServicesRuleInput)(nil)).Elem(), IamRolePolicyServicesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamRolePolicyServicesRuleArrayInput)(nil)).Elem(), IamRolePolicyServicesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamRoleTimeoutsInput)(nil)).Elem(), IamRoleTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamRoleTimeoutsPtrInput)(nil)).Elem(), IamRoleTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePoolInstanceInput)(nil)).Elem(), InstancePoolInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePoolInstanceArrayInput)(nil)).Elem(), InstancePoolInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NlbServiceHealthcheckInput)(nil)).Elem(), NlbServiceHealthcheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NlbServiceHealthcheckArrayInput)(nil)).Elem(), NlbServiceHealthcheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SksClusterAuditInput)(nil)).Elem(), SksClusterAuditArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SksClusterAuditPtrInput)(nil)).Elem(), SksClusterAuditArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SksClusterOidcInput)(nil)).Elem(), SksClusterOidcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SksClusterOidcPtrInput)(nil)).Elem(), SksClusterOidcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SksNodepoolKubeletImageGcInput)(nil)).Elem(), SksNodepoolKubeletImageGcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SksNodepoolKubeletImageGcArrayInput)(nil)).Elem(), SksNodepoolKubeletImageGcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SosBucketPolicyTimeoutsInput)(nil)).Elem(), SosBucketPolicyTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SosBucketPolicyTimeoutsPtrInput)(nil)).Elem(), SosBucketPolicyTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBlockStorageVolumeInstanceInput)(nil)).Elem(), GetBlockStorageVolumeInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBlockStorageVolumeSnapshotTypeInput)(nil)).Elem(), GetBlockStorageVolumeSnapshotTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBlockStorageVolumeSnapshotTypeArrayInput)(nil)).Elem(), GetBlockStorageVolumeSnapshotTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBlockStorageVolumeSnapshotTimeoutsInput)(nil)).Elem(), GetBlockStorageVolumeSnapshotTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBlockStorageVolumeSnapshotTimeoutsPtrInput)(nil)).Elem(), GetBlockStorageVolumeSnapshotTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBlockStorageVolumeSnapshotVolumeInput)(nil)).Elem(), GetBlockStorageVolumeSnapshotVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBlockStorageVolumeTimeoutsInput)(nil)).Elem(), GetBlockStorageVolumeTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBlockStorageVolumeTimeoutsPtrInput)(nil)).Elem(), GetBlockStorageVolumeTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeInstanceListInstanceInput)(nil)).Elem(), GetComputeInstanceListInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeInstanceListInstanceArrayInput)(nil)).Elem(), GetComputeInstanceListInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUriTimeoutsInput)(nil)).Elem(), GetDatabaseUriTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUriTimeoutsPtrInput)(nil)).Elem(), GetDatabaseUriTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainRecordFilterInput)(nil)).Elem(), GetDomainRecordFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainRecordRecordInput)(nil)).Elem(), GetDomainRecordRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainRecordRecordArrayInput)(nil)).Elem(), GetDomainRecordRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElasticIpHealthcheckInput)(nil)).Elem(), GetElasticIpHealthcheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElasticIpHealthcheckArrayInput)(nil)).Elem(), GetElasticIpHealthcheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamApiKeyTimeoutsInput)(nil)).Elem(), GetIamApiKeyTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamApiKeyTimeoutsPtrInput)(nil)).Elem(), GetIamApiKeyTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamOrgPolicyServicesInput)(nil)).Elem(), GetIamOrgPolicyServicesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamOrgPolicyServicesMapInput)(nil)).Elem(), GetIamOrgPolicyServicesMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamOrgPolicyServicesRuleInput)(nil)).Elem(), GetIamOrgPolicyServicesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamOrgPolicyServicesRuleArrayInput)(nil)).Elem(), GetIamOrgPolicyServicesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamOrgPolicyTimeoutsInput)(nil)).Elem(), GetIamOrgPolicyTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamOrgPolicyTimeoutsPtrInput)(nil)).Elem(), GetIamOrgPolicyTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamRolePolicyInput)(nil)).Elem(), GetIamRolePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamRolePolicyServicesInput)(nil)).Elem(), GetIamRolePolicyServicesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamRolePolicyServicesMapInput)(nil)).Elem(), GetIamRolePolicyServicesMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamRolePolicyServicesRuleInput)(nil)).Elem(), GetIamRolePolicyServicesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamRolePolicyServicesRuleArrayInput)(nil)).Elem(), GetIamRolePolicyServicesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamRoleTimeoutsInput)(nil)).Elem(), GetIamRoleTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamRoleTimeoutsPtrInput)(nil)).Elem(), GetIamRoleTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancePoolInstanceInput)(nil)).Elem(), GetInstancePoolInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancePoolInstanceArrayInput)(nil)).Elem(), GetInstancePoolInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancePoolListPoolInput)(nil)).Elem(), GetInstancePoolListPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancePoolListPoolArrayInput)(nil)).Elem(), GetInstancePoolListPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancePoolListPoolInstanceInput)(nil)).Elem(), GetInstancePoolListPoolInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancePoolListPoolInstanceArrayInput)(nil)).Elem(), GetInstancePoolListPoolInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNlbServiceListServiceInput)(nil)).Elem(), GetNlbServiceListServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNlbServiceListServiceArrayInput)(nil)).Elem(), GetNlbServiceListServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNlbServiceListServiceHealthcheckInput)(nil)).Elem(), GetNlbServiceListServiceHealthcheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNlbServiceListTimeoutsInput)(nil)).Elem(), GetNlbServiceListTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNlbServiceListTimeoutsPtrInput)(nil)).Elem(), GetNlbServiceListTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSksClusterAuditInput)(nil)).Elem(), GetSksClusterAuditArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSksClusterAuditPtrInput)(nil)).Elem(), GetSksClusterAuditArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSksClusterListClusterInput)(nil)).Elem(), GetSksClusterListClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSksClusterListClusterArrayInput)(nil)).Elem(), GetSksClusterListClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSksClusterListClusterAuditInput)(nil)).Elem(), GetSksClusterListClusterAuditArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSksClusterListClusterAuditPtrInput)(nil)).Elem(), GetSksClusterListClusterAuditArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSksClusterListClusterOidcInput)(nil)).Elem(), GetSksClusterListClusterOidcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSksClusterOidcInput)(nil)).Elem(), GetSksClusterOidcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSksClusterOidcPtrInput)(nil)).Elem(), GetSksClusterOidcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSksNodepoolKubeletImageGcInput)(nil)).Elem(), GetSksNodepoolKubeletImageGcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSksNodepoolKubeletImageGcArrayInput)(nil)).Elem(), GetSksNodepoolKubeletImageGcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSksNodepoolListNodepoolInput)(nil)).Elem(), GetSksNodepoolListNodepoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSksNodepoolListNodepoolArrayInput)(nil)).Elem(), GetSksNodepoolListNodepoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSksNodepoolListNodepoolKubeletImageGcInput)(nil)).Elem(), GetSksNodepoolListNodepoolKubeletImageGcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSksNodepoolListNodepoolKubeletImageGcArrayInput)(nil)).Elem(), GetSksNodepoolListNodepoolKubeletImageGcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSosBucketPolicyTimeoutsInput)(nil)).Elem(), GetSosBucketPolicyTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSosBucketPolicyTimeoutsPtrInput)(nil)).Elem(), GetSosBucketPolicyTimeoutsArgs{})
	pulumi.RegisterOutputType(BlockStorageVolumeSnapshotTargetOutput{})
	pulumi.RegisterOutputType(BlockStorageVolumeSnapshotTargetPtrOutput{})
	pulumi.RegisterOutputType(BlockStorageVolumeSnapshotTimeoutsOutput{})
	pulumi.RegisterOutputType(BlockStorageVolumeSnapshotTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(BlockStorageVolumeSnapshotVolumeOutput{})
	pulumi.RegisterOutputType(BlockStorageVolumeSnapshotVolumePtrOutput{})
	pulumi.RegisterOutputType(BlockStorageVolumeTimeoutsOutput{})
	pulumi.RegisterOutputType(BlockStorageVolumeTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(ComputeInstanceNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(DatabaseGrafanaOutput{})
	pulumi.RegisterOutputType(DatabaseGrafanaPtrOutput{})
	pulumi.RegisterOutputType(DatabaseKafkaOutput{})
	pulumi.RegisterOutputType(DatabaseKafkaPtrOutput{})
	pulumi.RegisterOutputType(DatabaseMysqlOutput{})
	pulumi.RegisterOutputType(DatabaseMysqlPtrOutput{})
	pulumi.RegisterOutputType(DatabaseOpensearchOutput{})
	pulumi.RegisterOutputType(DatabaseOpensearchPtrOutput{})
	pulumi.RegisterOutputType(DatabaseOpensearchDashboardsOutput{})
	pulumi.RegisterOutputType(DatabaseOpensearchDashboardsPtrOutput{})
	pulumi.RegisterOutputType(DatabaseOpensearchIndexPatternOutput{})
	pulumi.RegisterOutputType(DatabaseOpensearchIndexPatternArrayOutput{})
	pulumi.RegisterOutputType(DatabaseOpensearchIndexTemplateOutput{})
	pulumi.RegisterOutputType(DatabaseOpensearchIndexTemplatePtrOutput{})
	pulumi.RegisterOutputType(DatabasePgOutput{})
	pulumi.RegisterOutputType(DatabasePgPtrOutput{})
	pulumi.RegisterOutputType(DatabaseTimeoutsOutput{})
	pulumi.RegisterOutputType(DatabaseTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(DatabaseValkeyOutput{})
	pulumi.RegisterOutputType(DatabaseValkeyPtrOutput{})
	pulumi.RegisterOutputType(DbaasGrafanaOutput{})
	pulumi.RegisterOutputType(DbaasGrafanaPtrOutput{})
	pulumi.RegisterOutputType(DbaasKafkaOutput{})
	pulumi.RegisterOutputType(DbaasKafkaPtrOutput{})
	pulumi.RegisterOutputType(DbaasKafkaUserTimeoutsOutput{})
	pulumi.RegisterOutputType(DbaasKafkaUserTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(DbaasMysqlOutput{})
	pulumi.RegisterOutputType(DbaasMysqlPtrOutput{})
	pulumi.RegisterOutputType(DbaasMysqlDatabaseTimeoutsOutput{})
	pulumi.RegisterOutputType(DbaasMysqlDatabaseTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(DbaasMysqlUserTimeoutsOutput{})
	pulumi.RegisterOutputType(DbaasMysqlUserTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(DbaasOpensearchOutput{})
	pulumi.RegisterOutputType(DbaasOpensearchPtrOutput{})
	pulumi.RegisterOutputType(DbaasOpensearchDashboardsOutput{})
	pulumi.RegisterOutputType(DbaasOpensearchDashboardsPtrOutput{})
	pulumi.RegisterOutputType(DbaasOpensearchIndexPatternOutput{})
	pulumi.RegisterOutputType(DbaasOpensearchIndexPatternArrayOutput{})
	pulumi.RegisterOutputType(DbaasOpensearchIndexTemplateOutput{})
	pulumi.RegisterOutputType(DbaasOpensearchIndexTemplatePtrOutput{})
	pulumi.RegisterOutputType(DbaasOpensearchUserTimeoutsOutput{})
	pulumi.RegisterOutputType(DbaasOpensearchUserTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(DbaasPgOutput{})
	pulumi.RegisterOutputType(DbaasPgPtrOutput{})
	pulumi.RegisterOutputType(DbaasPgDatabaseTimeoutsOutput{})
	pulumi.RegisterOutputType(DbaasPgDatabaseTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(DbaasPgUserTimeoutsOutput{})
	pulumi.RegisterOutputType(DbaasPgUserTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(DbaasTimeoutsOutput{})
	pulumi.RegisterOutputType(DbaasTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(DbaasValkeyOutput{})
	pulumi.RegisterOutputType(DbaasValkeyPtrOutput{})
	pulumi.RegisterOutputType(ElasticIpHealthcheckOutput{})
	pulumi.RegisterOutputType(ElasticIpHealthcheckPtrOutput{})
	pulumi.RegisterOutputType(IamApiKeyTimeoutsOutput{})
	pulumi.RegisterOutputType(IamApiKeyTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(IamOrgPolicyServicesOutput{})
	pulumi.RegisterOutputType(IamOrgPolicyServicesMapOutput{})
	pulumi.RegisterOutputType(IamOrgPolicyServicesRuleOutput{})
	pulumi.RegisterOutputType(IamOrgPolicyServicesRuleArrayOutput{})
	pulumi.RegisterOutputType(IamOrgPolicyTimeoutsOutput{})
	pulumi.RegisterOutputType(IamOrgPolicyTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(IamRolePolicyOutput{})
	pulumi.RegisterOutputType(IamRolePolicyPtrOutput{})
	pulumi.RegisterOutputType(IamRolePolicyServicesOutput{})
	pulumi.RegisterOutputType(IamRolePolicyServicesMapOutput{})
	pulumi.RegisterOutputType(IamRolePolicyServicesRuleOutput{})
	pulumi.RegisterOutputType(IamRolePolicyServicesRuleArrayOutput{})
	pulumi.RegisterOutputType(IamRoleTimeoutsOutput{})
	pulumi.RegisterOutputType(IamRoleTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(InstancePoolInstanceOutput{})
	pulumi.RegisterOutputType(InstancePoolInstanceArrayOutput{})
	pulumi.RegisterOutputType(NlbServiceHealthcheckOutput{})
	pulumi.RegisterOutputType(NlbServiceHealthcheckArrayOutput{})
	pulumi.RegisterOutputType(SksClusterAuditOutput{})
	pulumi.RegisterOutputType(SksClusterAuditPtrOutput{})
	pulumi.RegisterOutputType(SksClusterOidcOutput{})
	pulumi.RegisterOutputType(SksClusterOidcPtrOutput{})
	pulumi.RegisterOutputType(SksNodepoolKubeletImageGcOutput{})
	pulumi.RegisterOutputType(SksNodepoolKubeletImageGcArrayOutput{})
	pulumi.RegisterOutputType(SosBucketPolicyTimeoutsOutput{})
	pulumi.RegisterOutputType(SosBucketPolicyTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(GetBlockStorageVolumeInstanceOutput{})
	pulumi.RegisterOutputType(GetBlockStorageVolumeSnapshotTypeOutput{})
	pulumi.RegisterOutputType(GetBlockStorageVolumeSnapshotTypeArrayOutput{})
	pulumi.RegisterOutputType(GetBlockStorageVolumeSnapshotTimeoutsOutput{})
	pulumi.RegisterOutputType(GetBlockStorageVolumeSnapshotTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(GetBlockStorageVolumeSnapshotVolumeOutput{})
	pulumi.RegisterOutputType(GetBlockStorageVolumeTimeoutsOutput{})
	pulumi.RegisterOutputType(GetBlockStorageVolumeTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceListInstanceOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceListInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUriTimeoutsOutput{})
	pulumi.RegisterOutputType(GetDatabaseUriTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(GetDomainRecordFilterOutput{})
	pulumi.RegisterOutputType(GetDomainRecordRecordOutput{})
	pulumi.RegisterOutputType(GetDomainRecordRecordArrayOutput{})
	pulumi.RegisterOutputType(GetElasticIpHealthcheckOutput{})
	pulumi.RegisterOutputType(GetElasticIpHealthcheckArrayOutput{})
	pulumi.RegisterOutputType(GetIamApiKeyTimeoutsOutput{})
	pulumi.RegisterOutputType(GetIamApiKeyTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(GetIamOrgPolicyServicesOutput{})
	pulumi.RegisterOutputType(GetIamOrgPolicyServicesMapOutput{})
	pulumi.RegisterOutputType(GetIamOrgPolicyServicesRuleOutput{})
	pulumi.RegisterOutputType(GetIamOrgPolicyServicesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetIamOrgPolicyTimeoutsOutput{})
	pulumi.RegisterOutputType(GetIamOrgPolicyTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(GetIamRolePolicyOutput{})
	pulumi.RegisterOutputType(GetIamRolePolicyServicesOutput{})
	pulumi.RegisterOutputType(GetIamRolePolicyServicesMapOutput{})
	pulumi.RegisterOutputType(GetIamRolePolicyServicesRuleOutput{})
	pulumi.RegisterOutputType(GetIamRolePolicyServicesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetIamRoleTimeoutsOutput{})
	pulumi.RegisterOutputType(GetIamRoleTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(GetInstancePoolInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancePoolInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetInstancePoolListPoolOutput{})
	pulumi.RegisterOutputType(GetInstancePoolListPoolArrayOutput{})
	pulumi.RegisterOutputType(GetInstancePoolListPoolInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancePoolListPoolInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetNlbServiceListServiceOutput{})
	pulumi.RegisterOutputType(GetNlbServiceListServiceArrayOutput{})
	pulumi.RegisterOutputType(GetNlbServiceListServiceHealthcheckOutput{})
	pulumi.RegisterOutputType(GetNlbServiceListTimeoutsOutput{})
	pulumi.RegisterOutputType(GetNlbServiceListTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(GetSksClusterAuditOutput{})
	pulumi.RegisterOutputType(GetSksClusterAuditPtrOutput{})
	pulumi.RegisterOutputType(GetSksClusterListClusterOutput{})
	pulumi.RegisterOutputType(GetSksClusterListClusterArrayOutput{})
	pulumi.RegisterOutputType(GetSksClusterListClusterAuditOutput{})
	pulumi.RegisterOutputType(GetSksClusterListClusterAuditPtrOutput{})
	pulumi.RegisterOutputType(GetSksClusterListClusterOidcOutput{})
	pulumi.RegisterOutputType(GetSksClusterOidcOutput{})
	pulumi.RegisterOutputType(GetSksClusterOidcPtrOutput{})
	pulumi.RegisterOutputType(GetSksNodepoolKubeletImageGcOutput{})
	pulumi.RegisterOutputType(GetSksNodepoolKubeletImageGcArrayOutput{})
	pulumi.RegisterOutputType(GetSksNodepoolListNodepoolOutput{})
	pulumi.RegisterOutputType(GetSksNodepoolListNodepoolArrayOutput{})
	pulumi.RegisterOutputType(GetSksNodepoolListNodepoolKubeletImageGcOutput{})
	pulumi.RegisterOutputType(GetSksNodepoolListNodepoolKubeletImageGcArrayOutput{})
	pulumi.RegisterOutputType(GetSosBucketPolicyTimeoutsOutput{})
	pulumi.RegisterOutputType(GetSosBucketPolicyTimeoutsPtrOutput{})
}
