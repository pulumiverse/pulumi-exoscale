// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package exoscale

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-exoscale/sdk/go/exoscale/internal"
)

func GetSksClusterList(ctx *pulumi.Context, args *GetSksClusterListArgs, opts ...pulumi.InvokeOption) (*GetSksClusterListResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSksClusterListResult
	err := ctx.Invoke("exoscale:index/getSksClusterList:getSksClusterList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSksClusterList.
type GetSksClusterListArgs struct {
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	AggregationCa *string `pulumi:"aggregationCa"`
	// Match against this bool
	AutoUpgrade *bool `pulumi:"autoUpgrade"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	Cni *string `pulumi:"cni"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	ControlPlaneCa *string `pulumi:"controlPlaneCa"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	CreatedAt *string `pulumi:"createdAt"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	Description *string `pulumi:"description"`
	// Match against this bool
	EnableKubeProxy *bool `pulumi:"enableKubeProxy"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	Endpoint *string `pulumi:"endpoint"`
	// Match against this bool
	ExoscaleCcm *bool `pulumi:"exoscaleCcm"`
	// Match against this bool
	ExoscaleCsi *bool `pulumi:"exoscaleCsi"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	Id *string `pulumi:"id"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	KubeletCa *string `pulumi:"kubeletCa"`
	// Match against key/values. Keys are matched exactly, while values may be matched as a regex if you supply a string that begins and ends with "/"
	Labels map[string]string `pulumi:"labels"`
	// Match against this bool
	MetricsServer *bool `pulumi:"metricsServer"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	Name *string `pulumi:"name"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	ServiceLevel *string `pulumi:"serviceLevel"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	State *string `pulumi:"state"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	Version *string `pulumi:"version"`
	// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
	Zone string `pulumi:"zone"`
}

// A collection of values returned by getSksClusterList.
type GetSksClusterListResult struct {
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	AggregationCa *string `pulumi:"aggregationCa"`
	// Match against this bool
	AutoUpgrade *bool                      `pulumi:"autoUpgrade"`
	Clusters    []GetSksClusterListCluster `pulumi:"clusters"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	Cni *string `pulumi:"cni"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	ControlPlaneCa *string `pulumi:"controlPlaneCa"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	CreatedAt *string `pulumi:"createdAt"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	Description *string `pulumi:"description"`
	// Match against this bool
	EnableKubeProxy *bool `pulumi:"enableKubeProxy"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	Endpoint *string `pulumi:"endpoint"`
	// Match against this bool
	ExoscaleCcm *bool `pulumi:"exoscaleCcm"`
	// Match against this bool
	ExoscaleCsi *bool `pulumi:"exoscaleCsi"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	Id *string `pulumi:"id"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	KubeletCa *string `pulumi:"kubeletCa"`
	// Match against key/values. Keys are matched exactly, while values may be matched as a regex if you supply a string that begins and ends with "/"
	Labels map[string]string `pulumi:"labels"`
	// Match against this bool
	MetricsServer *bool `pulumi:"metricsServer"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	Name *string `pulumi:"name"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	ServiceLevel *string `pulumi:"serviceLevel"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	State *string `pulumi:"state"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	Version *string `pulumi:"version"`
	// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
	Zone string `pulumi:"zone"`
}

func GetSksClusterListOutput(ctx *pulumi.Context, args GetSksClusterListOutputArgs, opts ...pulumi.InvokeOption) GetSksClusterListResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSksClusterListResultOutput, error) {
			args := v.(GetSksClusterListArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("exoscale:index/getSksClusterList:getSksClusterList", args, GetSksClusterListResultOutput{}, options).(GetSksClusterListResultOutput), nil
		}).(GetSksClusterListResultOutput)
}

// A collection of arguments for invoking getSksClusterList.
type GetSksClusterListOutputArgs struct {
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	AggregationCa pulumi.StringPtrInput `pulumi:"aggregationCa"`
	// Match against this bool
	AutoUpgrade pulumi.BoolPtrInput `pulumi:"autoUpgrade"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	Cni pulumi.StringPtrInput `pulumi:"cni"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	ControlPlaneCa pulumi.StringPtrInput `pulumi:"controlPlaneCa"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Match against this bool
	EnableKubeProxy pulumi.BoolPtrInput `pulumi:"enableKubeProxy"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// Match against this bool
	ExoscaleCcm pulumi.BoolPtrInput `pulumi:"exoscaleCcm"`
	// Match against this bool
	ExoscaleCsi pulumi.BoolPtrInput `pulumi:"exoscaleCsi"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	KubeletCa pulumi.StringPtrInput `pulumi:"kubeletCa"`
	// Match against key/values. Keys are matched exactly, while values may be matched as a regex if you supply a string that begins and ends with "/"
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Match against this bool
	MetricsServer pulumi.BoolPtrInput `pulumi:"metricsServer"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	ServiceLevel pulumi.StringPtrInput `pulumi:"serviceLevel"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
	Version pulumi.StringPtrInput `pulumi:"version"`
	// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetSksClusterListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSksClusterListArgs)(nil)).Elem()
}

// A collection of values returned by getSksClusterList.
type GetSksClusterListResultOutput struct{ *pulumi.OutputState }

func (GetSksClusterListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSksClusterListResult)(nil)).Elem()
}

func (o GetSksClusterListResultOutput) ToGetSksClusterListResultOutput() GetSksClusterListResultOutput {
	return o
}

func (o GetSksClusterListResultOutput) ToGetSksClusterListResultOutputWithContext(ctx context.Context) GetSksClusterListResultOutput {
	return o
}

// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
func (o GetSksClusterListResultOutput) AggregationCa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListResult) *string { return v.AggregationCa }).(pulumi.StringPtrOutput)
}

// Match against this bool
func (o GetSksClusterListResultOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSksClusterListResult) *bool { return v.AutoUpgrade }).(pulumi.BoolPtrOutput)
}

func (o GetSksClusterListResultOutput) Clusters() GetSksClusterListClusterArrayOutput {
	return o.ApplyT(func(v GetSksClusterListResult) []GetSksClusterListCluster { return v.Clusters }).(GetSksClusterListClusterArrayOutput)
}

// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
func (o GetSksClusterListResultOutput) Cni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListResult) *string { return v.Cni }).(pulumi.StringPtrOutput)
}

// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
func (o GetSksClusterListResultOutput) ControlPlaneCa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListResult) *string { return v.ControlPlaneCa }).(pulumi.StringPtrOutput)
}

// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
func (o GetSksClusterListResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
func (o GetSksClusterListResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Match against this bool
func (o GetSksClusterListResultOutput) EnableKubeProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSksClusterListResult) *bool { return v.EnableKubeProxy }).(pulumi.BoolPtrOutput)
}

// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
func (o GetSksClusterListResultOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListResult) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// Match against this bool
func (o GetSksClusterListResultOutput) ExoscaleCcm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSksClusterListResult) *bool { return v.ExoscaleCcm }).(pulumi.BoolPtrOutput)
}

// Match against this bool
func (o GetSksClusterListResultOutput) ExoscaleCsi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSksClusterListResult) *bool { return v.ExoscaleCsi }).(pulumi.BoolPtrOutput)
}

// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
func (o GetSksClusterListResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
func (o GetSksClusterListResultOutput) KubeletCa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListResult) *string { return v.KubeletCa }).(pulumi.StringPtrOutput)
}

// Match against key/values. Keys are matched exactly, while values may be matched as a regex if you supply a string that begins and ends with "/"
func (o GetSksClusterListResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSksClusterListResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Match against this bool
func (o GetSksClusterListResultOutput) MetricsServer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSksClusterListResult) *bool { return v.MetricsServer }).(pulumi.BoolPtrOutput)
}

// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
func (o GetSksClusterListResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
func (o GetSksClusterListResultOutput) ServiceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListResult) *string { return v.ServiceLevel }).(pulumi.StringPtrOutput)
}

// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
func (o GetSksClusterListResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
func (o GetSksClusterListResultOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSksClusterListResult) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
func (o GetSksClusterListResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetSksClusterListResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSksClusterListResultOutput{})
}
