// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
	"github.com/pulumiverse/pulumi-exoscale/sdk/go/exoscale/internal"
)

var _ = internal.GetEnvOrDefault

// Deprecated: Does nothing
func GetDelay(ctx *pulumi.Context) int {
	return config.GetInt(ctx, "exoscale:delay")
}
func GetEnvironment(ctx *pulumi.Context) string {
	return config.Get(ctx, "exoscale:environment")
}

// Exoscale API key
func GetKey(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "exoscale:key")
	if err == nil {
		return v
	}
	var value string
	if d := internal.GetEnvOrDefault(nil, nil, "EXOSCALE_API_KEY"); d != nil {
		value = d.(string)
	}
	return value
}

// Exoscale API secret
func GetSecret(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "exoscale:secret")
	if err == nil {
		return v
	}
	var value string
	if d := internal.GetEnvOrDefault(nil, nil, "EXOSCALE_API_SECRET"); d != nil {
		value = d.(string)
	}
	return value
}
func GetSosEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "exoscale:sosEndpoint")
}

// Timeout in seconds for waiting on compute resources to become available (by default: 3600)
func GetTimeout(ctx *pulumi.Context) int {
	return config.GetInt(ctx, "exoscale:timeout")
}
