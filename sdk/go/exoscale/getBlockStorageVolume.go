// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package exoscale

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-exoscale/sdk/go/exoscale/internal"
)

// Fetch [Exoscale Block Storage](https://community.exoscale.com/product/storage/block-storage/) Volume.
//
// Block Storage offers persistent externally attached volumes for your workloads.
//
// Corresponding resource: exoscale_block_storage_volume.
func LookupBlockStorageVolume(ctx *pulumi.Context, args *LookupBlockStorageVolumeArgs, opts ...pulumi.InvokeOption) (*LookupBlockStorageVolumeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBlockStorageVolumeResult
	err := ctx.Invoke("exoscale:index/getBlockStorageVolume:getBlockStorageVolume", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBlockStorageVolume.
type LookupBlockStorageVolumeArgs struct {
	// Volume ID to match.
	Id       string                         `pulumi:"id"`
	Timeouts *GetBlockStorageVolumeTimeouts `pulumi:"timeouts"`
	// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
	Zone string `pulumi:"zone"`
}

// A collection of values returned by getBlockStorageVolume.
type LookupBlockStorageVolumeResult struct {
	// Volume block size.
	Blocksize int `pulumi:"blocksize"`
	// Volume creation date.
	CreatedAt string `pulumi:"createdAt"`
	// Volume ID to match.
	Id string `pulumi:"id"`
	// Volume attached instance.
	Instance GetBlockStorageVolumeInstance `pulumi:"instance"`
	// Resource labels.
	Labels map[string]string `pulumi:"labels"`
	// Volume name.
	Name string `pulumi:"name"`
	// Volume size in GB.
	Size int `pulumi:"size"`
	// Volume snapshots.
	Snapshots []GetBlockStorageVolumeSnapshotType `pulumi:"snapshots"`
	// Volume state.
	State    string                         `pulumi:"state"`
	Timeouts *GetBlockStorageVolumeTimeouts `pulumi:"timeouts"`
	// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
	Zone string `pulumi:"zone"`
}

func LookupBlockStorageVolumeOutput(ctx *pulumi.Context, args LookupBlockStorageVolumeOutputArgs, opts ...pulumi.InvokeOption) LookupBlockStorageVolumeResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupBlockStorageVolumeResultOutput, error) {
			args := v.(LookupBlockStorageVolumeArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("exoscale:index/getBlockStorageVolume:getBlockStorageVolume", args, LookupBlockStorageVolumeResultOutput{}, options).(LookupBlockStorageVolumeResultOutput), nil
		}).(LookupBlockStorageVolumeResultOutput)
}

// A collection of arguments for invoking getBlockStorageVolume.
type LookupBlockStorageVolumeOutputArgs struct {
	// Volume ID to match.
	Id       pulumi.StringInput                    `pulumi:"id"`
	Timeouts GetBlockStorageVolumeTimeoutsPtrInput `pulumi:"timeouts"`
	// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (LookupBlockStorageVolumeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBlockStorageVolumeArgs)(nil)).Elem()
}

// A collection of values returned by getBlockStorageVolume.
type LookupBlockStorageVolumeResultOutput struct{ *pulumi.OutputState }

func (LookupBlockStorageVolumeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBlockStorageVolumeResult)(nil)).Elem()
}

func (o LookupBlockStorageVolumeResultOutput) ToLookupBlockStorageVolumeResultOutput() LookupBlockStorageVolumeResultOutput {
	return o
}

func (o LookupBlockStorageVolumeResultOutput) ToLookupBlockStorageVolumeResultOutputWithContext(ctx context.Context) LookupBlockStorageVolumeResultOutput {
	return o
}

// Volume block size.
func (o LookupBlockStorageVolumeResultOutput) Blocksize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBlockStorageVolumeResult) int { return v.Blocksize }).(pulumi.IntOutput)
}

// Volume creation date.
func (o LookupBlockStorageVolumeResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockStorageVolumeResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Volume ID to match.
func (o LookupBlockStorageVolumeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockStorageVolumeResult) string { return v.Id }).(pulumi.StringOutput)
}

// Volume attached instance.
func (o LookupBlockStorageVolumeResultOutput) Instance() GetBlockStorageVolumeInstanceOutput {
	return o.ApplyT(func(v LookupBlockStorageVolumeResult) GetBlockStorageVolumeInstance { return v.Instance }).(GetBlockStorageVolumeInstanceOutput)
}

// Resource labels.
func (o LookupBlockStorageVolumeResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBlockStorageVolumeResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Volume name.
func (o LookupBlockStorageVolumeResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockStorageVolumeResult) string { return v.Name }).(pulumi.StringOutput)
}

// Volume size in GB.
func (o LookupBlockStorageVolumeResultOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBlockStorageVolumeResult) int { return v.Size }).(pulumi.IntOutput)
}

// Volume snapshots.
func (o LookupBlockStorageVolumeResultOutput) Snapshots() GetBlockStorageVolumeSnapshotTypeArrayOutput {
	return o.ApplyT(func(v LookupBlockStorageVolumeResult) []GetBlockStorageVolumeSnapshotType { return v.Snapshots }).(GetBlockStorageVolumeSnapshotTypeArrayOutput)
}

// Volume state.
func (o LookupBlockStorageVolumeResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockStorageVolumeResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupBlockStorageVolumeResultOutput) Timeouts() GetBlockStorageVolumeTimeoutsPtrOutput {
	return o.ApplyT(func(v LookupBlockStorageVolumeResult) *GetBlockStorageVolumeTimeouts { return v.Timeouts }).(GetBlockStorageVolumeTimeoutsPtrOutput)
}

// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
func (o LookupBlockStorageVolumeResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockStorageVolumeResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBlockStorageVolumeResultOutput{})
}
