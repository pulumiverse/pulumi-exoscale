// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package exoscale

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-exoscale/sdk/go/exoscale/internal"
)

// Fetch [Exoscale Block Storage](https://community.exoscale.com/product/storage/block-storage/) Snapshot.
//
// Block Storage offers persistent externally attached volumes for your workloads.
//
// Corresponding resource: exoscale_block_storage_snapshot.
func LookupBlockStorageVolumeSnapshot(ctx *pulumi.Context, args *LookupBlockStorageVolumeSnapshotArgs, opts ...pulumi.InvokeOption) (*LookupBlockStorageVolumeSnapshotResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBlockStorageVolumeSnapshotResult
	err := ctx.Invoke("exoscale:index/getBlockStorageVolumeSnapshot:getBlockStorageVolumeSnapshot", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBlockStorageVolumeSnapshot.
type LookupBlockStorageVolumeSnapshotArgs struct {
	// Snapshot ID to match.
	Id       string                                 `pulumi:"id"`
	Timeouts *GetBlockStorageVolumeSnapshotTimeouts `pulumi:"timeouts"`
	// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
	Zone string `pulumi:"zone"`
}

// A collection of values returned by getBlockStorageVolumeSnapshot.
type LookupBlockStorageVolumeSnapshotResult struct {
	// Snapshot creation date.
	CreatedAt string `pulumi:"createdAt"`
	// Snapshot ID to match.
	Id string `pulumi:"id"`
	// Labels.
	Labels map[string]string `pulumi:"labels"`
	// Snapshot name.
	Name string `pulumi:"name"`
	// Snapshot size in GB.
	Size int `pulumi:"size"`
	// Snapshot state.
	State    string                                 `pulumi:"state"`
	Timeouts *GetBlockStorageVolumeSnapshotTimeouts `pulumi:"timeouts"`
	// Block Storage Volume.
	Volume GetBlockStorageVolumeSnapshotVolume `pulumi:"volume"`
	// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
	Zone string `pulumi:"zone"`
}

func LookupBlockStorageVolumeSnapshotOutput(ctx *pulumi.Context, args LookupBlockStorageVolumeSnapshotOutputArgs, opts ...pulumi.InvokeOption) LookupBlockStorageVolumeSnapshotResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupBlockStorageVolumeSnapshotResultOutput, error) {
			args := v.(LookupBlockStorageVolumeSnapshotArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("exoscale:index/getBlockStorageVolumeSnapshot:getBlockStorageVolumeSnapshot", args, LookupBlockStorageVolumeSnapshotResultOutput{}, options).(LookupBlockStorageVolumeSnapshotResultOutput), nil
		}).(LookupBlockStorageVolumeSnapshotResultOutput)
}

// A collection of arguments for invoking getBlockStorageVolumeSnapshot.
type LookupBlockStorageVolumeSnapshotOutputArgs struct {
	// Snapshot ID to match.
	Id       pulumi.StringInput                            `pulumi:"id"`
	Timeouts GetBlockStorageVolumeSnapshotTimeoutsPtrInput `pulumi:"timeouts"`
	// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (LookupBlockStorageVolumeSnapshotOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBlockStorageVolumeSnapshotArgs)(nil)).Elem()
}

// A collection of values returned by getBlockStorageVolumeSnapshot.
type LookupBlockStorageVolumeSnapshotResultOutput struct{ *pulumi.OutputState }

func (LookupBlockStorageVolumeSnapshotResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBlockStorageVolumeSnapshotResult)(nil)).Elem()
}

func (o LookupBlockStorageVolumeSnapshotResultOutput) ToLookupBlockStorageVolumeSnapshotResultOutput() LookupBlockStorageVolumeSnapshotResultOutput {
	return o
}

func (o LookupBlockStorageVolumeSnapshotResultOutput) ToLookupBlockStorageVolumeSnapshotResultOutputWithContext(ctx context.Context) LookupBlockStorageVolumeSnapshotResultOutput {
	return o
}

// Snapshot creation date.
func (o LookupBlockStorageVolumeSnapshotResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockStorageVolumeSnapshotResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Snapshot ID to match.
func (o LookupBlockStorageVolumeSnapshotResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockStorageVolumeSnapshotResult) string { return v.Id }).(pulumi.StringOutput)
}

// Labels.
func (o LookupBlockStorageVolumeSnapshotResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBlockStorageVolumeSnapshotResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Snapshot name.
func (o LookupBlockStorageVolumeSnapshotResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockStorageVolumeSnapshotResult) string { return v.Name }).(pulumi.StringOutput)
}

// Snapshot size in GB.
func (o LookupBlockStorageVolumeSnapshotResultOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBlockStorageVolumeSnapshotResult) int { return v.Size }).(pulumi.IntOutput)
}

// Snapshot state.
func (o LookupBlockStorageVolumeSnapshotResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockStorageVolumeSnapshotResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupBlockStorageVolumeSnapshotResultOutput) Timeouts() GetBlockStorageVolumeSnapshotTimeoutsPtrOutput {
	return o.ApplyT(func(v LookupBlockStorageVolumeSnapshotResult) *GetBlockStorageVolumeSnapshotTimeouts {
		return v.Timeouts
	}).(GetBlockStorageVolumeSnapshotTimeoutsPtrOutput)
}

// Block Storage Volume.
func (o LookupBlockStorageVolumeSnapshotResultOutput) Volume() GetBlockStorageVolumeSnapshotVolumeOutput {
	return o.ApplyT(func(v LookupBlockStorageVolumeSnapshotResult) GetBlockStorageVolumeSnapshotVolume { return v.Volume }).(GetBlockStorageVolumeSnapshotVolumeOutput)
}

// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
func (o LookupBlockStorageVolumeSnapshotResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockStorageVolumeSnapshotResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBlockStorageVolumeSnapshotResultOutput{})
}
