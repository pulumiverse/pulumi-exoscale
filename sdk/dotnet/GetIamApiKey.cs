// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Exoscale
{
    public static class GetIamApiKey
    {
        /// <summary>
        /// Fetch Exoscale [IAM](https://community.exoscale.com/documentation/iam/) API Key.
        /// 
        /// Corresponding resource: exoscale_iam_role.
        /// </summary>
        public static Task<GetIamApiKeyResult> InvokeAsync(GetIamApiKeyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIamApiKeyResult>("exoscale:index/getIamApiKey:getIamApiKey", args ?? new GetIamApiKeyArgs(), options.WithDefaults());

        /// <summary>
        /// Fetch Exoscale [IAM](https://community.exoscale.com/documentation/iam/) API Key.
        /// 
        /// Corresponding resource: exoscale_iam_role.
        /// </summary>
        public static Output<GetIamApiKeyResult> Invoke(GetIamApiKeyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIamApiKeyResult>("exoscale:index/getIamApiKey:getIamApiKey", args ?? new GetIamApiKeyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Fetch Exoscale [IAM](https://community.exoscale.com/documentation/iam/) API Key.
        /// 
        /// Corresponding resource: exoscale_iam_role.
        /// </summary>
        public static Output<GetIamApiKeyResult> Invoke(GetIamApiKeyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetIamApiKeyResult>("exoscale:index/getIamApiKey:getIamApiKey", args ?? new GetIamApiKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIamApiKeyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The IAM API Key to match.
        /// </summary>
        [Input("key", required: true)]
        public string Key { get; set; } = null!;

        [Input("timeouts")]
        public Inputs.GetIamApiKeyTimeoutsArgs? Timeouts { get; set; }

        public GetIamApiKeyArgs()
        {
        }
        public static new GetIamApiKeyArgs Empty => new GetIamApiKeyArgs();
    }

    public sealed class GetIamApiKeyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The IAM API Key to match.
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        [Input("timeouts")]
        public Input<Inputs.GetIamApiKeyTimeoutsInputArgs>? Timeouts { get; set; }

        public GetIamApiKeyInvokeArgs()
        {
        }
        public static new GetIamApiKeyInvokeArgs Empty => new GetIamApiKeyInvokeArgs();
    }


    [OutputType]
    public sealed class GetIamApiKeyResult
    {
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The IAM API Key to match.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// IAM API Key name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// IAM API Key role ID.
        /// </summary>
        public readonly string RoleId;
        public readonly Outputs.GetIamApiKeyTimeoutsResult? Timeouts;

        [OutputConstructor]
        private GetIamApiKeyResult(
            string id,

            string key,

            string name,

            string roleId,

            Outputs.GetIamApiKeyTimeoutsResult? timeouts)
        {
            Id = id;
            Key = key;
            Name = name;
            RoleId = roleId;
            Timeouts = timeouts;
        }
    }
}
