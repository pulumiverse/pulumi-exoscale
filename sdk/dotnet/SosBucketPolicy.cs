// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Exoscale
{
    /// <summary>
    /// Manage Exoscale [SOS Bucket Policies](https://community.exoscale.com/product/storage/object-storage/how-to/bucketpolicy/).
    /// </summary>
    [ExoscaleResourceType("exoscale:index/sosBucketPolicy:SosBucketPolicy")]
    public partial class SosBucketPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ❗ The name of the bucket to which the policy is to be applied.
        /// </summary>
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        /// <summary>
        /// The content of the policy
        /// </summary>
        [Output("policy")]
        public Output<string> Policy { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.SosBucketPolicyTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a SosBucketPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SosBucketPolicy(string name, SosBucketPolicyArgs args, CustomResourceOptions? options = null)
            : base("exoscale:index/sosBucketPolicy:SosBucketPolicy", name, args ?? new SosBucketPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SosBucketPolicy(string name, Input<string> id, SosBucketPolicyState? state = null, CustomResourceOptions? options = null)
            : base("exoscale:index/sosBucketPolicy:SosBucketPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-exoscale",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SosBucketPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SosBucketPolicy Get(string name, Input<string> id, SosBucketPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new SosBucketPolicy(name, id, state, options);
        }
    }

    public sealed class SosBucketPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ❗ The name of the bucket to which the policy is to be applied.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// The content of the policy
        /// </summary>
        [Input("policy", required: true)]
        public Input<string> Policy { get; set; } = null!;

        [Input("timeouts")]
        public Input<Inputs.SosBucketPolicyTimeoutsArgs>? Timeouts { get; set; }

        /// <summary>
        /// ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
        /// </summary>
        [Input("zone", required: true)]
        public Input<string> Zone { get; set; } = null!;

        public SosBucketPolicyArgs()
        {
        }
        public static new SosBucketPolicyArgs Empty => new SosBucketPolicyArgs();
    }

    public sealed class SosBucketPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ❗ The name of the bucket to which the policy is to be applied.
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        /// <summary>
        /// The content of the policy
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        [Input("timeouts")]
        public Input<Inputs.SosBucketPolicyTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public SosBucketPolicyState()
        {
        }
        public static new SosBucketPolicyState Empty => new SosBucketPolicyState();
    }
}
