// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Exoscale
{
    /// <summary>
    /// Manage service users for MySQL Exoscale [Database Services (DBaaS)](https://community.exoscale.com/documentation/dbaas/).
    /// </summary>
    [ExoscaleResourceType("exoscale:index/dbaasMysqlUser:DbaasMysqlUser")]
    public partial class DbaasMysqlUser : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ❗ Authentication details. The possible values are `Null`, `CachingSha2Password` and `MysqlNativePassword`.
        /// </summary>
        [Output("authentication")]
        public Output<string> Authentication { get; private set; } = null!;

        /// <summary>
        /// The password of the service user.
        /// </summary>
        [Output("password")]
        public Output<string> Password { get; private set; } = null!;

        /// <summary>
        /// ❗ The name of the database service.
        /// </summary>
        [Output("service")]
        public Output<string> Service { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.DbaasMysqlUserTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// The type of the service user.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// ❗ The name of the user for this service.
        /// </summary>
        [Output("username")]
        public Output<string> Username { get; private set; } = null!;

        /// <summary>
        /// ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a DbaasMysqlUser resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DbaasMysqlUser(string name, DbaasMysqlUserArgs args, CustomResourceOptions? options = null)
            : base("exoscale:index/dbaasMysqlUser:DbaasMysqlUser", name, args ?? new DbaasMysqlUserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DbaasMysqlUser(string name, Input<string> id, DbaasMysqlUserState? state = null, CustomResourceOptions? options = null)
            : base("exoscale:index/dbaasMysqlUser:DbaasMysqlUser", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-exoscale",
                AdditionalSecretOutputs =
                {
                    "password",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DbaasMysqlUser resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DbaasMysqlUser Get(string name, Input<string> id, DbaasMysqlUserState? state = null, CustomResourceOptions? options = null)
        {
            return new DbaasMysqlUser(name, id, state, options);
        }
    }

    public sealed class DbaasMysqlUserArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ❗ Authentication details. The possible values are `Null`, `CachingSha2Password` and `MysqlNativePassword`.
        /// </summary>
        [Input("authentication")]
        public Input<string>? Authentication { get; set; }

        /// <summary>
        /// ❗ The name of the database service.
        /// </summary>
        [Input("service", required: true)]
        public Input<string> Service { get; set; } = null!;

        [Input("timeouts")]
        public Input<Inputs.DbaasMysqlUserTimeoutsArgs>? Timeouts { get; set; }

        /// <summary>
        /// ❗ The name of the user for this service.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        /// <summary>
        /// ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
        /// </summary>
        [Input("zone", required: true)]
        public Input<string> Zone { get; set; } = null!;

        public DbaasMysqlUserArgs()
        {
        }
        public static new DbaasMysqlUserArgs Empty => new DbaasMysqlUserArgs();
    }

    public sealed class DbaasMysqlUserState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ❗ Authentication details. The possible values are `Null`, `CachingSha2Password` and `MysqlNativePassword`.
        /// </summary>
        [Input("authentication")]
        public Input<string>? Authentication { get; set; }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// The password of the service user.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// ❗ The name of the database service.
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        [Input("timeouts")]
        public Input<Inputs.DbaasMysqlUserTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// The type of the service user.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// ❗ The name of the user for this service.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        /// <summary>
        /// ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public DbaasMysqlUserState()
        {
        }
        public static new DbaasMysqlUserState Empty => new DbaasMysqlUserState();
    }
}
