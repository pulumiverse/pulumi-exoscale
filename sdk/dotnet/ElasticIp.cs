// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Exoscale
{
    /// <summary>
    /// Manage Exoscale [Elastic IPs (EIP)](https://community.exoscale.com/product/networking/eip/).
    /// 
    /// Corresponding data source: exoscale_elastic_ip.
    /// 
    /// ## Example Usage
    /// 
    /// *Unmanaged* EIPv4:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Exoscale = Pulumiverse.Exoscale;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myElasticIp = new Exoscale.ElasticIp("myElasticIp", new()
    ///     {
    ///         Zone = "ch-gva-2",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// *Managed* EIPv6:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Exoscale = Pulumiverse.Exoscale;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myManagedElasticIp = new Exoscale.ElasticIp("myManagedElasticIp", new()
    ///     {
    ///         AddressFamily = "inet6",
    ///         Healthcheck = new Exoscale.Inputs.ElasticIpHealthcheckArgs
    ///         {
    ///             Interval = 5,
    ///             Mode = "https",
    ///             Port = 443,
    ///             StrikesFail = 3,
    ///             StrikesOk = 2,
    ///             Timeout = 3,
    ///             TlsSni = "example.net",
    ///             Uri = "/health",
    ///         },
    ///         ReverseDns = "example.net",
    ///         Zone = "ch-gva-2",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// Please refer to the examples
    /// directory for complete configuration examples.
    /// 
    /// ## Import
    /// 
    /// An existing Elastic IP (EIP) may be imported by `&lt;ID&gt;@&lt;zone&gt;`:
    /// 
    /// ```sh
    /// $ pulumi import exoscale:index/elasticIp:ElasticIp \ 
    /// ```
    /// 
    ///   exoscale_elastic_ip.my_elastic_ip \
    /// 
    ///   f81d4fae-7dec-11d0-a765-00a0c91e6bf6@ch-gva-2
    /// </summary>
    [ExoscaleResourceType("exoscale:index/elasticIp:ElasticIp")]
    public partial class ElasticIp : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ❗ The Elastic IP (EIP) address family (`inet4` or `inet6`; default: `inet4`).
        /// </summary>
        [Output("addressFamily")]
        public Output<string> AddressFamily { get; private set; } = null!;

        /// <summary>
        /// The Elastic IP (EIP) CIDR.
        /// </summary>
        [Output("cidr")]
        public Output<string> Cidr { get; private set; } = null!;

        /// <summary>
        /// A free-form text describing the Elastic IP (EIP).
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Healthcheck configuration for *managed* EIPs. It can not be added to an existing *Unmanaged* EIP.
        /// </summary>
        [Output("healthcheck")]
        public Output<Outputs.ElasticIpHealthcheck> Healthcheck { get; private set; } = null!;

        /// <summary>
        /// The Elastic IP (EIP) IPv4 or IPv6 address.
        /// </summary>
        [Output("ipAddress")]
        public Output<string> IpAddress { get; private set; } = null!;

        /// <summary>
        /// A map of key/value labels.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// Domain name for reverse DNS record.
        /// </summary>
        [Output("reverseDns")]
        public Output<string?> ReverseDns { get; private set; } = null!;

        /// <summary>
        /// ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a ElasticIp resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ElasticIp(string name, ElasticIpArgs args, CustomResourceOptions? options = null)
            : base("exoscale:index/elasticIp:ElasticIp", name, args ?? new ElasticIpArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ElasticIp(string name, Input<string> id, ElasticIpState? state = null, CustomResourceOptions? options = null)
            : base("exoscale:index/elasticIp:ElasticIp", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-exoscale",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ElasticIp resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ElasticIp Get(string name, Input<string> id, ElasticIpState? state = null, CustomResourceOptions? options = null)
        {
            return new ElasticIp(name, id, state, options);
        }
    }

    public sealed class ElasticIpArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ❗ The Elastic IP (EIP) address family (`inet4` or `inet6`; default: `inet4`).
        /// </summary>
        [Input("addressFamily")]
        public Input<string>? AddressFamily { get; set; }

        /// <summary>
        /// A free-form text describing the Elastic IP (EIP).
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Healthcheck configuration for *managed* EIPs. It can not be added to an existing *Unmanaged* EIP.
        /// </summary>
        [Input("healthcheck")]
        public Input<Inputs.ElasticIpHealthcheckArgs>? Healthcheck { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A map of key/value labels.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Domain name for reverse DNS record.
        /// </summary>
        [Input("reverseDns")]
        public Input<string>? ReverseDns { get; set; }

        /// <summary>
        /// ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
        /// </summary>
        [Input("zone", required: true)]
        public Input<string> Zone { get; set; } = null!;

        public ElasticIpArgs()
        {
        }
        public static new ElasticIpArgs Empty => new ElasticIpArgs();
    }

    public sealed class ElasticIpState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ❗ The Elastic IP (EIP) address family (`inet4` or `inet6`; default: `inet4`).
        /// </summary>
        [Input("addressFamily")]
        public Input<string>? AddressFamily { get; set; }

        /// <summary>
        /// The Elastic IP (EIP) CIDR.
        /// </summary>
        [Input("cidr")]
        public Input<string>? Cidr { get; set; }

        /// <summary>
        /// A free-form text describing the Elastic IP (EIP).
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Healthcheck configuration for *managed* EIPs. It can not be added to an existing *Unmanaged* EIP.
        /// </summary>
        [Input("healthcheck")]
        public Input<Inputs.ElasticIpHealthcheckGetArgs>? Healthcheck { get; set; }

        /// <summary>
        /// The Elastic IP (EIP) IPv4 or IPv6 address.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A map of key/value labels.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Domain name for reverse DNS record.
        /// </summary>
        [Input("reverseDns")]
        public Input<string>? ReverseDns { get; set; }

        /// <summary>
        /// ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public ElasticIpState()
        {
        }
        public static new ElasticIpState Empty => new ElasticIpState();
    }
}
