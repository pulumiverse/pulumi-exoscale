// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Exoscale
{
    /// <summary>
    /// Manage Exoscale [Private Networks](https://community.exoscale.com/product/networking/private-network/).
    /// 
    /// Corresponding data source: exoscale_private_network.
    /// 
    /// ## Example Usage
    /// 
    /// *Unmanaged* private network:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Exoscale = Pulumiverse.Exoscale;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myPrivateNetwork = new Exoscale.PrivateNetwork("my_private_network", new()
    ///     {
    ///         Zone = "ch-gva-2",
    ///         Name = "my-private-network",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// *Managed* private network:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Exoscale = Pulumiverse.Exoscale;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myManagedPrivateNetwork = new Exoscale.PrivateNetwork("my_managed_private_network", new()
    ///     {
    ///         Zone = "ch-gva-2",
    ///         Name = "my-managed-private-network",
    ///         Netmask = "255.255.255.0",
    ///         StartIp = "10.0.0.20",
    ///         EndIp = "10.0.0.253",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// Please refer to the examples
    /// directory for complete configuration examples.
    /// 
    /// ## Import
    /// 
    /// An existing private network may be imported by `&lt;ID&gt;@&lt;zone&gt;`:
    /// 
    /// ```sh
    /// $ pulumi import exoscale:index/privateNetwork:PrivateNetwork \ 
    /// ```
    /// 
    ///   exoscale_private_network.my_private_network \
    /// 
    ///   f81d4fae-7dec-11d0-a765-00a0c91e6bf6@ch-gva-2
    /// </summary>
    [ExoscaleResourceType("exoscale:index/privateNetwork:PrivateNetwork")]
    public partial class PrivateNetwork : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A free-form text describing the network.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// (For managed Privnets) The first/last IPv4 addresses used by the DHCP service for dynamic leases.
        /// </summary>
        [Output("endIp")]
        public Output<string?> EndIp { get; private set; } = null!;

        /// <summary>
        /// A map of key/value labels.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// The private network name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// (For managed Privnets) The network mask defining the IPv4 network allowed for static leases.
        /// </summary>
        [Output("netmask")]
        public Output<string?> Netmask { get; private set; } = null!;

        /// <summary>
        /// (For managed Privnets) The first/last IPv4 addresses used by the DHCP service for dynamic leases.
        /// </summary>
        [Output("startIp")]
        public Output<string?> StartIp { get; private set; } = null!;

        /// <summary>
        /// ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a PrivateNetwork resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PrivateNetwork(string name, PrivateNetworkArgs args, CustomResourceOptions? options = null)
            : base("exoscale:index/privateNetwork:PrivateNetwork", name, args ?? new PrivateNetworkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PrivateNetwork(string name, Input<string> id, PrivateNetworkState? state = null, CustomResourceOptions? options = null)
            : base("exoscale:index/privateNetwork:PrivateNetwork", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-exoscale",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PrivateNetwork resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PrivateNetwork Get(string name, Input<string> id, PrivateNetworkState? state = null, CustomResourceOptions? options = null)
        {
            return new PrivateNetwork(name, id, state, options);
        }
    }

    public sealed class PrivateNetworkArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A free-form text describing the network.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (For managed Privnets) The first/last IPv4 addresses used by the DHCP service for dynamic leases.
        /// </summary>
        [Input("endIp")]
        public Input<string>? EndIp { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A map of key/value labels.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The private network name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (For managed Privnets) The network mask defining the IPv4 network allowed for static leases.
        /// </summary>
        [Input("netmask")]
        public Input<string>? Netmask { get; set; }

        /// <summary>
        /// (For managed Privnets) The first/last IPv4 addresses used by the DHCP service for dynamic leases.
        /// </summary>
        [Input("startIp")]
        public Input<string>? StartIp { get; set; }

        /// <summary>
        /// ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
        /// </summary>
        [Input("zone", required: true)]
        public Input<string> Zone { get; set; } = null!;

        public PrivateNetworkArgs()
        {
        }
        public static new PrivateNetworkArgs Empty => new PrivateNetworkArgs();
    }

    public sealed class PrivateNetworkState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A free-form text describing the network.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (For managed Privnets) The first/last IPv4 addresses used by the DHCP service for dynamic leases.
        /// </summary>
        [Input("endIp")]
        public Input<string>? EndIp { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A map of key/value labels.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The private network name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (For managed Privnets) The network mask defining the IPv4 network allowed for static leases.
        /// </summary>
        [Input("netmask")]
        public Input<string>? Netmask { get; set; }

        /// <summary>
        /// (For managed Privnets) The first/last IPv4 addresses used by the DHCP service for dynamic leases.
        /// </summary>
        [Input("startIp")]
        public Input<string>? StartIp { get; set; }

        /// <summary>
        /// ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public PrivateNetworkState()
        {
        }
        public static new PrivateNetworkState Empty => new PrivateNetworkState();
    }
}
