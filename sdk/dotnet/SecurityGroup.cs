// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Exoscale
{
    /// <summary>
    /// Manage Exoscale [Security Groups](https://community.exoscale.com/product/networking/security-group/).
    /// 
    /// Corresponding data source: exoscale_security_group.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Exoscale = Pulumiverse.Exoscale;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var mySecurityGroup = new Exoscale.SecurityGroup("my_security_group", new()
    ///     {
    ///         Name = "my-security-group",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// Next step is to attach exoscale_security_group_rule(s) to the group.
    /// 
    /// Please refer to the examples
    /// directory for complete configuration examples.
    /// 
    /// ## Import
    /// 
    /// An existing security group may be imported by `&lt;ID&gt;`:
    /// 
    /// ```sh
    /// $ pulumi import exoscale:index/securityGroup:SecurityGroup \ 
    /// ```
    /// 
    ///   exoscale_security_group.my_security_group \
    /// 
    ///   f81d4fae-7dec-11d0-a765-00a0c91e6bf6
    /// </summary>
    [ExoscaleResourceType("exoscale:index/securityGroup:SecurityGroup")]
    public partial class SecurityGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ❗ A free-form text describing the group.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// A list of external network sources, in [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation) notation.
        /// </summary>
        [Output("externalSources")]
        public Output<ImmutableArray<string>> ExternalSources { get; private set; } = null!;

        /// <summary>
        /// ❗ The security group name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a SecurityGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SecurityGroup(string name, SecurityGroupArgs? args = null, CustomResourceOptions? options = null)
            : base("exoscale:index/securityGroup:SecurityGroup", name, args ?? new SecurityGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SecurityGroup(string name, Input<string> id, SecurityGroupState? state = null, CustomResourceOptions? options = null)
            : base("exoscale:index/securityGroup:SecurityGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-exoscale",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SecurityGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SecurityGroup Get(string name, Input<string> id, SecurityGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new SecurityGroup(name, id, state, options);
        }
    }

    public sealed class SecurityGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ❗ A free-form text describing the group.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("externalSources")]
        private InputList<string>? _externalSources;

        /// <summary>
        /// A list of external network sources, in [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation) notation.
        /// </summary>
        public InputList<string> ExternalSources
        {
            get => _externalSources ?? (_externalSources = new InputList<string>());
            set => _externalSources = value;
        }

        /// <summary>
        /// ❗ The security group name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public SecurityGroupArgs()
        {
        }
        public static new SecurityGroupArgs Empty => new SecurityGroupArgs();
    }

    public sealed class SecurityGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ❗ A free-form text describing the group.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("externalSources")]
        private InputList<string>? _externalSources;

        /// <summary>
        /// A list of external network sources, in [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation) notation.
        /// </summary>
        public InputList<string> ExternalSources
        {
            get => _externalSources ?? (_externalSources = new InputList<string>());
            set => _externalSources = value;
        }

        /// <summary>
        /// ❗ The security group name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public SecurityGroupState()
        {
        }
        public static new SecurityGroupState Empty => new SecurityGroupState();
    }
}
