// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Exoscale.Inputs
{

    public sealed class ElasticIpHealthcheckGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The healthcheck interval (seconds; must be between `5` and `300`; default: `10`).
        /// </summary>
        [Input("interval")]
        public Input<int>? Interval { get; set; }

        /// <summary>
        /// The healthcheck mode (`tcp`, `http` or `https`; may only be set at creation time).
        /// </summary>
        [Input("mode", required: true)]
        public Input<string> Mode { get; set; } = null!;

        /// <summary>
        /// The healthcheck target port (must be between `1` and `65535`).
        /// </summary>
        [Input("port", required: true)]
        public Input<int> Port { get; set; } = null!;

        /// <summary>
        /// The number of failed healthcheck attempts before considering the target unhealthy (must be between `1` and `20`; default: `2`).
        /// </summary>
        [Input("strikesFail")]
        public Input<int>? StrikesFail { get; set; }

        /// <summary>
        /// The number of successful healthcheck attempts before considering the target healthy (must be between `1` and `20`; default: `3`).
        /// </summary>
        [Input("strikesOk")]
        public Input<int>? StrikesOk { get; set; }

        /// <summary>
        /// The time before considering a healthcheck probing failed (seconds; must be between `2` and `60`; default: `3`).
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        /// <summary>
        /// Disable TLS certificate verification for healthcheck in `https` mode (boolean; default: `false`).
        /// </summary>
        [Input("tlsSkipVerify")]
        public Input<bool>? TlsSkipVerify { get; set; }

        /// <summary>
        /// The healthcheck server name to present with SNI in `https` mode.
        /// </summary>
        [Input("tlsSni")]
        public Input<string>? TlsSni { get; set; }

        /// <summary>
        /// The healthcheck target URI (required in `http(s)` modes).
        /// </summary>
        [Input("uri")]
        public Input<string>? Uri { get; set; }

        public ElasticIpHealthcheckGetArgs()
        {
        }
        public static new ElasticIpHealthcheckGetArgs Empty => new ElasticIpHealthcheckGetArgs();
    }
}
