// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Exoscale.Inputs
{

    public sealed class GetSksClusterAuditInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("bearerToken")]
        private Input<string>? _bearerToken;

        /// <summary>
        /// The optional bearer token to include in the request header
        /// </summary>
        public Input<string>? BearerToken
        {
            get => _bearerToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _bearerToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Whether to run the APIServer with the configured Kubernetes Audit
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The cluster API endpoint.
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// The Initial Backoff to wait before sending data to the remote server (default '10s')
        /// </summary>
        [Input("initialBackoff")]
        public Input<string>? InitialBackoff { get; set; }

        public GetSksClusterAuditInputArgs()
        {
        }
        public static new GetSksClusterAuditInputArgs Empty => new GetSksClusterAuditInputArgs();
    }
}
