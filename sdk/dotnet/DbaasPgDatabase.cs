// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Exoscale
{
    /// <summary>
    /// ❗ Manage service database for a PostgreSQL Exoscale [Database Services (DBaaS)](https://community.exoscale.com/documentation/dbaas/).
    /// </summary>
    [ExoscaleResourceType("exoscale:index/dbaasPgDatabase:DbaasPgDatabase")]
    public partial class DbaasPgDatabase : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ❗ The name of the database for this service.
        /// </summary>
        [Output("databaseName")]
        public Output<string> DatabaseName { get; private set; } = null!;

        /// <summary>
        /// Default string sort order (LC_COLLATE) for PostgreSQL database
        /// </summary>
        [Output("lcCollate")]
        public Output<string?> LcCollate { get; private set; } = null!;

        /// <summary>
        /// Default character classification (LC_CTYPE) for PostgreSQL database
        /// </summary>
        [Output("lcCtype")]
        public Output<string?> LcCtype { get; private set; } = null!;

        /// <summary>
        /// ❗ The name of the database service.
        /// </summary>
        [Output("service")]
        public Output<string> Service { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.DbaasPgDatabaseTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a DbaasPgDatabase resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DbaasPgDatabase(string name, DbaasPgDatabaseArgs args, CustomResourceOptions? options = null)
            : base("exoscale:index/dbaasPgDatabase:DbaasPgDatabase", name, args ?? new DbaasPgDatabaseArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DbaasPgDatabase(string name, Input<string> id, DbaasPgDatabaseState? state = null, CustomResourceOptions? options = null)
            : base("exoscale:index/dbaasPgDatabase:DbaasPgDatabase", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-exoscale",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DbaasPgDatabase resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DbaasPgDatabase Get(string name, Input<string> id, DbaasPgDatabaseState? state = null, CustomResourceOptions? options = null)
        {
            return new DbaasPgDatabase(name, id, state, options);
        }
    }

    public sealed class DbaasPgDatabaseArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ❗ The name of the database for this service.
        /// </summary>
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        /// <summary>
        /// Default string sort order (LC_COLLATE) for PostgreSQL database
        /// </summary>
        [Input("lcCollate")]
        public Input<string>? LcCollate { get; set; }

        /// <summary>
        /// Default character classification (LC_CTYPE) for PostgreSQL database
        /// </summary>
        [Input("lcCtype")]
        public Input<string>? LcCtype { get; set; }

        /// <summary>
        /// ❗ The name of the database service.
        /// </summary>
        [Input("service", required: true)]
        public Input<string> Service { get; set; } = null!;

        [Input("timeouts")]
        public Input<Inputs.DbaasPgDatabaseTimeoutsArgs>? Timeouts { get; set; }

        /// <summary>
        /// ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
        /// </summary>
        [Input("zone", required: true)]
        public Input<string> Zone { get; set; } = null!;

        public DbaasPgDatabaseArgs()
        {
        }
        public static new DbaasPgDatabaseArgs Empty => new DbaasPgDatabaseArgs();
    }

    public sealed class DbaasPgDatabaseState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ❗ The name of the database for this service.
        /// </summary>
        [Input("databaseName")]
        public Input<string>? DatabaseName { get; set; }

        /// <summary>
        /// Default string sort order (LC_COLLATE) for PostgreSQL database
        /// </summary>
        [Input("lcCollate")]
        public Input<string>? LcCollate { get; set; }

        /// <summary>
        /// Default character classification (LC_CTYPE) for PostgreSQL database
        /// </summary>
        [Input("lcCtype")]
        public Input<string>? LcCtype { get; set; }

        /// <summary>
        /// ❗ The name of the database service.
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        [Input("timeouts")]
        public Input<Inputs.DbaasPgDatabaseTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// ❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public DbaasPgDatabaseState()
        {
        }
        public static new DbaasPgDatabaseState Empty => new DbaasPgDatabaseState();
    }
}
