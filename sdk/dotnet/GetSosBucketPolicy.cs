// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Exoscale
{
    public static class GetSosBucketPolicy
    {
        /// <summary>
        /// Fetch Exoscale [SOS Bucket Policies](https://community.exoscale.com/product/storage/object-storage/how-to/bucketpolicy/).
        /// </summary>
        public static Task<GetSosBucketPolicyResult> InvokeAsync(GetSosBucketPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSosBucketPolicyResult>("exoscale:index/getSosBucketPolicy:getSosBucketPolicy", args ?? new GetSosBucketPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Fetch Exoscale [SOS Bucket Policies](https://community.exoscale.com/product/storage/object-storage/how-to/bucketpolicy/).
        /// </summary>
        public static Output<GetSosBucketPolicyResult> Invoke(GetSosBucketPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSosBucketPolicyResult>("exoscale:index/getSosBucketPolicy:getSosBucketPolicy", args ?? new GetSosBucketPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Fetch Exoscale [SOS Bucket Policies](https://community.exoscale.com/product/storage/object-storage/how-to/bucketpolicy/).
        /// </summary>
        public static Output<GetSosBucketPolicyResult> Invoke(GetSosBucketPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSosBucketPolicyResult>("exoscale:index/getSosBucketPolicy:getSosBucketPolicy", args ?? new GetSosBucketPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSosBucketPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the bucket to which the policy is to be applied.
        /// </summary>
        [Input("bucket", required: true)]
        public string Bucket { get; set; } = null!;

        [Input("timeouts")]
        public Inputs.GetSosBucketPolicyTimeoutsArgs? Timeouts { get; set; }

        /// <summary>
        /// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
        /// </summary>
        [Input("zone", required: true)]
        public string Zone { get; set; } = null!;

        public GetSosBucketPolicyArgs()
        {
        }
        public static new GetSosBucketPolicyArgs Empty => new GetSosBucketPolicyArgs();
    }

    public sealed class GetSosBucketPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the bucket to which the policy is to be applied.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("timeouts")]
        public Input<Inputs.GetSosBucketPolicyTimeoutsInputArgs>? Timeouts { get; set; }

        /// <summary>
        /// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
        /// </summary>
        [Input("zone", required: true)]
        public Input<string> Zone { get; set; } = null!;

        public GetSosBucketPolicyInvokeArgs()
        {
        }
        public static new GetSosBucketPolicyInvokeArgs Empty => new GetSosBucketPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetSosBucketPolicyResult
    {
        /// <summary>
        /// The name of the bucket to which the policy is to be applied.
        /// </summary>
        public readonly string Bucket;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The content of the policy
        /// </summary>
        public readonly string Policy;
        public readonly Outputs.GetSosBucketPolicyTimeoutsResult? Timeouts;
        /// <summary>
        /// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
        /// </summary>
        public readonly string Zone;

        [OutputConstructor]
        private GetSosBucketPolicyResult(
            string bucket,

            string id,

            string policy,

            Outputs.GetSosBucketPolicyTimeoutsResult? timeouts,

            string zone)
        {
            Bucket = bucket;
            Id = id;
            Policy = policy;
            Timeouts = timeouts;
            Zone = zone;
        }
    }
}
